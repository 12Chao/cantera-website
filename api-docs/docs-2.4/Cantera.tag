<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>AdsorbateThermo.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>AdsorbateThermo_8h</filename>
    <includes id="SpeciesThermoInterpType_8h" name="SpeciesThermoInterpType.h" local="yes" imported="no">SpeciesThermoInterpType.h</includes>
    <class kind="class">Cantera::Adsorbate</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>AnyMap.cpp</name>
    <path>/home/bryan/development/cantera/src/base/</path>
    <filename>AnyMap_8cpp</filename>
    <includes id="AnyMap_8h" name="AnyMap.h" local="yes" imported="no">cantera/base/AnyMap.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>AnyMap.h</name>
    <path>/home/bryan/development/cantera/include/cantera/base/</path>
    <filename>AnyMap_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <includes id="global_8h" name="global.h" local="yes" imported="no">cantera/base/global.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <includes id="AnyMap_8inl_8h" name="AnyMap.inl.h" local="yes" imported="no">cantera/base/AnyMap.inl.h</includes>
    <class kind="class">Cantera::AnyValue</class>
    <class kind="class">Cantera::AnyMap</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>AnyMap.inl.h</name>
    <path>/home/bryan/development/cantera/include/cantera/base/</path>
    <filename>AnyMap_8inl_8h</filename>
    <includes id="AnyMap_8h" name="AnyMap.h" local="yes" imported="no">cantera/base/AnyMap.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>application.cpp</name>
    <path>/home/bryan/development/cantera/src/base/</path>
    <filename>application_8cpp</filename>
    <includes id="application_8h" name="application.h" local="yes" imported="no">application.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="units_8h" name="units.h" local="yes" imported="no">units.h</includes>
    <namespace>Cantera</namespace>
    <member kind="variable" static="yes">
      <type>static std::mutex</type>
      <name>dir_mutex</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a97f6438f5726bfc429a9564024b83320</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::mutex</type>
      <name>app_mutex</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a615116df3fcccb3db99bb1f3356c3431</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::mutex</type>
      <name>xml_mutex</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a78fbb2cbb6082f89a036a4dbcafd1de9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::mutex</type>
      <name>msg_mutex</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aecc6aa3207993817d97745a083cf3b51</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>application.h</name>
    <path>/home/bryan/development/cantera/src/base/</path>
    <filename>application_8h</filename>
    <includes id="logger_8h" name="logger.h" local="yes" imported="no">cantera/base/logger.h</includes>
    <class kind="class">Cantera::Application</class>
    <class kind="class">Cantera::Application::Messages</class>
    <class kind="class">Cantera::Application::ThreadMessages</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>AqueousKinetics.cpp</name>
    <path>/home/bryan/development/cantera/src/kinetics/</path>
    <filename>AqueousKinetics_8cpp</filename>
    <includes id="AqueousKinetics_8h" name="AqueousKinetics.h" local="yes" imported="no">cantera/kinetics/AqueousKinetics.h</includes>
    <includes id="Reaction_8h" name="Reaction.h" local="yes" imported="no">cantera/kinetics/Reaction.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>AqueousKinetics.h</name>
    <path>/home/bryan/development/cantera/include/cantera/kinetics/</path>
    <filename>AqueousKinetics_8h</filename>
    <includes id="BulkKinetics_8h" name="BulkKinetics.h" local="yes" imported="no">BulkKinetics.h</includes>
    <class kind="class">Cantera::AqueousKinetics</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Array.h</name>
    <path>/home/bryan/development/cantera/include/cantera/base/</path>
    <filename>Array_8h</filename>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">utilities.h</includes>
    <class kind="class">Cantera::Array2D</class>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a196fb9d888040e5d5f64040b9464c4ae</anchor>
      <arglist>(std::ostream &amp;s, const Array2D &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator*=</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a0d8d81dfb21c174ee2b11a246bd7fd42</anchor>
      <arglist>(Array2D &amp;m, doublereal a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator+=</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a8547d8cd3cad210547bc79c7ef3ee349</anchor>
      <arglist>(Array2D &amp;x, const Array2D &amp;y)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BandMatrix.cpp</name>
    <path>/home/bryan/development/cantera/src/numerics/</path>
    <filename>BandMatrix_8cpp</filename>
    <includes id="BandMatrix_8h" name="BandMatrix.h" local="yes" imported="no">cantera/numerics/BandMatrix.h</includes>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">cantera/base/utilities.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a79d5ad9fd9e09b2a4f312101c4ca61f4</anchor>
      <arglist>(std::ostream &amp;s, const BandMatrix &amp;m)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BandMatrix.h</name>
    <path>/home/bryan/development/cantera/include/cantera/numerics/</path>
    <filename>BandMatrix_8h</filename>
    <includes id="GeneralMatrix_8h" name="GeneralMatrix.h" local="yes" imported="no">GeneralMatrix.h</includes>
    <class kind="class">Cantera::BandMatrix</class>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a79d5ad9fd9e09b2a4f312101c4ca61f4</anchor>
      <arglist>(std::ostream &amp;s, const BandMatrix &amp;m)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BasisOptimize.cpp</name>
    <path>/home/bryan/development/cantera/src/equil/</path>
    <filename>BasisOptimize_8cpp</filename>
    <includes id="MultiPhase_8h" name="MultiPhase.h" local="yes" imported="no">cantera/equil/MultiPhase.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>size_t</type>
      <name>BasisOptimize</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>ga736bfa5922a7dc8d12498e37b14652f5</anchor>
      <arglist>(int *usedZeroedSpecies, bool doFormRxn, MultiPhase *mphase, std::vector&lt; size_t &gt; &amp;orderVectorSpecies, std::vector&lt; size_t &gt; &amp;orderVectorElements, vector_fp &amp;formRxnMatrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ElemRearrange</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>ga8932a893caf09a6d1aef50d19238d7b0</anchor>
      <arglist>(size_t nComponents, const vector_fp &amp;elementAbundances, MultiPhase *mphase, std::vector&lt; size_t &gt; &amp;orderVectorSpecies, std::vector&lt; size_t &gt; &amp;orderVectorElements)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>BasisOptimize_print_lvl</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a971f6a305da78e68f47975d0bb15078a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>boundaries1D.cpp</name>
    <path>/home/bryan/development/cantera/src/oneD/</path>
    <filename>boundaries1D_8cpp</filename>
    <includes id="Inlet1D_8h" name="Inlet1D.h" local="yes" imported="no">cantera/oneD/Inlet1D.h</includes>
    <includes id="OneDim_8h" name="OneDim.h" local="yes" imported="no">cantera/oneD/OneDim.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="StFlow_8h" name="StFlow.h" local="yes" imported="no">cantera/oneD/StFlow.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>BulkKinetics.h</name>
    <path>/home/bryan/development/cantera/include/cantera/kinetics/</path>
    <filename>BulkKinetics_8h</filename>
    <includes id="Kinetics_8h" name="Kinetics.h" local="yes" imported="no">Kinetics.h</includes>
    <includes id="RateCoeffMgr_8h" name="RateCoeffMgr.h" local="yes" imported="no">RateCoeffMgr.h</includes>
    <class kind="class">Cantera::BulkKinetics</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>CarbonDioxide.cpp</name>
    <path>/home/bryan/development/cantera/src/tpx/</path>
    <filename>CarbonDioxide_8cpp</filename>
    <includes id="CarbonDioxide_8h" name="CarbonDioxide.h" local="yes" imported="no">CarbonDioxide.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
  </compound>
  <compound kind="file">
    <name>CarbonDioxide.h</name>
    <path>/home/bryan/development/cantera/src/tpx/</path>
    <filename>CarbonDioxide_8h</filename>
    <includes id="Sub_8h" name="Sub.h" local="yes" imported="no">cantera/tpx/Sub.h</includes>
    <class kind="class">tpx::CarbonDioxide</class>
  </compound>
  <compound kind="file">
    <name>checkFinite.cpp</name>
    <path>/home/bryan/development/cantera/src/base/</path>
    <filename>checkFinite_8cpp</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>void</type>
      <name>checkFinite</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a29e84e6914c4eae9fe064bfa1d06644e</anchor>
      <arglist>(const double tmp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkFinite</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ad15e699994b1acff285903b2325a4739</anchor>
      <arglist>(const std::string &amp;name, double *values, size_t N)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ChemEquil.cpp</name>
    <path>/home/bryan/development/cantera/src/equil/</path>
    <filename>ChemEquil_8cpp</filename>
    <includes id="ChemEquil_8h" name="ChemEquil.h" local="yes" imported="no">cantera/equil/ChemEquil.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="MultiPhaseEquil_8h" name="MultiPhaseEquil.h" local="yes" imported="no">cantera/equil/MultiPhaseEquil.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>int</type>
      <name>_equilflag</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa81b73d3f20e04eb31424ca8db7406bf</anchor>
      <arglist>(const char *xy)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ChemEquil.h</name>
    <path>/home/bryan/development/cantera/include/cantera/equil/</path>
    <filename>ChemEquil_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <includes id="ThermoPhase_8h" name="ThermoPhase.h" local="yes" imported="no">cantera/thermo/ThermoPhase.h</includes>
    <class kind="class">Cantera::EquilOpt</class>
    <class kind="class">Cantera::ChemEquil</class>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>int</type>
      <name>_equilflag</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa81b73d3f20e04eb31424ca8db7406bf</anchor>
      <arglist>(const char *xy)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clib_defs.h</name>
    <path>/home/bryan/development/cantera/include/cantera/clib/</path>
    <filename>clib__defs_8h</filename>
  </compound>
  <compound kind="file">
    <name>clockWC.cpp</name>
    <path>/home/bryan/development/cantera/src/base/</path>
    <filename>clockWC_8cpp</filename>
    <includes id="clockWC_8h" name="clockWC.h" local="yes" imported="no">cantera/base/clockWC.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>clockWC.h</name>
    <path>/home/bryan/development/cantera/include/cantera/base/</path>
    <filename>clockWC_8h</filename>
    <class kind="class">Cantera::clockWC</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ConstCpPoly.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>ConstCpPoly_8cpp</filename>
    <includes id="ConstCpPoly_8h" name="ConstCpPoly.h" local="yes" imported="no">cantera/thermo/ConstCpPoly.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ConstCpPoly.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>ConstCpPoly_8h</filename>
    <includes id="SpeciesThermoInterpType_8h" name="SpeciesThermoInterpType.h" local="yes" imported="no">cantera/thermo/SpeciesThermoInterpType.h</includes>
    <class kind="class">Cantera::ConstCpPoly</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ConstDensityThermo.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>ConstDensityThermo_8cpp</filename>
    <includes id="ConstDensityThermo_8h" name="ConstDensityThermo.h" local="yes" imported="no">cantera/thermo/ConstDensityThermo.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ConstDensityThermo.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>ConstDensityThermo_8h</filename>
    <includes id="ThermoPhase_8h" name="ThermoPhase.h" local="yes" imported="no">ThermoPhase.h</includes>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">cantera/base/utilities.h</includes>
    <class kind="class">Cantera::ConstDensityThermo</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ConstPressureReactor.cpp</name>
    <path>/home/bryan/development/cantera/src/zeroD/</path>
    <filename>ConstPressureReactor_8cpp</filename>
    <includes id="ConstPressureReactor_8h" name="ConstPressureReactor.h" local="yes" imported="no">cantera/zeroD/ConstPressureReactor.h</includes>
    <includes id="FlowDevice_8h" name="FlowDevice.h" local="yes" imported="no">cantera/zeroD/FlowDevice.h</includes>
    <includes id="Wall_8h" name="Wall.h" local="yes" imported="no">cantera/zeroD/Wall.h</includes>
    <includes id="SurfPhase_8h" name="SurfPhase.h" local="yes" imported="no">cantera/thermo/SurfPhase.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ConstPressureReactor.h</name>
    <path>/home/bryan/development/cantera/include/cantera/zeroD/</path>
    <filename>ConstPressureReactor_8h</filename>
    <includes id="Reactor_8h" name="Reactor.h" local="yes" imported="no">Reactor.h</includes>
    <class kind="class">Cantera::ConstPressureReactor</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ct.h</name>
    <path>/home/bryan/development/cantera/include/cantera/clib/</path>
    <filename>ct_8h</filename>
    <includes id="clib__defs_8h" name="clib_defs.h" local="yes" imported="no">clib_defs.h</includes>
  </compound>
  <compound kind="file">
    <name>ct2ctml.cpp</name>
    <path>/home/bryan/development/cantera/src/base/</path>
    <filename>ct2ctml_8cpp</filename>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>pypath</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa62a9244f884831f2532e5b749dd7441</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ct2ctml</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga106f302af6a947a6222a3450a5b888ab</anchor>
      <arglist>(const char *file, const int debug=0)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ct2ctml_string</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga3a8555f1c9005ce92613f4a0586942d3</anchor>
      <arglist>(const std::string &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ct_string2ctml_string</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga8eae1f606cb70310c81d4514bca5a3ba</anchor>
      <arglist>(const std::string &amp;cti)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ck2cti</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a6ea9a1b95781324c5037061411f9f5c3</anchor>
      <arglist>(const std::string &amp;in_file, const std::string &amp;thermo_file=&quot;&quot;, const std::string &amp;transport_file=&quot;&quot;, const std::string &amp;id_tag=&quot;gas&quot;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ct_defs.h</name>
    <path>/home/bryan/development/cantera/include/cantera/base/</path>
    <filename>ct__defs_8h</filename>
    <namespace>Cantera</namespace>
    <member kind="typedef">
      <type>std::map&lt; std::string, doublereal &gt;</type>
      <name>compositionMap</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>af8df6ec5637fd288b82a7704a3b3a9af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, doublereal &gt;</type>
      <name>Composition</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a754330c8cca869ea8b63ecd351ba6bc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; double &gt;</type>
      <name>vector_fp</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a8a71f536c7e45bda27ec0f1df26e6420</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; int &gt;</type>
      <name>vector_int</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a7d0431e3a93eea8d736432705e278a76</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::vector&lt; size_t &gt; &gt;</type>
      <name>grouplist_t</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a157eb59b3f697ff928661f3b7aef12b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Pi</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga6395b4dda659056caf8bea67cee91ed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>SmallNumber</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a620178f0e64739ba7edc2d92e7612421</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>BigNumber</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>acb8c7090811b6c23e8c5bba31777293c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>MaxExp</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a18665fa75bd54f64a3169777ed6a4649</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Undef</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a87554f2f78829cfab3e24fd5b9d639f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Tiny</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a536fca86a6efdb9584841051dfc2aad7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const size_t</type>
      <name>npos</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a03aff983f503a71029aecb707175b2ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Avogadro</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga13c1ec6c47259bed7355fc720a29a0b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>GasConstant</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga44a56836574d1fc6fd84c967db70b7b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>OneAtm</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga9da8bef82ee3cb7c2dbc24db228dfe93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>GasConst_cal_mol_K</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga6388cd7e5aae34f4376b0724671c11eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Boltzmann</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga0cf831b5d448e4bb751b208cda6a66b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Planck</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga57e67f233ce848dd19b39bd37c9cc5fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>logBoltz_Planck</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>gacbd679241009c4fa4d8a9a6383d8f9d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>StefanBoltz</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>gadb1075d73597bef95dc8145a547daae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>lightSpeed</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>gaa3d6cfaeb133f8c31e04fce60ca2e1b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>permeability_0</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>gab22d639371d869b2634e98ff1a39323c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>epsilon_0</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga620b239773cfc5db63210835e09daaea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Avogadro</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga13c1ec6c47259bed7355fc720a29a0b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>GasConstant</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga44a56836574d1fc6fd84c967db70b7b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>OneAtm</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga9da8bef82ee3cb7c2dbc24db228dfe93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>GasConst_cal_mol_K</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga6388cd7e5aae34f4376b0724671c11eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Boltzmann</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga0cf831b5d448e4bb751b208cda6a66b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Planck</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga57e67f233ce848dd19b39bd37c9cc5fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>logBoltz_Planck</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>gacbd679241009c4fa4d8a9a6383d8f9d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>StefanBoltz</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>gadb1075d73597bef95dc8145a547daae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>lightSpeed</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>gaa3d6cfaeb133f8c31e04fce60ca2e1b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>permeability_0</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>gab22d639371d869b2634e98ff1a39323c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>epsilon_0</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga620b239773cfc5db63210835e09daaea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ctexceptions.cpp</name>
    <path>/home/bryan/development/cantera/src/base/</path>
    <filename>ctexceptions_8cpp</filename>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <includes id="application_8h" name="application.h" local="yes" imported="no">application.h</includes>
    <includes id="global_8h" name="global.h" local="yes" imported="no">cantera/base/global.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ctexceptions.h</name>
    <path>/home/bryan/development/cantera/include/cantera/base/</path>
    <filename>ctexceptions_8h</filename>
    <includes id="fmt_8h" name="fmt.h" local="yes" imported="no">cantera/base/fmt.h</includes>
    <class kind="class">Cantera::CanteraError</class>
    <class kind="class">Cantera::ArraySizeError</class>
    <class kind="class">Cantera::IndexError</class>
    <class kind="class">Cantera::NotImplementedError</class>
    <namespace>Cantera</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XSTR_TRACE_LINE</name>
      <anchorfile>ctexceptions_8h.html</anchorfile>
      <anchor>aefb747ce1e3d520ee4338e1ad00e9354</anchor>
      <arglist>(s)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STR_TRACE_LINE</name>
      <anchorfile>ctexceptions_8h.html</anchorfile>
      <anchor>ae72cb0d0639b561e2abaefe3a60ab2b9</anchor>
      <arglist>(s)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STR_TRACE</name>
      <anchorfile>ctexceptions_8h.html</anchorfile>
      <anchor>a1c45625d7e03776310c7795e4ce42947</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AssertTrace</name>
      <anchorfile>group__errorhandling.html</anchorfile>
      <anchor>ga8d9d847a6c88e2b3e4df673d100e4594</anchor>
      <arglist>(expr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AssertThrow</name>
      <anchorfile>group__errorhandling.html</anchorfile>
      <anchor>ga41a50aa300b18c3bf4c4417332207bb6</anchor>
      <arglist>(expr, procedure)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AssertThrowMsg</name>
      <anchorfile>group__errorhandling.html</anchorfile>
      <anchor>gac25777fefb20a8d33b073aa7cb7a5811</anchor>
      <arglist>(expr, procedure,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AssertFinite</name>
      <anchorfile>ctexceptions_8h.html</anchorfile>
      <anchor>ac68b53216dc85e9a7925cfed1b01d908</anchor>
      <arglist>(expr, procedure,...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ctfunc.h</name>
    <path>/home/bryan/development/cantera/include/cantera/clib/</path>
    <filename>ctfunc_8h</filename>
    <includes id="clib__defs_8h" name="clib_defs.h" local="yes" imported="no">clib_defs.h</includes>
  </compound>
  <compound kind="file">
    <name>ctlapack.h</name>
    <path>/home/bryan/development/cantera/include/cantera/numerics/</path>
    <filename>ctlapack_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>doublereal</type>
      <name>ct_dtrcon</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a94f51f583caa7b9883cb1a1dba7bf63a</anchor>
      <arglist>(const char *norm, ctlapack::upperlower_t uplot, const char *diag, size_t n, doublereal *a, size_t lda, doublereal *work, int *iwork, int &amp;info)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ctml.cpp</name>
    <path>/home/bryan/development/cantera/src/base/</path>
    <filename>ctml_8cpp</filename>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">cantera/base/Array.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>void</type>
      <name>addFloat</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a4e40459194a52682b197f569c9b62166</anchor>
      <arglist>(XML_Node &amp;node, const std::string &amp;titleString, const doublereal value, const std::string &amp;unitsString=&quot;&quot;, const std::string &amp;typeString=&quot;&quot;, const doublereal minval=Undef, const doublereal maxval=Undef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFloatArray</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ad7e459e61d101fa9b2fa6830e31e912f</anchor>
      <arglist>(XML_Node &amp;node, const std::string &amp;titleString, const size_t n, const doublereal *const values, const std::string &amp;unitsString=&quot;&quot;, const std::string &amp;typeString=&quot;&quot;, const doublereal minval=Undef, const doublereal maxval=Undef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNamedFloatArray</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ad98432df36eb6daecd60077a2e23c247</anchor>
      <arglist>(XML_Node &amp;parentNode, const std::string &amp;name, const size_t n, const doublereal *const vals, const std::string units=&quot;&quot;, const std::string type=&quot;&quot;, const doublereal minval=Undef, const doublereal maxval=Undef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addString</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac6e65023b63f7dd2da9e4b3f2c9f0a8a</anchor>
      <arglist>(XML_Node &amp;node, const std::string &amp;titleString, const std::string &amp;valueString, const std::string &amp;typeString=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>getByTitle</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a22830fa43b159cc8d44cb2ec1136065a</anchor>
      <arglist>(const XML_Node &amp;node, const std::string &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getChildValue</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3e0985868e8a8cdb6edbcb343f34ff9d</anchor>
      <arglist>(const XML_Node &amp;parent, const std::string &amp;nameString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getString</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a05a96a4ce8aa80f5ac8b5758233ee7e1</anchor>
      <arglist>(const XML_Node &amp;node, const std::string &amp;titleString, std::string &amp;valueString, std::string &amp;typeString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getIntegers</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>afb627eac18e885fa109f9e1fbc89972c</anchor>
      <arglist>(const XML_Node &amp;node, std::map&lt; std::string, int &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>getFloat</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a2e9aaade157b93dc1eb37a0b9415fa17</anchor>
      <arglist>(const XML_Node &amp;parent, const std::string &amp;name, const std::string &amp;type=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>getFloatCurrent</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a25697ce0534df2d910858bce7679d723</anchor>
      <arglist>(const XML_Node &amp;currXML, const std::string &amp;type=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getOptionalFloat</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3030f811faac085d01d75f5458faa377</anchor>
      <arglist>(const XML_Node &amp;parent, const std::string &amp;name, doublereal &amp;fltRtn, const std::string &amp;type=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getOptionalModel</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a7567c346e5d8a2f93e9f3ad29d41192c</anchor>
      <arglist>(const XML_Node &amp;parent, const std::string &amp;nodeName, std::string &amp;modelName)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getInteger</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a9baf0207dd462de6f0f42889d050ee34</anchor>
      <arglist>(const XML_Node &amp;parent, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getFloatArray</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3788b1d5ec31632955bbe986507c92f9</anchor>
      <arglist>(const XML_Node &amp;node, vector_fp &amp;v, const bool convert=true, const std::string &amp;unitsString=&quot;&quot;, const std::string &amp;nodeName=&quot;floatArray&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMap</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>afe461e75516fdf27728de3395984a60e</anchor>
      <arglist>(const XML_Node &amp;node, std::map&lt; std::string, std::string &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPairs</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a7d1dd427ab9a4ccb2a79a54b2e5a1124</anchor>
      <arglist>(const XML_Node &amp;node, std::vector&lt; std::string &gt; &amp;key, std::vector&lt; std::string &gt; &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMatrixValues</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa68984c66e7a39219987d76e26947cba</anchor>
      <arglist>(const XML_Node &amp;node, const std::vector&lt; std::string &gt; &amp;keyStringRow, const std::vector&lt; std::string &gt; &amp;keyStringCol, Array2D &amp;returnValues, const bool convert=true, const bool matrixSymmetric=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getStringArray</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a13386d7c5da819b408b760ed48583e81</anchor>
      <arglist>(const XML_Node &amp;node, std::vector&lt; std::string &gt; &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ctml.h</name>
    <path>/home/bryan/development/cantera/include/cantera/base/</path>
    <filename>ctml_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">ct_defs.h</includes>
    <includes id="xml_8h" name="xml.h" local="yes" imported="no">xml.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>void</type>
      <name>addFloat</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a4e40459194a52682b197f569c9b62166</anchor>
      <arglist>(XML_Node &amp;node, const std::string &amp;titleString, const doublereal value, const std::string &amp;unitsString=&quot;&quot;, const std::string &amp;typeString=&quot;&quot;, const doublereal minval=Undef, const doublereal maxval=Undef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFloatArray</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ad7e459e61d101fa9b2fa6830e31e912f</anchor>
      <arglist>(XML_Node &amp;node, const std::string &amp;titleString, const size_t n, const doublereal *const values, const std::string &amp;unitsString=&quot;&quot;, const std::string &amp;typeString=&quot;&quot;, const doublereal minval=Undef, const doublereal maxval=Undef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNamedFloatArray</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ad98432df36eb6daecd60077a2e23c247</anchor>
      <arglist>(XML_Node &amp;parentNode, const std::string &amp;name, const size_t n, const doublereal *const vals, const std::string units=&quot;&quot;, const std::string type=&quot;&quot;, const doublereal minval=Undef, const doublereal maxval=Undef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addString</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac6e65023b63f7dd2da9e4b3f2c9f0a8a</anchor>
      <arglist>(XML_Node &amp;node, const std::string &amp;titleString, const std::string &amp;valueString, const std::string &amp;typeString=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getFloatArray</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3788b1d5ec31632955bbe986507c92f9</anchor>
      <arglist>(const XML_Node &amp;node, vector_fp &amp;v, const bool convert=true, const std::string &amp;unitsString=&quot;&quot;, const std::string &amp;nodeName=&quot;floatArray&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getStringArray</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a13386d7c5da819b408b760ed48583e81</anchor>
      <arglist>(const XML_Node &amp;node, std::vector&lt; std::string &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMap</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>afe461e75516fdf27728de3395984a60e</anchor>
      <arglist>(const XML_Node &amp;node, std::map&lt; std::string, std::string &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPairs</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a7d1dd427ab9a4ccb2a79a54b2e5a1124</anchor>
      <arglist>(const XML_Node &amp;node, std::vector&lt; std::string &gt; &amp;key, std::vector&lt; std::string &gt; &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMatrixValues</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa68984c66e7a39219987d76e26947cba</anchor>
      <arglist>(const XML_Node &amp;node, const std::vector&lt; std::string &gt; &amp;keyStringRow, const std::vector&lt; std::string &gt; &amp;keyStringCol, Array2D &amp;returnValues, const bool convert=true, const bool matrixSymmetric=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getIntegers</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>afb627eac18e885fa109f9e1fbc89972c</anchor>
      <arglist>(const XML_Node &amp;node, std::map&lt; std::string, int &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>getFloat</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a2e9aaade157b93dc1eb37a0b9415fa17</anchor>
      <arglist>(const XML_Node &amp;parent, const std::string &amp;name, const std::string &amp;type=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>getFloatCurrent</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a25697ce0534df2d910858bce7679d723</anchor>
      <arglist>(const XML_Node &amp;currXML, const std::string &amp;type=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getOptionalFloat</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3030f811faac085d01d75f5458faa377</anchor>
      <arglist>(const XML_Node &amp;parent, const std::string &amp;name, doublereal &amp;fltRtn, const std::string &amp;type=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getInteger</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a9baf0207dd462de6f0f42889d050ee34</anchor>
      <arglist>(const XML_Node &amp;parent, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getOptionalModel</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a7567c346e5d8a2f93e9f3ad29d41192c</anchor>
      <arglist>(const XML_Node &amp;parent, const std::string &amp;nodeName, std::string &amp;modelName)</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>getByTitle</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a22830fa43b159cc8d44cb2ec1136065a</anchor>
      <arglist>(const XML_Node &amp;node, const std::string &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getString</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a05a96a4ce8aa80f5ac8b5758233ee7e1</anchor>
      <arglist>(const XML_Node &amp;node, const std::string &amp;titleString, std::string &amp;valueString, std::string &amp;typeString)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getChildValue</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3e0985868e8a8cdb6edbcb343f34ff9d</anchor>
      <arglist>(const XML_Node &amp;parent, const std::string &amp;nameString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ct2ctml</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga106f302af6a947a6222a3450a5b888ab</anchor>
      <arglist>(const char *file, const int debug=0)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ct2ctml_string</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga3a8555f1c9005ce92613f4a0586942d3</anchor>
      <arglist>(const std::string &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ct_string2ctml_string</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga8eae1f606cb70310c81d4514bca5a3ba</anchor>
      <arglist>(const std::string &amp;cti)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ck2cti</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a6ea9a1b95781324c5037061411f9f5c3</anchor>
      <arglist>(const std::string &amp;in_file, const std::string &amp;thermo_file=&quot;&quot;, const std::string &amp;transport_file=&quot;&quot;, const std::string &amp;id_tag=&quot;gas&quot;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ctmultiphase.h</name>
    <path>/home/bryan/development/cantera/include/cantera/clib/</path>
    <filename>ctmultiphase_8h</filename>
    <includes id="clib__defs_8h" name="clib_defs.h" local="yes" imported="no">clib_defs.h</includes>
  </compound>
  <compound kind="file">
    <name>ctonedim.h</name>
    <path>/home/bryan/development/cantera/include/cantera/clib/</path>
    <filename>ctonedim_8h</filename>
    <includes id="clib__defs_8h" name="clib_defs.h" local="yes" imported="no">clib_defs.h</includes>
  </compound>
  <compound kind="file">
    <name>ctreactor.h</name>
    <path>/home/bryan/development/cantera/include/cantera/clib/</path>
    <filename>ctreactor_8h</filename>
    <includes id="clib__defs_8h" name="clib_defs.h" local="yes" imported="no">clib_defs.h</includes>
  </compound>
  <compound kind="file">
    <name>ctrpath.h</name>
    <path>/home/bryan/development/cantera/include/cantera/clib/</path>
    <filename>ctrpath_8h</filename>
    <includes id="clib__defs_8h" name="clib_defs.h" local="yes" imported="no">clib_defs.h</includes>
  </compound>
  <compound kind="file">
    <name>ctsurf.h</name>
    <path>/home/bryan/development/cantera/include/cantera/clib/</path>
    <filename>ctsurf_8h</filename>
    <includes id="clib__defs_8h" name="clib_defs.h" local="yes" imported="no">clib_defs.h</includes>
  </compound>
  <compound kind="file">
    <name>ctxml.h</name>
    <path>/home/bryan/development/cantera/include/cantera/clib/</path>
    <filename>ctxml_8h</filename>
    <includes id="clib__defs_8h" name="clib_defs.h" local="yes" imported="no">clib_defs.h</includes>
  </compound>
  <compound kind="file">
    <name>CVodesIntegrator.cpp</name>
    <path>/home/bryan/development/cantera/src/numerics/</path>
    <filename>CVodesIntegrator_8cpp</filename>
    <includes id="CVodesIntegrator_8h" name="CVodesIntegrator.h" local="yes" imported="no">cantera/numerics/CVodesIntegrator.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>cvodes_rhs</name>
      <anchorfile>group__odeGroup.html</anchorfile>
      <anchor>gad87a6eb827a82db1acecb31b45904bff</anchor>
      <arglist>(realtype t, N_Vector y, N_Vector ydot, void *f_data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>cvodes_err</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac7ca54e7988adfe9de5aef7060560895</anchor>
      <arglist>(int error_code, const char *module, const char *function, char *msg, void *eh_data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CVodesIntegrator.h</name>
    <path>/home/bryan/development/cantera/include/cantera/numerics/</path>
    <filename>CVodesIntegrator_8h</filename>
    <includes id="Integrator_8h" name="Integrator.h" local="yes" imported="no">cantera/numerics/Integrator.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <class kind="class">Cantera::CVodesIntegrator</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>DAE_Solver.h</name>
    <path>/home/bryan/development/cantera/include/cantera/numerics/</path>
    <filename>DAE__Solver_8h</filename>
    <includes id="ResidJacEval_8h" name="ResidJacEval.h" local="yes" imported="no">ResidJacEval.h</includes>
    <includes id="global_8h" name="global.h" local="yes" imported="no">cantera/base/global.h</includes>
    <class kind="class">Cantera::DAE_Solver</class>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>DAE_Solver *</type>
      <name>newDAE_Solver</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ad4841ce83ae942b738988ea5afae8e5b</anchor>
      <arglist>(const std::string &amp;itype, ResidJacEval &amp;f)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DAE_solvers.cpp</name>
    <path>/home/bryan/development/cantera/src/numerics/</path>
    <filename>DAE__solvers_8cpp</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <includes id="DAE__Solver_8h" name="DAE_Solver.h" local="yes" imported="no">cantera/numerics/DAE_Solver.h</includes>
    <includes id="IDA__Solver_8h" name="IDA_Solver.h" local="yes" imported="no">cantera/numerics/IDA_Solver.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>DAE_Solver *</type>
      <name>newDAE_Solver</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ad4841ce83ae942b738988ea5afae8e5b</anchor>
      <arglist>(const std::string &amp;itype, ResidJacEval &amp;f)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DebyeHuckel.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>DebyeHuckel_8cpp</filename>
    <includes id="DebyeHuckel_8h" name="DebyeHuckel.h" local="yes" imported="no">cantera/thermo/DebyeHuckel.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <includes id="PDSS__Water_8h" name="PDSS_Water.h" local="yes" imported="no">cantera/thermo/PDSS_Water.h</includes>
    <includes id="PDSS__ConstVol_8h" name="PDSS_ConstVol.h" local="yes" imported="no">cantera/thermo/PDSS_ConstVol.h</includes>
    <includes id="electrolytes_8h" name="electrolytes.h" local="yes" imported="no">cantera/thermo/electrolytes.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>interp_est</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>acc517896a9a24ffe5aab4bb7a3cc1559</anchor>
      <arglist>(const std::string &amp;estString)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DebyeHuckel.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>DebyeHuckel_8h</filename>
    <includes id="MolalityVPSSTP_8h" name="MolalityVPSSTP.h" local="yes" imported="no">MolalityVPSSTP.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">cantera/base/Array.h</includes>
    <class kind="class">Cantera::DebyeHuckel</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>DenseMatrix.cpp</name>
    <path>/home/bryan/development/cantera/src/numerics/</path>
    <filename>DenseMatrix_8cpp</filename>
    <includes id="DenseMatrix_8h" name="DenseMatrix.h" local="yes" imported="no">cantera/numerics/DenseMatrix.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>abf41d6a2dc65b70bb0d421f7e12903a4</anchor>
      <arglist>(DenseMatrix &amp;A, double *b, size_t nrhs=1, size_t ldb=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a6a9ec6d9fe6d17c419aa1da099ffa446</anchor>
      <arglist>(DenseMatrix &amp;A, DenseMatrix &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a392cc9ef6cbcaddaad995e07b493dba5</anchor>
      <arglist>(const DenseMatrix &amp;A, const double *const b, double *const prod)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>increment</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a018bef478f896ea394834cf776256a43</anchor>
      <arglist>(const DenseMatrix &amp;A, const double *const b, double *const prod)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>invert</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a7339626fa18383a1393d6f02e15fab20</anchor>
      <arglist>(DenseMatrix &amp;A, size_t nn=npos)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DenseMatrix.h</name>
    <path>/home/bryan/development/cantera/include/cantera/numerics/</path>
    <filename>DenseMatrix_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">cantera/base/Array.h</includes>
    <class kind="class">Cantera::DenseMatrix</class>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>abf41d6a2dc65b70bb0d421f7e12903a4</anchor>
      <arglist>(DenseMatrix &amp;A, double *b, size_t nrhs=1, size_t ldb=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a6a9ec6d9fe6d17c419aa1da099ffa446</anchor>
      <arglist>(DenseMatrix &amp;A, DenseMatrix &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a392cc9ef6cbcaddaad995e07b493dba5</anchor>
      <arglist>(const DenseMatrix &amp;A, const double *const b, double *const prod)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>increment</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a018bef478f896ea394834cf776256a43</anchor>
      <arglist>(const DenseMatrix &amp;A, const double *const b, double *const prod)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>invert</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a7339626fa18383a1393d6f02e15fab20</anchor>
      <arglist>(DenseMatrix &amp;A, size_t nn=npos)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Domain1D.cpp</name>
    <path>/home/bryan/development/cantera/src/oneD/</path>
    <filename>Domain1D_8cpp</filename>
    <includes id="Domain1D_8h" name="Domain1D.h" local="yes" imported="no">cantera/oneD/Domain1D.h</includes>
    <includes id="MultiJac_8h" name="MultiJac.h" local="yes" imported="no">cantera/oneD/MultiJac.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Domain1D.h</name>
    <path>/home/bryan/development/cantera/include/cantera/oneD/</path>
    <filename>Domain1D_8h</filename>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <includes id="global_8h" name="global.h" local="yes" imported="no">cantera/base/global.h</includes>
    <class kind="class">Cantera::Domain1D</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>DustyGasTransport.cpp</name>
    <path>/home/bryan/development/cantera/src/transport/</path>
    <filename>DustyGasTransport_8cpp</filename>
    <includes id="DustyGasTransport_8h" name="DustyGasTransport.h" local="yes" imported="no">cantera/transport/DustyGasTransport.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>DustyGasTransport.h</name>
    <path>/home/bryan/development/cantera/include/cantera/transport/</path>
    <filename>DustyGasTransport_8h</filename>
    <includes id="TransportBase_8h" name="TransportBase.h" local="yes" imported="no">TransportBase.h</includes>
    <includes id="DenseMatrix_8h" name="DenseMatrix.h" local="yes" imported="no">cantera/numerics/DenseMatrix.h</includes>
    <class kind="class">Cantera::DustyGasTransport</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Edge.h</name>
    <path>/home/bryan/development/cantera/include/cantera/</path>
    <filename>Edge_8h</filename>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">thermo/ThermoFactory.h</includes>
    <includes id="importKinetics_8h" name="importKinetics.h" local="yes" imported="no">kinetics/importKinetics.h</includes>
    <class kind="class">Cantera::Edge</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeKinetics.h</name>
    <path>/home/bryan/development/cantera/include/cantera/kinetics/</path>
    <filename>EdgeKinetics_8h</filename>
    <includes id="InterfaceKinetics_8h" name="InterfaceKinetics.h" local="yes" imported="no">InterfaceKinetics.h</includes>
    <class kind="class">Cantera::EdgeKinetics</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>EdgePhase.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>EdgePhase_8h</filename>
    <includes id="SurfPhase_8h" name="SurfPhase.h" local="yes" imported="no">SurfPhase.h</includes>
    <class kind="class">Cantera::EdgePhase</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>electrolytes.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>electrolytes_8h</filename>
    <namespace>Cantera</namespace>
    <member kind="variable">
      <type>const int</type>
      <name>cEST_solvent</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aecd6bfd9eb163aabaac0e004f2f5670c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Elements.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>Elements_8cpp</filename>
    <includes id="Elements_8h" name="Elements.h" local="yes" imported="no">cantera/thermo/Elements.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <class kind="struct">Cantera::atomicWeightData</class>
    <class kind="struct">Cantera::isotopeWeightData</class>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>double</type>
      <name>getElementWeight</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a6ffa774ab9003beec740bde528157c5b</anchor>
      <arglist>(const std::string &amp;ename)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getElementWeight</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ab77920c3d049a6277ca3504593da062f</anchor>
      <arglist>(int atomicNumber)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getElementSymbol</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a74995b4f0c5bbfb2c104f0739790a1bc</anchor>
      <arglist>(const std::string &amp;ename)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getElementSymbol</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ae632d9f6051df95d661e9baab31100e2</anchor>
      <arglist>(int atomicNumber)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getElementName</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a1a463f77ea130885b86ff51a45a70cc9</anchor>
      <arglist>(const std::string &amp;ename)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getElementName</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a8990e41387512d2bcf2f6cae07fe9f8d</anchor>
      <arglist>(int atomicNumber)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAtomicNumber</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a58a631351d1989d8e045a4728dbf3c01</anchor>
      <arglist>(const std::string &amp;ename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numElementsDefined</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aca69df92609d428b3db52ada4de47ba2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numIsotopesDefined</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3d5d662ae54a03e98f050d3ba4e0c401</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static struct atomicWeightData</type>
      <name>atomicWeightTable</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a0aeb2128c6956148ee590a8fb20d4e9b</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static struct isotopeWeightData</type>
      <name>isotopeWeightTable</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>afde788ec5a1775564d903a51bfd411b5</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Elements.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>Elements_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <namespace>Cantera</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ENTROPY298_UNKNOWN</name>
      <anchorfile>Elements_8h.html</anchorfile>
      <anchor>aec5d0ac3c2fb7a23fa8a18ad259d7d37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CT_ELEM_TYPE_TURNEDOFF</name>
      <anchorfile>Elements_8h.html</anchorfile>
      <anchor>ac0ef3f976ed7a42cf446b2771fa23849</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CT_ELEM_TYPE_ABSPOS</name>
      <anchorfile>Elements_8h.html</anchorfile>
      <anchor>a870596f658e6c437ed17bbf91e4913d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CT_ELEM_TYPE_ELECTRONCHARGE</name>
      <anchorfile>Elements_8h.html</anchorfile>
      <anchor>ab1ac7c05ca21fffe501a8b4ef4ec9849</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CT_ELEM_TYPE_CHARGENEUTRALITY</name>
      <anchorfile>Elements_8h.html</anchorfile>
      <anchor>a45584ad58ab79588ca16af1b545b63e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CT_ELEM_TYPE_LATTICERATIO</name>
      <anchorfile>Elements_8h.html</anchorfile>
      <anchor>ae33eb4a7f745d28cd90ef4f9d6e36e45</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CT_ELEM_TYPE_KINETICFROZEN</name>
      <anchorfile>Elements_8h.html</anchorfile>
      <anchor>ac6cf078cb5877a3dfcf83ff773be56cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CT_ELEM_TYPE_SURFACECONSTRAINT</name>
      <anchorfile>Elements_8h.html</anchorfile>
      <anchor>a164b5799f1de40e26888bec9cc35c4d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CT_ELEM_TYPE_OTHERCONSTRAINT</name>
      <anchorfile>Elements_8h.html</anchorfile>
      <anchor>ac9906a579ad4d0ec60891eae6d8c0066</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getElementWeight</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a6ffa774ab9003beec740bde528157c5b</anchor>
      <arglist>(const std::string &amp;ename)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getElementWeight</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ab77920c3d049a6277ca3504593da062f</anchor>
      <arglist>(int atomicNumber)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getElementSymbol</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a74995b4f0c5bbfb2c104f0739790a1bc</anchor>
      <arglist>(const std::string &amp;ename)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getElementSymbol</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ae632d9f6051df95d661e9baab31100e2</anchor>
      <arglist>(int atomicNumber)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getElementName</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a1a463f77ea130885b86ff51a45a70cc9</anchor>
      <arglist>(const std::string &amp;ename)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getElementName</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a8990e41387512d2bcf2f6cae07fe9f8d</anchor>
      <arglist>(int atomicNumber)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAtomicNumber</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a58a631351d1989d8e045a4728dbf3c01</anchor>
      <arglist>(const std::string &amp;ename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numElementsDefined</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aca69df92609d428b3db52ada4de47ba2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numIsotopesDefined</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3d5d662ae54a03e98f050d3ba4e0c401</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CT_ELEM_TYPE_TURNEDOFF</name>
      <anchorfile>Elements_8h.html</anchorfile>
      <anchor>ac0ef3f976ed7a42cf446b2771fa23849</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CT_ELEM_TYPE_ABSPOS</name>
      <anchorfile>Elements_8h.html</anchorfile>
      <anchor>a870596f658e6c437ed17bbf91e4913d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CT_ELEM_TYPE_ELECTRONCHARGE</name>
      <anchorfile>Elements_8h.html</anchorfile>
      <anchor>ab1ac7c05ca21fffe501a8b4ef4ec9849</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CT_ELEM_TYPE_CHARGENEUTRALITY</name>
      <anchorfile>Elements_8h.html</anchorfile>
      <anchor>a45584ad58ab79588ca16af1b545b63e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CT_ELEM_TYPE_LATTICERATIO</name>
      <anchorfile>Elements_8h.html</anchorfile>
      <anchor>ae33eb4a7f745d28cd90ef4f9d6e36e45</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CT_ELEM_TYPE_KINETICFROZEN</name>
      <anchorfile>Elements_8h.html</anchorfile>
      <anchor>ac6cf078cb5877a3dfcf83ff773be56cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CT_ELEM_TYPE_SURFACECONSTRAINT</name>
      <anchorfile>Elements_8h.html</anchorfile>
      <anchor>a164b5799f1de40e26888bec9cc35c4d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CT_ELEM_TYPE_OTHERCONSTRAINT</name>
      <anchorfile>Elements_8h.html</anchorfile>
      <anchor>ac9906a579ad4d0ec60891eae6d8c0066</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FactoryBase.h</name>
    <path>/home/bryan/development/cantera/include/cantera/base/</path>
    <filename>FactoryBase_8h</filename>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <includes id="global_8h" name="global.h" local="yes" imported="no">cantera/base/global.h</includes>
    <class kind="class">Cantera::FactoryBase</class>
    <class kind="class">Cantera::Factory</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Falloff.cpp</name>
    <path>/home/bryan/development/cantera/src/kinetics/</path>
    <filename>Falloff_8cpp</filename>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>FalloffFactory.cpp</name>
    <path>/home/bryan/development/cantera/src/kinetics/</path>
    <filename>FalloffFactory_8cpp</filename>
    <includes id="FalloffFactory_8h" name="FalloffFactory.h" local="yes" imported="no">cantera/kinetics/FalloffFactory.h</includes>
    <includes id="reaction__defs_8h" name="reaction_defs.h" local="yes" imported="no">cantera/kinetics/reaction_defs.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>shared_ptr&lt; Falloff &gt;</type>
      <name>newFalloff</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>acc1bf442821355102bff936010c94d78</anchor>
      <arglist>(int type, const vector_fp &amp;c)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FalloffFactory.h</name>
    <path>/home/bryan/development/cantera/include/cantera/kinetics/</path>
    <filename>FalloffFactory_8h</filename>
    <includes id="FactoryBase_8h" name="FactoryBase.h" local="yes" imported="no">cantera/base/FactoryBase.h</includes>
    <class kind="class">Cantera::FalloffFactory</class>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>shared_ptr&lt; Falloff &gt;</type>
      <name>newFalloff</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>acc1bf442821355102bff936010c94d78</anchor>
      <arglist>(int type, const vector_fp &amp;c)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FalloffMgr.h</name>
    <path>/home/bryan/development/cantera/include/cantera/kinetics/</path>
    <filename>FalloffMgr_8h</filename>
    <includes id="reaction__defs_8h" name="reaction_defs.h" local="yes" imported="no">reaction_defs.h</includes>
    <includes id="FalloffFactory_8h" name="FalloffFactory.h" local="yes" imported="no">FalloffFactory.h</includes>
    <includes id="global_8h" name="global.h" local="yes" imported="no">cantera/base/global.h</includes>
    <class kind="class">Cantera::FalloffMgr</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>FixedChemPotSSTP.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>FixedChemPotSSTP_8cpp</filename>
    <includes id="FixedChemPotSSTP_8h" name="FixedChemPotSSTP.h" local="yes" imported="no">cantera/thermo/FixedChemPotSSTP.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <includes id="SpeciesThermoFactory_8h" name="SpeciesThermoFactory.h" local="yes" imported="no">cantera/thermo/SpeciesThermoFactory.h</includes>
    <includes id="SpeciesThermoInterpType_8h" name="SpeciesThermoInterpType.h" local="yes" imported="no">cantera/thermo/SpeciesThermoInterpType.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>FixedChemPotSSTP.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>FixedChemPotSSTP_8h</filename>
    <includes id="SingleSpeciesTP_8h" name="SingleSpeciesTP.h" local="yes" imported="no">SingleSpeciesTP.h</includes>
    <class kind="class">Cantera::FixedChemPotSSTP</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>flowControllers.h</name>
    <path>/home/bryan/development/cantera/include/cantera/zeroD/</path>
    <filename>flowControllers_8h</filename>
    <includes id="FlowDevice_8h" name="FlowDevice.h" local="yes" imported="no">FlowDevice.h</includes>
    <includes id="ReactorBase_8h" name="ReactorBase.h" local="yes" imported="no">ReactorBase.h</includes>
    <includes id="Func1_8h" name="Func1.h" local="yes" imported="no">cantera/numerics/Func1.h</includes>
    <class kind="class">Cantera::MassFlowController</class>
    <class kind="class">Cantera::PressureController</class>
    <class kind="class">Cantera::Valve</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>FlowDevice.cpp</name>
    <path>/home/bryan/development/cantera/src/zeroD/</path>
    <filename>FlowDevice_8cpp</filename>
    <includes id="FlowDevice_8h" name="FlowDevice.h" local="yes" imported="no">cantera/zeroD/FlowDevice.h</includes>
    <includes id="ReactorBase_8h" name="ReactorBase.h" local="yes" imported="no">cantera/zeroD/ReactorBase.h</includes>
    <includes id="Func1_8h" name="Func1.h" local="yes" imported="no">cantera/numerics/Func1.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>FlowDevice.h</name>
    <path>/home/bryan/development/cantera/include/cantera/zeroD/</path>
    <filename>FlowDevice_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <includes id="global_8h" name="global.h" local="yes" imported="no">cantera/base/global.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <class kind="class">Cantera::FlowDevice</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>FlowReactor.cpp</name>
    <path>/home/bryan/development/cantera/src/zeroD/</path>
    <filename>FlowReactor_8cpp</filename>
    <includes id="FlowReactor_8h" name="FlowReactor.h" local="yes" imported="no">cantera/zeroD/FlowReactor.h</includes>
    <includes id="global_8h" name="global.h" local="yes" imported="no">cantera/base/global.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>FlowReactor.h</name>
    <path>/home/bryan/development/cantera/include/cantera/zeroD/</path>
    <filename>FlowReactor_8h</filename>
    <includes id="Reactor_8h" name="Reactor.h" local="yes" imported="no">Reactor.h</includes>
    <class kind="class">Cantera::FlowReactor</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>fmt.h</name>
    <path>/home/bryan/development/cantera/include/cantera/base/</path>
    <filename>fmt_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">ct_defs.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FMT_NO_FMT_STRING_ALIAS</name>
      <anchorfile>fmt_8h.html</anchorfile>
      <anchor>a7b1bb24a3a234972a6d2f8550819dc76</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FMT_HEADER_ONLY</name>
      <anchorfile>fmt_8h.html</anchorfile>
      <anchor>a27b3249db8d77bd236109bda307bc263</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Func1.cpp</name>
    <path>/home/bryan/development/cantera/src/numerics/</path>
    <filename>Func1_8cpp</filename>
    <includes id="Func1_8h" name="Func1.h" local="yes" imported="no">cantera/numerics/Func1.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Func1.h</name>
    <path>/home/bryan/development/cantera/include/cantera/numerics/</path>
    <filename>Func1_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <class kind="class">Cantera::Func1</class>
    <class kind="class">Cantera::Sin1</class>
    <class kind="class">Cantera::Cos1</class>
    <class kind="class">Cantera::Exp1</class>
    <class kind="class">Cantera::Pow1</class>
    <class kind="class">Cantera::Const1</class>
    <class kind="class">Cantera::Sum1</class>
    <class kind="class">Cantera::Diff1</class>
    <class kind="class">Cantera::Product1</class>
    <class kind="class">Cantera::TimesConstant1</class>
    <class kind="class">Cantera::PlusConstant1</class>
    <class kind="class">Cantera::Ratio1</class>
    <class kind="class">Cantera::Composite1</class>
    <class kind="class">Cantera::Gaussian</class>
    <class kind="class">Cantera::Poly1</class>
    <class kind="class">Cantera::Fourier1</class>
    <class kind="class">Cantera::Arrhenius1</class>
    <class kind="class">Cantera::Periodic1</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>FuncEval.h</name>
    <path>/home/bryan/development/cantera/include/cantera/numerics/</path>
    <filename>FuncEval_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <includes id="global_8h" name="global.h" local="yes" imported="no">cantera/base/global.h</includes>
    <class kind="class">Cantera::FuncEval</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>funcs.cpp</name>
    <path>/home/bryan/development/cantera/src/numerics/</path>
    <filename>funcs_8cpp</filename>
    <includes id="funcs_8h" name="funcs.h" local="yes" imported="no">cantera/numerics/funcs.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>doublereal</type>
      <name>linearInterp</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>acbb8c1713c4d8f56646652671a160897</anchor>
      <arglist>(doublereal x, const vector_fp &amp;xpts, const vector_fp &amp;fpts)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>funcs.h</name>
    <path>/home/bryan/development/cantera/include/cantera/numerics/</path>
    <filename>funcs_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>doublereal</type>
      <name>linearInterp</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>acbb8c1713c4d8f56646652671a160897</anchor>
      <arglist>(doublereal x, const vector_fp &amp;xpts, const vector_fp &amp;fpts)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GasKinetics.cpp</name>
    <path>/home/bryan/development/cantera/src/kinetics/</path>
    <filename>GasKinetics_8cpp</filename>
    <includes id="GasKinetics_8h" name="GasKinetics.h" local="yes" imported="no">cantera/kinetics/GasKinetics.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>GasKinetics.h</name>
    <path>/home/bryan/development/cantera/include/cantera/kinetics/</path>
    <filename>GasKinetics_8h</filename>
    <includes id="BulkKinetics_8h" name="BulkKinetics.h" local="yes" imported="no">BulkKinetics.h</includes>
    <includes id="ThirdBodyCalc_8h" name="ThirdBodyCalc.h" local="yes" imported="no">ThirdBodyCalc.h</includes>
    <includes id="FalloffMgr_8h" name="FalloffMgr.h" local="yes" imported="no">FalloffMgr.h</includes>
    <includes id="Reaction_8h" name="Reaction.h" local="yes" imported="no">Reaction.h</includes>
    <class kind="class">Cantera::GasKinetics</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>GasTransport.cpp</name>
    <path>/home/bryan/development/cantera/src/transport/</path>
    <filename>GasTransport_8cpp</filename>
    <includes id="GasTransport_8h" name="GasTransport.h" local="yes" imported="no">cantera/transport/GasTransport.h</includes>
    <includes id="MMCollisionInt_8h" name="MMCollisionInt.h" local="yes" imported="no">MMCollisionInt.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="polyfit_8h" name="polyfit.h" local="yes" imported="no">cantera/numerics/polyfit.h</includes>
    <includes id="TransportData_8h" name="TransportData.h" local="yes" imported="no">cantera/transport/TransportData.h</includes>
    <namespace>Cantera</namespace>
    <member kind="define">
      <type>#define</type>
      <name>COLL_INT_POLY_DEGREE</name>
      <anchorfile>GasTransport_8cpp.html</anchorfile>
      <anchor>a904b51176fd8bfd0ee54ea2297b0b68e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GasTransport.h</name>
    <path>/home/bryan/development/cantera/include/cantera/transport/</path>
    <filename>GasTransport_8h</filename>
    <includes id="TransportBase_8h" name="TransportBase.h" local="yes" imported="no">TransportBase.h</includes>
    <includes id="DenseMatrix_8h" name="DenseMatrix.h" local="yes" imported="no">cantera/numerics/DenseMatrix.h</includes>
    <class kind="class">Cantera::GasTransport</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>GeneralMatrix.h</name>
    <path>/home/bryan/development/cantera/include/cantera/numerics/</path>
    <filename>GeneralMatrix_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <includes id="global_8h" name="global.h" local="yes" imported="no">cantera/base/global.h</includes>
    <class kind="class">Cantera::GeneralMatrix</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>GibbsExcessVPSSTP.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>GibbsExcessVPSSTP_8cpp</filename>
    <includes id="GibbsExcessVPSSTP_8h" name="GibbsExcessVPSSTP.h" local="yes" imported="no">cantera/thermo/GibbsExcessVPSSTP.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>GibbsExcessVPSSTP.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>GibbsExcessVPSSTP_8h</filename>
    <includes id="VPStandardStateTP_8h" name="VPStandardStateTP.h" local="yes" imported="no">VPStandardStateTP.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">cantera/base/Array.h</includes>
    <class kind="class">Cantera::GibbsExcessVPSSTP</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>global.cpp</name>
    <path>/home/bryan/development/cantera/src/base/</path>
    <filename>global_8cpp</filename>
    <includes id="FactoryBase_8h" name="FactoryBase.h" local="yes" imported="no">cantera/base/FactoryBase.h</includes>
    <includes id="xml_8h" name="xml.h" local="yes" imported="no">cantera/base/xml.h</includes>
    <includes id="application_8h" name="application.h" local="yes" imported="no">application.h</includes>
    <includes id="units_8h" name="units.h" local="yes" imported="no">units.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function" static="yes">
      <type>static Application *</type>
      <name>app</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a51cd5e4d317ed6ce123d2445a10f9ca4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogger</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a40134534f5b00a810ec7b6de60378b00</anchor>
      <arglist>(Logger *logwriter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writelog_direct</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac4371032ffdcf9faa7bbf310f49d53c8</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writelogendl</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aed3c4e18a21f764dc088d5957bcef148</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>warn_deprecated</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ad5d610e093906d9c26b279745352299e</anchor>
      <arglist>(const std::string &amp;method, const std::string &amp;extra=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>suppress_deprecation_warnings</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a2ad83de9e93f370a39fde7c30dd5dea6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_deprecation_warnings_fatal</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a5c8f2df8777aeeb40a231aa3027e2c3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>suppress_thermo_warnings</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac489f7de1ec9e60d50297def82e69d19</anchor>
      <arglist>(bool suppress=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>thermo_warnings_suppressed</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3a8219ec9db18f6c28ba0713bd8f98c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appdelete</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>adcc9c84192cb754858eb96a9e34b8167</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>thread_complete</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa6775f4e79890dac1c4e5eea51c57a1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>gitCommit</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a8ff0b68f65e38bc61bfaebe8ef95d6da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>get_XML_File</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a235b0367c7f1d78a08cf52c4a8c5448c</anchor>
      <arglist>(const std::string &amp;file, int debug=0)</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>get_XML_from_string</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a72da66d231def86c76d798b44f35b93e</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close_XML_File</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a8ffba23a8e87a86a0398f8fe1c2fe350</anchor>
      <arglist>(const std::string &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDirectory</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga15d00255903692a4a0e7f014b51d6047</anchor>
      <arglist>(const std::string &amp;dir)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getDataDirectories</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga56eae1a5159c796885f800504ee1d266</anchor>
      <arglist>(const std::string &amp;sep)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>findInputFile</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga144465952eb1270d254a049a31411540</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>toSI</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac347fe3805bf56396b7080870c39d530</anchor>
      <arglist>(const std::string &amp;unit)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>actEnergyToSI</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a83a2955049d3f9c4a08df5992fd28dca</anchor>
      <arglist>(const std::string &amp;unit)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>canteraRoot</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>gac2afc73862050157954586c8e4936f8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>split_at_pound</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aedf15343bc08490ec818bd41f5072d49</anchor>
      <arglist>(const std::string &amp;src, std::string &amp;file, std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>get_XML_Node</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a5c17be21d38335121399e8215a915e05</anchor>
      <arglist>(const std::string &amp;file_ID, XML_Node *root)</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>get_XML_NameID</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>addf5bf4ba81ede1e1c4799e39de9e337</anchor>
      <arglist>(const std::string &amp;nameTarget, const std::string &amp;file_ID, XML_Node *root)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>global.h</name>
    <path>/home/bryan/development/cantera/include/cantera/base/</path>
    <filename>global_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">ct_defs.h</includes>
    <includes id="fmt_8h" name="fmt.h" local="yes" imported="no">cantera/base/fmt.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>findInputFile</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga144465952eb1270d254a049a31411540</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDirectory</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga15d00255903692a4a0e7f014b51d6047</anchor>
      <arglist>(const std::string &amp;dir)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getDataDirectories</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga56eae1a5159c796885f800504ee1d266</anchor>
      <arglist>(const std::string &amp;sep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appdelete</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>adcc9c84192cb754858eb96a9e34b8167</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>thread_complete</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa6775f4e79890dac1c4e5eea51c57a1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>gitCommit</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a8ff0b68f65e38bc61bfaebe8ef95d6da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>canteraRoot</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>gac2afc73862050157954586c8e4936f8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writelog_direct</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac4371032ffdcf9faa7bbf310f49d53c8</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debuglog</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a69717d95d14092b85ced84527e6a9c9f</anchor>
      <arglist>(const std::string &amp;msg, int loglevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writelog</name>
      <anchorfile>group__textlogs.html</anchorfile>
      <anchor>ga2eedeffda1cc6bf883021bfe4293820d</anchor>
      <arglist>(const std::string &amp;fmt, const Args &amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writelogf</name>
      <anchorfile>group__textlogs.html</anchorfile>
      <anchor>gabdb16f90da6cdd8ffd41054f948f3a89</anchor>
      <arglist>(const char *fmt, const Args &amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writelogendl</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aed3c4e18a21f764dc088d5957bcef148</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>warn_deprecated</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ad5d610e093906d9c26b279745352299e</anchor>
      <arglist>(const std::string &amp;method, const std::string &amp;extra=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>suppress_deprecation_warnings</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a2ad83de9e93f370a39fde7c30dd5dea6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_deprecation_warnings_fatal</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a5c8f2df8777aeeb40a231aa3027e2c3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>suppress_thermo_warnings</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac489f7de1ec9e60d50297def82e69d19</anchor>
      <arglist>(bool suppress=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>thermo_warnings_suppressed</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3a8219ec9db18f6c28ba0713bd8f98c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogger</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a40134534f5b00a810ec7b6de60378b00</anchor>
      <arglist>(Logger *logwriter)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>toSI</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac347fe3805bf56396b7080870c39d530</anchor>
      <arglist>(const std::string &amp;unit)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>actEnergyToSI</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a83a2955049d3f9c4a08df5992fd28dca</anchor>
      <arglist>(const std::string &amp;unit)</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>get_XML_File</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a235b0367c7f1d78a08cf52c4a8c5448c</anchor>
      <arglist>(const std::string &amp;file, int debug=0)</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>get_XML_from_string</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a72da66d231def86c76d798b44f35b93e</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close_XML_File</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a8ffba23a8e87a86a0398f8fe1c2fe350</anchor>
      <arglist>(const std::string &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>get_XML_Node</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a5c17be21d38335121399e8215a915e05</anchor>
      <arglist>(const std::string &amp;file_ID, XML_Node *root)</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>get_XML_NameID</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>addf5bf4ba81ede1e1c4799e39de9e337</anchor>
      <arglist>(const std::string &amp;nameTarget, const std::string &amp;file_ID, XML_Node *root)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>clip</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a9736f9063c7137a0df18e358ac2d1aea</anchor>
      <arglist>(const T &amp;value, const T &amp;lower, const T &amp;upper)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sign</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>acf38363aba441de9ad9f86932116003d</anchor>
      <arglist>(T x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Group.cpp</name>
    <path>/home/bryan/development/cantera/src/kinetics/</path>
    <filename>Group_8cpp</filename>
    <includes id="Group_8h" name="Group.h" local="yes" imported="no">cantera/kinetics/Group.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Group.h</name>
    <path>/home/bryan/development/cantera/include/cantera/kinetics/</path>
    <filename>Group_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <class kind="class">Cantera::Group</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Heptane.cpp</name>
    <path>/home/bryan/development/cantera/src/tpx/</path>
    <filename>Heptane_8cpp</filename>
    <includes id="Heptane_8h" name="Heptane.h" local="yes" imported="no">Heptane.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
  </compound>
  <compound kind="file">
    <name>Heptane.h</name>
    <path>/home/bryan/development/cantera/src/tpx/</path>
    <filename>Heptane_8h</filename>
    <includes id="Sub_8h" name="Sub.h" local="yes" imported="no">cantera/tpx/Sub.h</includes>
    <class kind="class">tpx::Heptane</class>
  </compound>
  <compound kind="file">
    <name>HFC134a.cpp</name>
    <path>/home/bryan/development/cantera/src/tpx/</path>
    <filename>HFC134a_8cpp</filename>
    <includes id="HFC134a_8h" name="HFC134a.h" local="yes" imported="no">HFC134a.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
  </compound>
  <compound kind="file">
    <name>HFC134a.h</name>
    <path>/home/bryan/development/cantera/src/tpx/</path>
    <filename>HFC134a_8h</filename>
    <includes id="Sub_8h" name="Sub.h" local="yes" imported="no">cantera/tpx/Sub.h</includes>
    <class kind="class">tpx::HFC134a</class>
  </compound>
  <compound kind="file">
    <name>HighPressureGasTransport.cpp</name>
    <path>/home/bryan/development/cantera/src/transport/</path>
    <filename>HighPressureGasTransport_8cpp</filename>
    <includes id="HighPressureGasTransport_8h" name="HighPressureGasTransport.h" local="yes" imported="no">cantera/transport/HighPressureGasTransport.h</includes>
    <includes id="ctlapack_8h" name="ctlapack.h" local="yes" imported="no">cantera/numerics/ctlapack.h</includes>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">cantera/base/utilities.h</includes>
    <includes id="TransportParams_8h" name="TransportParams.h" local="yes" imported="no">cantera/transport/TransportParams.h</includes>
    <includes id="IdealGasPhase_8h" name="IdealGasPhase.h" local="yes" imported="no">cantera/thermo/IdealGasPhase.h</includes>
    <includes id="TransportFactory_8h" name="TransportFactory.h" local="yes" imported="no">cantera/transport/TransportFactory.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="MultiTransport_8h" name="MultiTransport.h" local="yes" imported="no">cantera/transport/MultiTransport.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>HighPressureGasTransport.h</name>
    <path>/home/bryan/development/cantera/include/cantera/transport/</path>
    <filename>HighPressureGasTransport_8h</filename>
    <includes id="GasTransport_8h" name="GasTransport.h" local="yes" imported="no">GasTransport.h</includes>
    <includes id="DenseMatrix_8h" name="DenseMatrix.h" local="yes" imported="no">cantera/numerics/DenseMatrix.h</includes>
    <includes id="MultiTransport_8h" name="MultiTransport.h" local="yes" imported="no">cantera/transport/MultiTransport.h</includes>
    <class kind="class">Cantera::HighPressureGasTransport</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>HMWSoln.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>HMWSoln_8cpp</filename>
    <includes id="HMWSoln_8h" name="HMWSoln.h" local="yes" imported="no">cantera/thermo/HMWSoln.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <includes id="PDSS__Water_8h" name="PDSS_Water.h" local="yes" imported="no">cantera/thermo/PDSS_Water.h</includes>
    <includes id="electrolytes_8h" name="electrolytes.h" local="yes" imported="no">cantera/thermo/electrolytes.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>HMWSoln.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>HMWSoln_8h</filename>
    <includes id="MolalityVPSSTP_8h" name="MolalityVPSSTP.h" local="yes" imported="no">MolalityVPSSTP.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">cantera/base/Array.h</includes>
    <class kind="class">Cantera::HMWSoln</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Hydrogen.cpp</name>
    <path>/home/bryan/development/cantera/src/tpx/</path>
    <filename>Hydrogen_8cpp</filename>
    <includes id="Hydrogen_8h" name="Hydrogen.h" local="yes" imported="no">Hydrogen.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
  </compound>
  <compound kind="file">
    <name>Hydrogen.h</name>
    <path>/home/bryan/development/cantera/src/tpx/</path>
    <filename>Hydrogen_8h</filename>
    <includes id="Sub_8h" name="Sub.h" local="yes" imported="no">cantera/tpx/Sub.h</includes>
    <class kind="class">tpx::hydrogen</class>
  </compound>
  <compound kind="file">
    <name>IDA_Solver.cpp</name>
    <path>/home/bryan/development/cantera/src/numerics/</path>
    <filename>IDA__Solver_8cpp</filename>
    <includes id="IDA__Solver_8h" name="IDA_Solver.h" local="yes" imported="no">cantera/numerics/IDA_Solver.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <class kind="class">Cantera::ResidData</class>
    <namespace>Cantera</namespace>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>ida_resid</name>
      <anchorfile>IDA__Solver_8cpp.html</anchorfile>
      <anchor>a7c8eb72bb08f5705bd4685c22937e684</anchor>
      <arglist>(realtype t, N_Vector y, N_Vector ydot, N_Vector r, void *f_data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>ida_jacobian</name>
      <anchorfile>IDA__Solver_8cpp.html</anchorfile>
      <anchor>a1a5eda37799035a65d6fc531bf761bec</anchor>
      <arglist>(sd_size_t nrows, realtype t, realtype c_j, N_Vector y, N_Vector ydot, N_Vector r, DlsMat Jac, void *f_data, N_Vector tmp1, N_Vector tmp2, N_Vector tmp3)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>IDA_Solver.h</name>
    <path>/home/bryan/development/cantera/include/cantera/numerics/</path>
    <filename>IDA__Solver_8h</filename>
    <includes id="DAE__Solver_8h" name="DAE_Solver.h" local="yes" imported="no">DAE_Solver.h</includes>
    <class kind="class">Cantera::IDA_Solver</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>IdealGasMix.h</name>
    <path>/home/bryan/development/cantera/include/cantera/</path>
    <filename>IdealGasMix_8h</filename>
    <includes id="IdealGasPhase_8h" name="IdealGasPhase.h" local="yes" imported="no">thermo/IdealGasPhase.h</includes>
    <includes id="GasKinetics_8h" name="GasKinetics.h" local="yes" imported="no">kinetics/GasKinetics.h</includes>
    <includes id="importKinetics_8h" name="importKinetics.h" local="yes" imported="no">kinetics/importKinetics.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">base/stringUtils.h</includes>
    <class kind="class">Cantera::IdealGasMix</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>IdealGasPhase.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>IdealGasPhase_8cpp</filename>
    <includes id="IdealGasPhase_8h" name="IdealGasPhase.h" local="yes" imported="no">cantera/thermo/IdealGasPhase.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">cantera/base/utilities.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>IdealGasPhase.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>IdealGasPhase_8h</filename>
    <includes id="ThermoPhase_8h" name="ThermoPhase.h" local="yes" imported="no">ThermoPhase.h</includes>
    <class kind="class">Cantera::IdealGasPhase</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>IdealGasReactor.cpp</name>
    <path>/home/bryan/development/cantera/src/zeroD/</path>
    <filename>IdealGasReactor_8cpp</filename>
    <includes id="IdealGasReactor_8h" name="IdealGasReactor.h" local="yes" imported="no">cantera/zeroD/IdealGasReactor.h</includes>
    <includes id="FlowDevice_8h" name="FlowDevice.h" local="yes" imported="no">cantera/zeroD/FlowDevice.h</includes>
    <includes id="Wall_8h" name="Wall.h" local="yes" imported="no">cantera/zeroD/Wall.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>IdealGasReactor.h</name>
    <path>/home/bryan/development/cantera/include/cantera/zeroD/</path>
    <filename>IdealGasReactor_8h</filename>
    <includes id="Reactor_8h" name="Reactor.h" local="yes" imported="no">Reactor.h</includes>
    <class kind="class">Cantera::IdealGasReactor</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>IdealMolalSoln.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>IdealMolalSoln_8cpp</filename>
    <includes id="IdealMolalSoln_8h" name="IdealMolalSoln.h" local="yes" imported="no">cantera/thermo/IdealMolalSoln.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>IdealMolalSoln.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>IdealMolalSoln_8h</filename>
    <includes id="MolalityVPSSTP_8h" name="MolalityVPSSTP.h" local="yes" imported="no">MolalityVPSSTP.h</includes>
    <class kind="class">Cantera::IdealMolalSoln</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>IdealSolidSolnPhase.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>IdealSolidSolnPhase_8cpp</filename>
    <includes id="IdealSolidSolnPhase_8h" name="IdealSolidSolnPhase.h" local="yes" imported="no">cantera/thermo/IdealSolidSolnPhase.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">cantera/base/utilities.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>IdealSolidSolnPhase.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>IdealSolidSolnPhase_8h</filename>
    <includes id="ThermoPhase_8h" name="ThermoPhase.h" local="yes" imported="no">ThermoPhase.h</includes>
    <class kind="class">Cantera::IdealSolidSolnPhase</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>IdealSolnGasVPSS.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>IdealSolnGasVPSS_8cpp</filename>
    <includes id="IdealSolnGasVPSS_8h" name="IdealSolnGasVPSS.h" local="yes" imported="no">cantera/thermo/IdealSolnGasVPSS.h</includes>
    <includes id="PDSS_8h" name="PDSS.h" local="yes" imported="no">cantera/thermo/PDSS.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">cantera/base/utilities.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>IdealSolnGasVPSS.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>IdealSolnGasVPSS_8h</filename>
    <includes id="VPStandardStateTP_8h" name="VPStandardStateTP.h" local="yes" imported="no">VPStandardStateTP.h</includes>
    <class kind="class">Cantera::IdealSolnGasVPSS</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ImplicitSurfChem.cpp</name>
    <path>/home/bryan/development/cantera/src/kinetics/</path>
    <filename>ImplicitSurfChem_8cpp</filename>
    <includes id="ImplicitSurfChem_8h" name="ImplicitSurfChem.h" local="yes" imported="no">cantera/kinetics/ImplicitSurfChem.h</includes>
    <includes id="solveSP_8h" name="solveSP.h" local="yes" imported="no">cantera/kinetics/solveSP.h</includes>
    <includes id="SurfPhase_8h" name="SurfPhase.h" local="yes" imported="no">cantera/thermo/SurfPhase.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ImplicitSurfChem.h</name>
    <path>/home/bryan/development/cantera/include/cantera/kinetics/</path>
    <filename>ImplicitSurfChem_8h</filename>
    <includes id="Integrator_8h" name="Integrator.h" local="yes" imported="no">cantera/numerics/Integrator.h</includes>
    <includes id="InterfaceKinetics_8h" name="InterfaceKinetics.h" local="yes" imported="no">cantera/kinetics/InterfaceKinetics.h</includes>
    <includes id="solveSP_8h" name="solveSP.h" local="yes" imported="no">cantera/kinetics/solveSP.h</includes>
    <class kind="class">Cantera::ImplicitSurfChem</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>importKinetics.cpp</name>
    <path>/home/bryan/development/cantera/src/kinetics/</path>
    <filename>importKinetics_8cpp</filename>
    <includes id="importKinetics_8h" name="importKinetics.h" local="yes" imported="no">cantera/kinetics/importKinetics.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <includes id="Reaction_8h" name="Reaction.h" local="yes" imported="no">cantera/kinetics/Reaction.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>bool</type>
      <name>installReactionArrays</name>
      <anchorfile>group__kineticsmgr.html</anchorfile>
      <anchor>gacf1d3ddca3956fd62ce6096af3edd6b6</anchor>
      <arglist>(const XML_Node &amp;p, Kinetics &amp;kin, std::string default_phase, bool check_for_duplicates=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>importKinetics</name>
      <anchorfile>group__kineticsmgr.html</anchorfile>
      <anchor>ga222ca55d41ac03b0b6754e9f95d33c04</anchor>
      <arglist>(const XML_Node &amp;phase, std::vector&lt; ThermoPhase * &gt; th, Kinetics *kin)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>buildSolutionFromXML</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga4e74133eafef0f135fda21a954bcd588</anchor>
      <arglist>(XML_Node &amp;root, const std::string &amp;id, const std::string &amp;nm, ThermoPhase *th, Kinetics *kin)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkElectrochemReaction</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ade9113c4f07e177493983d1bd3442e1b</anchor>
      <arglist>(const XML_Node &amp;p, Kinetics &amp;kin, const XML_Node &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>importKinetics.h</name>
    <path>/home/bryan/development/cantera/include/cantera/kinetics/</path>
    <filename>importKinetics_8h</filename>
    <includes id="Kinetics_8h" name="Kinetics.h" local="yes" imported="no">Kinetics.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>bool</type>
      <name>installReactionArrays</name>
      <anchorfile>group__kineticsmgr.html</anchorfile>
      <anchor>gacf1d3ddca3956fd62ce6096af3edd6b6</anchor>
      <arglist>(const XML_Node &amp;p, Kinetics &amp;kin, std::string default_phase, bool check_for_duplicates=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>importKinetics</name>
      <anchorfile>group__kineticsmgr.html</anchorfile>
      <anchor>ga222ca55d41ac03b0b6754e9f95d33c04</anchor>
      <arglist>(const XML_Node &amp;phase, std::vector&lt; ThermoPhase * &gt; th, Kinetics *kin)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>buildSolutionFromXML</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga4e74133eafef0f135fda21a954bcd588</anchor>
      <arglist>(XML_Node &amp;root, const std::string &amp;id, const std::string &amp;nm, ThermoPhase *th, Kinetics *kin)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkElectrochemReaction</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ade9113c4f07e177493983d1bd3442e1b</anchor>
      <arglist>(const XML_Node &amp;p, Kinetics &amp;kin, const XML_Node &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>IncompressibleSolid.h</name>
    <path>/home/bryan/development/cantera/include/cantera/</path>
    <filename>IncompressibleSolid_8h</filename>
    <includes id="ConstDensityThermo_8h" name="ConstDensityThermo.h" local="yes" imported="no">thermo/ConstDensityThermo.h</includes>
    <includes id="importKinetics_8h" name="importKinetics.h" local="yes" imported="no">kinetics/importKinetics.h</includes>
    <class kind="class">Cantera::IncompressibleSolid</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Inlet1D.h</name>
    <path>/home/bryan/development/cantera/include/cantera/oneD/</path>
    <filename>Inlet1D_8h</filename>
    <includes id="Domain1D_8h" name="Domain1D.h" local="yes" imported="no">Domain1D.h</includes>
    <includes id="SurfPhase_8h" name="SurfPhase.h" local="yes" imported="no">cantera/thermo/SurfPhase.h</includes>
    <includes id="InterfaceKinetics_8h" name="InterfaceKinetics.h" local="yes" imported="no">cantera/kinetics/InterfaceKinetics.h</includes>
    <includes id="StFlow_8h" name="StFlow.h" local="yes" imported="no">StFlow.h</includes>
    <class kind="class">Cantera::Bdry1D</class>
    <class kind="class">Cantera::Inlet1D</class>
    <class kind="class">Cantera::Empty1D</class>
    <class kind="class">Cantera::Symm1D</class>
    <class kind="class">Cantera::Outlet1D</class>
    <class kind="class">Cantera::OutletRes1D</class>
    <class kind="class">Cantera::Surf1D</class>
    <class kind="class">Cantera::ReactingSurf1D</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Integrator.h</name>
    <path>/home/bryan/development/cantera/include/cantera/numerics/</path>
    <filename>Integrator_8h</filename>
    <includes id="FuncEval_8h" name="FuncEval.h" local="yes" imported="no">FuncEval.h</includes>
    <includes id="global_8h" name="global.h" local="yes" imported="no">cantera/base/global.h</includes>
    <class kind="class">Cantera::Integrator</class>
    <namespace>Cantera</namespace>
    <member kind="enumeration">
      <type></type>
      <name>MethodType</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3006a5b9309b36eaa1cf179f1478b0cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BDF_Method</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3006a5b9309b36eaa1cf179f1478b0cda4dc224281882265419659bf9d90f15b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Adams_Method</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3006a5b9309b36eaa1cf179f1478b0cdad950bbf592683bbbf0816360eb721ddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IterType</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>af607f22e4873b3369e942d9ebb3e72b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Newton_Iter</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>af607f22e4873b3369e942d9ebb3e72b1aeff5fa7914600993f92bb2f1720a1474</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Functional_Iter</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>af607f22e4873b3369e942d9ebb3e72b1a80786b849d31f44e4d4413d886c6d406</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Interface.h</name>
    <path>/home/bryan/development/cantera/include/cantera/</path>
    <filename>Interface_8h</filename>
    <includes id="thermo_8h" name="thermo.h" local="yes" imported="no">thermo.h</includes>
    <includes id="kinetics_8h" name="kinetics.h" local="yes" imported="no">kinetics.h</includes>
    <includes id="SurfPhase_8h" name="SurfPhase.h" local="yes" imported="no">cantera/thermo/SurfPhase.h</includes>
    <includes id="InterfaceKinetics_8h" name="InterfaceKinetics.h" local="yes" imported="no">cantera/kinetics/InterfaceKinetics.h</includes>
    <class kind="class">Cantera::Interface</class>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>Interface *</type>
      <name>importInterface</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac1f125d6c96ab7a96c6f7665a4562e95</anchor>
      <arglist>(const std::string &amp;infile, const std::string &amp;id, std::vector&lt; ThermoPhase *&gt; phases)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>InterfaceKinetics.cpp</name>
    <path>/home/bryan/development/cantera/src/kinetics/</path>
    <filename>InterfaceKinetics_8cpp</filename>
    <includes id="InterfaceKinetics_8h" name="InterfaceKinetics.h" local="yes" imported="no">cantera/kinetics/InterfaceKinetics.h</includes>
    <includes id="RateCoeffMgr_8h" name="RateCoeffMgr.h" local="yes" imported="no">cantera/kinetics/RateCoeffMgr.h</includes>
    <includes id="ImplicitSurfChem_8h" name="ImplicitSurfChem.h" local="yes" imported="no">cantera/kinetics/ImplicitSurfChem.h</includes>
    <includes id="SurfPhase_8h" name="SurfPhase.h" local="yes" imported="no">cantera/thermo/SurfPhase.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>InterfaceKinetics.h</name>
    <path>/home/bryan/development/cantera/include/cantera/kinetics/</path>
    <filename>InterfaceKinetics_8h</filename>
    <includes id="Kinetics_8h" name="Kinetics.h" local="yes" imported="no">Kinetics.h</includes>
    <includes id="Reaction_8h" name="Reaction.h" local="yes" imported="no">Reaction.h</includes>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">cantera/base/utilities.h</includes>
    <includes id="RateCoeffMgr_8h" name="RateCoeffMgr.h" local="yes" imported="no">RateCoeffMgr.h</includes>
    <class kind="class">Cantera::InterfaceKinetics</class>
    <class kind="struct">Cantera::InterfaceKinetics::StickData</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>IonFlow.cpp</name>
    <path>/home/bryan/development/cantera/src/oneD/</path>
    <filename>IonFlow_8cpp</filename>
    <includes id="IonFlow_8h" name="IonFlow.h" local="yes" imported="no">cantera/oneD/IonFlow.h</includes>
    <includes id="StFlow_8h" name="StFlow.h" local="yes" imported="no">cantera/oneD/StFlow.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="TransportBase_8h" name="TransportBase.h" local="yes" imported="no">cantera/transport/TransportBase.h</includes>
    <includes id="funcs_8h" name="funcs.h" local="yes" imported="no">cantera/numerics/funcs.h</includes>
    <includes id="polyfit_8h" name="polyfit.h" local="yes" imported="no">cantera/numerics/polyfit.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>IonFlow.h</name>
    <path>/home/bryan/development/cantera/include/cantera/oneD/</path>
    <filename>IonFlow_8h</filename>
    <includes id="StFlow_8h" name="StFlow.h" local="yes" imported="no">cantera/oneD/StFlow.h</includes>
    <class kind="class">Cantera::IonFlow</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>IonGasTransport.cpp</name>
    <path>/home/bryan/development/cantera/src/transport/</path>
    <filename>IonGasTransport_8cpp</filename>
    <includes id="IonGasTransport_8h" name="IonGasTransport.h" local="yes" imported="no">cantera/transport/IonGasTransport.h</includes>
    <includes id="polyfit_8h" name="polyfit.h" local="yes" imported="no">cantera/numerics/polyfit.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="MMCollisionInt_8h" name="MMCollisionInt.h" local="yes" imported="no">MMCollisionInt.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>IonGasTransport.h</name>
    <path>/home/bryan/development/cantera/include/cantera/transport/</path>
    <filename>IonGasTransport_8h</filename>
    <includes id="MixTransport_8h" name="MixTransport.h" local="yes" imported="no">MixTransport.h</includes>
    <class kind="class">Cantera::IonGasTransport</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>IonsFromNeutralVPSSTP.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>IonsFromNeutralVPSSTP_8cpp</filename>
    <includes id="IonsFromNeutralVPSSTP_8h" name="IonsFromNeutralVPSSTP.h" local="yes" imported="no">cantera/thermo/IonsFromNeutralVPSSTP.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <includes id="PDSS__IonsFromNeutral_8h" name="PDSS_IonsFromNeutral.h" local="yes" imported="no">cantera/thermo/PDSS_IonsFromNeutral.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>factorOverlap</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ab2a642a08c4f885a7dce25f4b1e99acb</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;elnamesVN, const vector_fp &amp;elemVectorN, const size_t nElementsN, const std::vector&lt; std::string &gt; &amp;elnamesVI, const vector_fp &amp;elemVectorI, const size_t nElementsI)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>IonsFromNeutralVPSSTP.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>IonsFromNeutralVPSSTP_8h</filename>
    <includes id="GibbsExcessVPSSTP_8h" name="GibbsExcessVPSSTP.h" local="yes" imported="no">GibbsExcessVPSSTP.h</includes>
    <class kind="class">Cantera::IonsFromNeutralVPSSTP</class>
    <namespace>Cantera</namespace>
    <member kind="enumeration">
      <type></type>
      <name>IonSolnType_enumType</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a88d70d235195ec2b52777864ad4c8f25</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Kinetics.cpp</name>
    <path>/home/bryan/development/cantera/src/kinetics/</path>
    <filename>Kinetics_8cpp</filename>
    <includes id="Kinetics_8h" name="Kinetics.h" local="yes" imported="no">cantera/kinetics/Kinetics.h</includes>
    <includes id="Reaction_8h" name="Reaction.h" local="yes" imported="no">cantera/kinetics/Reaction.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>kinetics.h</name>
    <path>/home/bryan/development/cantera/include/cantera/</path>
    <filename>kinetics_8h</filename>
    <includes id="Kinetics_8h" name="Kinetics.h" local="yes" imported="no">kinetics/Kinetics.h</includes>
    <includes id="Reaction_8h" name="Reaction.h" local="yes" imported="no">kinetics/Reaction.h</includes>
    <includes id="KineticsFactory_8h" name="KineticsFactory.h" local="yes" imported="no">kinetics/KineticsFactory.h</includes>
    <includes id="importKinetics_8h" name="importKinetics.h" local="yes" imported="no">kinetics/importKinetics.h</includes>
  </compound>
  <compound kind="file">
    <name>Kinetics.h</name>
    <path>/home/bryan/development/cantera/include/cantera/kinetics/</path>
    <filename>Kinetics_8h</filename>
    <includes id="ThermoPhase_8h" name="ThermoPhase.h" local="yes" imported="no">cantera/thermo/ThermoPhase.h</includes>
    <includes id="StoichManager_8h" name="StoichManager.h" local="yes" imported="no">StoichManager.h</includes>
    <includes id="Reaction_8h" name="Reaction.h" local="yes" imported="no">cantera/kinetics/Reaction.h</includes>
    <includes id="global_8h" name="global.h" local="yes" imported="no">cantera/base/global.h</includes>
    <class kind="class">Cantera::Kinetics</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>KineticsFactory.cpp</name>
    <path>/home/bryan/development/cantera/src/kinetics/</path>
    <filename>KineticsFactory_8cpp</filename>
    <includes id="KineticsFactory_8h" name="KineticsFactory.h" local="yes" imported="no">cantera/kinetics/KineticsFactory.h</includes>
    <includes id="GasKinetics_8h" name="GasKinetics.h" local="yes" imported="no">cantera/kinetics/GasKinetics.h</includes>
    <includes id="InterfaceKinetics_8h" name="InterfaceKinetics.h" local="yes" imported="no">cantera/kinetics/InterfaceKinetics.h</includes>
    <includes id="EdgeKinetics_8h" name="EdgeKinetics.h" local="yes" imported="no">cantera/kinetics/EdgeKinetics.h</includes>
    <includes id="importKinetics_8h" name="importKinetics.h" local="yes" imported="no">cantera/kinetics/importKinetics.h</includes>
    <includes id="AqueousKinetics_8h" name="AqueousKinetics.h" local="yes" imported="no">cantera/kinetics/AqueousKinetics.h</includes>
    <includes id="xml_8h" name="xml.h" local="yes" imported="no">cantera/base/xml.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>KineticsFactory.h</name>
    <path>/home/bryan/development/cantera/include/cantera/kinetics/</path>
    <filename>KineticsFactory_8h</filename>
    <includes id="Kinetics_8h" name="Kinetics.h" local="yes" imported="no">Kinetics.h</includes>
    <includes id="FactoryBase_8h" name="FactoryBase.h" local="yes" imported="no">cantera/base/FactoryBase.h</includes>
    <class kind="class">Cantera::KineticsFactory</class>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>Kinetics *</type>
      <name>newKineticsMgr</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa684e9b460945a1276509b86e841bfb7</anchor>
      <arglist>(XML_Node &amp;phase, std::vector&lt; ThermoPhase *&gt; th)</arglist>
    </member>
    <member kind="function">
      <type>Kinetics *</type>
      <name>newKineticsMgr</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>af01176e344b03cd52f5797aeade8eb30</anchor>
      <arglist>(const std::string &amp;model)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LatticePhase.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>LatticePhase_8cpp</filename>
    <includes id="LatticePhase_8h" name="LatticePhase.h" local="yes" imported="no">cantera/thermo/LatticePhase.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">cantera/base/utilities.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>LatticePhase.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>LatticePhase_8h</filename>
    <includes id="ThermoPhase_8h" name="ThermoPhase.h" local="yes" imported="no">ThermoPhase.h</includes>
    <class kind="class">Cantera::LatticePhase</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>LatticeSolidPhase.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>LatticeSolidPhase_8cpp</filename>
    <includes id="LatticeSolidPhase_8h" name="LatticeSolidPhase.h" local="yes" imported="no">cantera/thermo/LatticeSolidPhase.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <includes id="SpeciesThermoFactory_8h" name="SpeciesThermoFactory.h" local="yes" imported="no">cantera/thermo/SpeciesThermoFactory.h</includes>
    <includes id="MultiSpeciesThermo_8h" name="MultiSpeciesThermo.h" local="yes" imported="no">cantera/thermo/MultiSpeciesThermo.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">cantera/base/utilities.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>LatticeSolidPhase.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>LatticeSolidPhase_8h</filename>
    <includes id="ThermoPhase_8h" name="ThermoPhase.h" local="yes" imported="no">ThermoPhase.h</includes>
    <class kind="class">Cantera::LatticeSolidPhase</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>LiquidTranInteraction.cpp</name>
    <path>/home/bryan/development/cantera/src/transport/</path>
    <filename>LiquidTranInteraction_8cpp</filename>
    <includes id="LiquidTransportParams_8h" name="LiquidTransportParams.h" local="yes" imported="no">cantera/transport/LiquidTransportParams.h</includes>
    <includes id="IonsFromNeutralVPSSTP_8h" name="IonsFromNeutralVPSSTP.h" local="yes" imported="no">cantera/thermo/IonsFromNeutralVPSSTP.h</includes>
    <includes id="MargulesVPSSTP_8h" name="MargulesVPSSTP.h" local="yes" imported="no">cantera/thermo/MargulesVPSSTP.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <class kind="class">Cantera::LTPmodelError</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>LiquidTranInteraction.h</name>
    <path>/home/bryan/development/cantera/include/cantera/transport/</path>
    <filename>LiquidTranInteraction_8h</filename>
    <includes id="TransportParams_8h" name="TransportParams.h" local="yes" imported="no">TransportParams.h</includes>
    <includes id="LiquidTransportData_8h" name="LiquidTransportData.h" local="yes" imported="no">LiquidTransportData.h</includes>
    <includes id="xml_8h" name="xml.h" local="yes" imported="no">cantera/base/xml.h</includes>
    <class kind="class">Cantera::LiquidTranInteraction</class>
    <class kind="class">Cantera::LTI_MoleFracs</class>
    <class kind="class">Cantera::LTI_MassFracs</class>
    <class kind="class">Cantera::LTI_Log_MoleFracs</class>
    <class kind="class">Cantera::LTI_Pairwise_Interaction</class>
    <class kind="class">Cantera::LTI_StefanMaxwell_PPN</class>
    <class kind="class">Cantera::LTI_MoleFracs_ExpT</class>
    <namespace>Cantera</namespace>
    <member kind="enumeration">
      <type></type>
      <name>LiquidTranMixingModel</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a83829adc9ae177c190cc479004e4f64f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LiquidTransport.cpp</name>
    <path>/home/bryan/development/cantera/src/transport/</path>
    <filename>LiquidTransport_8cpp</filename>
    <includes id="LiquidTransport_8h" name="LiquidTransport.h" local="yes" imported="no">cantera/transport/LiquidTransport.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>LiquidTransport.h</name>
    <path>/home/bryan/development/cantera/include/cantera/transport/</path>
    <filename>LiquidTransport_8h</filename>
    <includes id="TransportBase_8h" name="TransportBase.h" local="yes" imported="no">TransportBase.h</includes>
    <includes id="DenseMatrix_8h" name="DenseMatrix.h" local="yes" imported="no">cantera/numerics/DenseMatrix.h</includes>
    <includes id="LiquidTransportParams_8h" name="LiquidTransportParams.h" local="yes" imported="no">LiquidTransportParams.h</includes>
    <class kind="class">Cantera::LiquidTransport</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>LiquidTransportData.cpp</name>
    <path>/home/bryan/development/cantera/src/transport/</path>
    <filename>LiquidTransportData_8cpp</filename>
    <includes id="LiquidTransportData_8h" name="LiquidTransportData.h" local="yes" imported="no">cantera/transport/LiquidTransportData.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>LiquidTransportData.h</name>
    <path>/home/bryan/development/cantera/include/cantera/transport/</path>
    <filename>LiquidTransportData_8h</filename>
    <includes id="TransportBase_8h" name="TransportBase.h" local="yes" imported="no">TransportBase.h</includes>
    <includes id="LTPspecies_8h" name="LTPspecies.h" local="yes" imported="no">LTPspecies.h</includes>
    <includes id="TransportData_8h" name="TransportData.h" local="yes" imported="no">TransportData.h</includes>
    <class kind="class">Cantera::LiquidTransportData</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>LiquidTransportParams.cpp</name>
    <path>/home/bryan/development/cantera/src/transport/</path>
    <filename>LiquidTransportParams_8cpp</filename>
    <includes id="LiquidTransportParams_8h" name="LiquidTransportParams.h" local="yes" imported="no">cantera/transport/LiquidTransportParams.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>LiquidTransportParams.h</name>
    <path>/home/bryan/development/cantera/include/cantera/transport/</path>
    <filename>LiquidTransportParams_8h</filename>
    <includes id="TransportParams_8h" name="TransportParams.h" local="yes" imported="no">TransportParams.h</includes>
    <includes id="LiquidTranInteraction_8h" name="LiquidTranInteraction.h" local="yes" imported="no">LiquidTranInteraction.h</includes>
    <class kind="class">Cantera::LiquidTransportParams</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>logger.h</name>
    <path>/home/bryan/development/cantera/include/cantera/base/</path>
    <filename>logger_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">ct_defs.h</includes>
    <class kind="class">Cantera::Logger</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>LTPspecies.cpp</name>
    <path>/home/bryan/development/cantera/src/transport/</path>
    <filename>LTPspecies_8cpp</filename>
    <includes id="LTPspecies_8h" name="LTPspecies.h" local="yes" imported="no">cantera/transport/LTPspecies.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <class kind="class">Cantera::LTPError</class>
    <namespace>Cantera</namespace>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getArrhenius</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a04bd474c034d62d417df4be3dbc9d188</anchor>
      <arglist>(const XML_Node &amp;node, doublereal &amp;A, doublereal &amp;b, doublereal &amp;E)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LTPspecies.h</name>
    <path>/home/bryan/development/cantera/include/cantera/transport/</path>
    <filename>LTPspecies_8h</filename>
    <includes id="TransportBase_8h" name="TransportBase.h" local="yes" imported="no">TransportBase.h</includes>
    <class kind="class">Cantera::LTPspecies</class>
    <class kind="class">Cantera::LTPspecies_Const</class>
    <class kind="class">Cantera::LTPspecies_Arrhenius</class>
    <class kind="class">Cantera::LTPspecies_Poly</class>
    <class kind="class">Cantera::LTPspecies_ExpT</class>
    <namespace>Cantera</namespace>
    <member kind="enumeration">
      <type></type>
      <name>TransportPropertyType</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ae666ac4d7c9e4a438b38567fb2286d76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LTPTemperatureDependenceType</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a662c63590e6315349ea3ee1efde9a9ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MargulesVPSSTP.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>MargulesVPSSTP_8cpp</filename>
    <includes id="MargulesVPSSTP_8h" name="MargulesVPSSTP.h" local="yes" imported="no">cantera/thermo/MargulesVPSSTP.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MargulesVPSSTP.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>MargulesVPSSTP_8h</filename>
    <includes id="GibbsExcessVPSSTP_8h" name="GibbsExcessVPSSTP.h" local="yes" imported="no">GibbsExcessVPSSTP.h</includes>
    <class kind="class">Cantera::MargulesVPSSTP</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MaskellSolidSolnPhase.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>MaskellSolidSolnPhase_8cpp</filename>
    <includes id="MaskellSolidSolnPhase_8h" name="MaskellSolidSolnPhase.h" local="yes" imported="no">cantera/thermo/MaskellSolidSolnPhase.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="xml_8h" name="xml.h" local="yes" imported="no">cantera/base/xml.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MaskellSolidSolnPhase.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>MaskellSolidSolnPhase_8h</filename>
    <includes id="VPStandardStateTP_8h" name="VPStandardStateTP.h" local="yes" imported="no">VPStandardStateTP.h</includes>
    <class kind="class">Cantera::MaskellSolidSolnPhase</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Metal.h</name>
    <path>/home/bryan/development/cantera/include/cantera/</path>
    <filename>Metal_8h</filename>
    <includes id="MetalPhase_8h" name="MetalPhase.h" local="yes" imported="no">thermo/MetalPhase.h</includes>
    <includes id="importKinetics_8h" name="importKinetics.h" local="yes" imported="no">kinetics/importKinetics.h</includes>
    <class kind="class">Cantera::Metal</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MetalPhase.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>MetalPhase_8h</filename>
    <includes id="ThermoPhase_8h" name="ThermoPhase.h" local="yes" imported="no">ThermoPhase.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <class kind="class">Cantera::MetalPhase</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MetalSHEelectrons.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>MetalSHEelectrons_8cpp</filename>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="MetalSHEelectrons_8h" name="MetalSHEelectrons.h" local="yes" imported="no">cantera/thermo/MetalSHEelectrons.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MetalSHEelectrons.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>MetalSHEelectrons_8h</filename>
    <includes id="SingleSpeciesTP_8h" name="SingleSpeciesTP.h" local="yes" imported="no">SingleSpeciesTP.h</includes>
    <class kind="class">Cantera::MetalSHEelectrons</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Methane.cpp</name>
    <path>/home/bryan/development/cantera/src/tpx/</path>
    <filename>Methane_8cpp</filename>
    <includes id="Methane_8h" name="Methane.h" local="yes" imported="no">Methane.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
  </compound>
  <compound kind="file">
    <name>Methane.h</name>
    <path>/home/bryan/development/cantera/src/tpx/</path>
    <filename>Methane_8h</filename>
    <includes id="Sub_8h" name="Sub.h" local="yes" imported="no">cantera/tpx/Sub.h</includes>
    <class kind="class">tpx::methane</class>
  </compound>
  <compound kind="file">
    <name>MineralEQ3.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>MineralEQ3_8cpp</filename>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="MineralEQ3_8h" name="MineralEQ3.h" local="yes" imported="no">cantera/thermo/MineralEQ3.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MineralEQ3.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>MineralEQ3_8h</filename>
    <includes id="StoichSubstance_8h" name="StoichSubstance.h" local="yes" imported="no">StoichSubstance.h</includes>
    <class kind="class">Cantera::MineralEQ3</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MixedSolventElectrolyte.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>MixedSolventElectrolyte_8cpp</filename>
    <includes id="MixedSolventElectrolyte_8h" name="MixedSolventElectrolyte.h" local="yes" imported="no">cantera/thermo/MixedSolventElectrolyte.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MixedSolventElectrolyte.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>MixedSolventElectrolyte_8h</filename>
    <includes id="MolarityIonicVPSSTP_8h" name="MolarityIonicVPSSTP.h" local="yes" imported="no">MolarityIonicVPSSTP.h</includes>
    <class kind="class">Cantera::MixedSolventElectrolyte</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MixTransport.cpp</name>
    <path>/home/bryan/development/cantera/src/transport/</path>
    <filename>MixTransport_8cpp</filename>
    <includes id="MixTransport_8h" name="MixTransport.h" local="yes" imported="no">cantera/transport/MixTransport.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MixTransport.h</name>
    <path>/home/bryan/development/cantera/include/cantera/transport/</path>
    <filename>MixTransport_8h</filename>
    <includes id="GasTransport_8h" name="GasTransport.h" local="yes" imported="no">GasTransport.h</includes>
    <includes id="DenseMatrix_8h" name="DenseMatrix.h" local="yes" imported="no">cantera/numerics/DenseMatrix.h</includes>
    <class kind="class">Cantera::MixTransport</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MixtureFugacityTP.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>MixtureFugacityTP_8cpp</filename>
    <includes id="MixtureFugacityTP_8h" name="MixtureFugacityTP.h" local="yes" imported="no">cantera/thermo/MixtureFugacityTP.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MixtureFugacityTP.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>MixtureFugacityTP_8h</filename>
    <includes id="ThermoPhase_8h" name="ThermoPhase.h" local="yes" imported="no">ThermoPhase.h</includes>
    <includes id="ResidEval_8h" name="ResidEval.h" local="yes" imported="no">cantera/numerics/ResidEval.h</includes>
    <class kind="class">Cantera::MixtureFugacityTP</class>
    <namespace>Cantera</namespace>
    <member kind="define">
      <type>#define</type>
      <name>FLUID_UNSTABLE</name>
      <anchorfile>MixtureFugacityTP_8h.html</anchorfile>
      <anchor>a170cd613c4c037c8720f33adb38655d0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MMCollisionInt.cpp</name>
    <path>/home/bryan/development/cantera/src/transport/</path>
    <filename>MMCollisionInt_8cpp</filename>
    <includes id="MMCollisionInt_8h" name="MMCollisionInt.h" local="yes" imported="no">MMCollisionInt.h</includes>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">cantera/base/utilities.h</includes>
    <includes id="polyfit_8h" name="polyfit.h" local="yes" imported="no">cantera/numerics/polyfit.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MMCollisionInt.h</name>
    <path>/home/bryan/development/cantera/src/transport/</path>
    <filename>MMCollisionInt_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <class kind="class">Cantera::MMCollisionInt</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MolalityVPSSTP.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>MolalityVPSSTP_8cpp</filename>
    <includes id="MolalityVPSSTP_8h" name="MolalityVPSSTP.h" local="yes" imported="no">cantera/thermo/MolalityVPSSTP.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">cantera/base/utilities.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MolalityVPSSTP.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>MolalityVPSSTP_8h</filename>
    <includes id="VPStandardStateTP_8h" name="VPStandardStateTP.h" local="yes" imported="no">VPStandardStateTP.h</includes>
    <class kind="class">Cantera::MolalityVPSSTP</class>
    <namespace>Cantera</namespace>
    <member kind="variable">
      <type>const int</type>
      <name>PHSCALE_PITZER</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a574026f321c91b32b8dd618f2741a138</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>PHSCALE_NBS</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aceead90273e3f7eeb00bf11bab8ee124</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MolarityIonicVPSSTP.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>MolarityIonicVPSSTP_8cpp</filename>
    <includes id="MolarityIonicVPSSTP_8h" name="MolarityIonicVPSSTP.h" local="yes" imported="no">cantera/thermo/MolarityIonicVPSSTP.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MolarityIonicVPSSTP.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>MolarityIonicVPSSTP_8h</filename>
    <includes id="GibbsExcessVPSSTP_8h" name="GibbsExcessVPSSTP.h" local="yes" imported="no">GibbsExcessVPSSTP.h</includes>
    <class kind="class">Cantera::MolarityIonicVPSSTP</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Mu0Poly.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>Mu0Poly_8cpp</filename>
    <includes id="Mu0Poly_8h" name="Mu0Poly.h" local="yes" imported="no">cantera/thermo/Mu0Poly.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>Mu0Poly *</type>
      <name>newMu0ThermoFromXML</name>
      <anchorfile>group__spthermo.html</anchorfile>
      <anchor>ga4959cf373636daf31768b7ba9cf2e593</anchor>
      <arglist>(const XML_Node &amp;Mu0Node)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Mu0Poly.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>Mu0Poly_8h</filename>
    <includes id="SpeciesThermoInterpType_8h" name="SpeciesThermoInterpType.h" local="yes" imported="no">cantera/thermo/SpeciesThermoInterpType.h</includes>
    <class kind="class">Cantera::Mu0Poly</class>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>Mu0Poly *</type>
      <name>newMu0ThermoFromXML</name>
      <anchorfile>group__spthermo.html</anchorfile>
      <anchor>ga4959cf373636daf31768b7ba9cf2e593</anchor>
      <arglist>(const XML_Node &amp;Mu0Node)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MultiJac.cpp</name>
    <path>/home/bryan/development/cantera/src/oneD/</path>
    <filename>MultiJac_8cpp</filename>
    <includes id="MultiJac_8h" name="MultiJac.h" local="yes" imported="no">cantera/oneD/MultiJac.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MultiJac.h</name>
    <path>/home/bryan/development/cantera/include/cantera/oneD/</path>
    <filename>MultiJac_8h</filename>
    <includes id="BandMatrix_8h" name="BandMatrix.h" local="yes" imported="no">cantera/numerics/BandMatrix.h</includes>
    <includes id="OneDim_8h" name="OneDim.h" local="yes" imported="no">OneDim.h</includes>
    <class kind="class">Cantera::MultiJac</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MultiNewton.cpp</name>
    <path>/home/bryan/development/cantera/src/oneD/</path>
    <filename>MultiNewton_8cpp</filename>
    <includes id="MultiNewton_8h" name="MultiNewton.h" local="yes" imported="no">cantera/oneD/MultiNewton.h</includes>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">cantera/base/utilities.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MultiNewton.h</name>
    <path>/home/bryan/development/cantera/include/cantera/oneD/</path>
    <filename>MultiNewton_8h</filename>
    <includes id="MultiJac_8h" name="MultiJac.h" local="yes" imported="no">MultiJac.h</includes>
    <class kind="class">Cantera::MultiNewton</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MultiPhase.cpp</name>
    <path>/home/bryan/development/cantera/src/equil/</path>
    <filename>MultiPhase_8cpp</filename>
    <includes id="ChemEquil_8h" name="ChemEquil.h" local="yes" imported="no">cantera/equil/ChemEquil.h</includes>
    <includes id="MultiPhase_8h" name="MultiPhase.h" local="yes" imported="no">cantera/equil/MultiPhase.h</includes>
    <includes id="MultiPhaseEquil_8h" name="MultiPhaseEquil.h" local="yes" imported="no">cantera/equil/MultiPhaseEquil.h</includes>
    <includes id="vcs__MultiPhaseEquil_8h" name="vcs_MultiPhaseEquil.h" local="yes" imported="no">cantera/equil/vcs_MultiPhaseEquil.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MultiPhase.h</name>
    <path>/home/bryan/development/cantera/include/cantera/equil/</path>
    <filename>MultiPhase_8h</filename>
    <includes id="DenseMatrix_8h" name="DenseMatrix.h" local="yes" imported="no">cantera/numerics/DenseMatrix.h</includes>
    <includes id="ThermoPhase_8h" name="ThermoPhase.h" local="yes" imported="no">cantera/thermo/ThermoPhase.h</includes>
    <class kind="class">Cantera::MultiPhase</class>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>acc7533b3ede4a25a50dd76a6fc53fe76</anchor>
      <arglist>(std::ostream &amp;s, MultiPhase &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>BasisOptimize</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>ga736bfa5922a7dc8d12498e37b14652f5</anchor>
      <arglist>(int *usedZeroedSpecies, bool doFormRxn, MultiPhase *mphase, std::vector&lt; size_t &gt; &amp;orderVectorSpecies, std::vector&lt; size_t &gt; &amp;orderVectorElements, vector_fp &amp;formRxnMatrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ElemRearrange</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>ga8932a893caf09a6d1aef50d19238d7b0</anchor>
      <arglist>(size_t nComponents, const vector_fp &amp;elementAbundances, MultiPhase *mphase, std::vector&lt; size_t &gt; &amp;orderVectorSpecies, std::vector&lt; size_t &gt; &amp;orderVectorElements)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MultiPhaseEquil.cpp</name>
    <path>/home/bryan/development/cantera/src/equil/</path>
    <filename>MultiPhaseEquil_8cpp</filename>
    <includes id="MultiPhaseEquil_8h" name="MultiPhaseEquil.h" local="yes" imported="no">cantera/equil/MultiPhaseEquil.h</includes>
    <includes id="MolalityVPSSTP_8h" name="MolalityVPSSTP.h" local="yes" imported="no">cantera/thermo/MolalityVPSSTP.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MultiPhaseEquil.h</name>
    <path>/home/bryan/development/cantera/include/cantera/equil/</path>
    <filename>MultiPhaseEquil_8h</filename>
    <includes id="MultiPhase_8h" name="MultiPhase.h" local="yes" imported="no">MultiPhase.h</includes>
    <class kind="class">Cantera::MultiPhaseEquil</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MultiSpeciesThermo.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>MultiSpeciesThermo_8cpp</filename>
    <includes id="MultiSpeciesThermo_8h" name="MultiSpeciesThermo.h" local="yes" imported="no">cantera/thermo/MultiSpeciesThermo.h</includes>
    <includes id="SpeciesThermoFactory_8h" name="SpeciesThermoFactory.h" local="yes" imported="no">cantera/thermo/SpeciesThermoFactory.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">cantera/base/utilities.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MultiSpeciesThermo.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>MultiSpeciesThermo_8h</filename>
    <includes id="SpeciesThermoInterpType_8h" name="SpeciesThermoInterpType.h" local="yes" imported="no">SpeciesThermoInterpType.h</includes>
    <class kind="class">Cantera::MultiSpeciesThermo</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>MultiTransport.cpp</name>
    <path>/home/bryan/development/cantera/src/transport/</path>
    <filename>MultiTransport_8cpp</filename>
    <includes id="MultiTransport_8h" name="MultiTransport.h" local="yes" imported="no">cantera/transport/MultiTransport.h</includes>
    <includes id="IdealGasPhase_8h" name="IdealGasPhase.h" local="yes" imported="no">cantera/thermo/IdealGasPhase.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>doublereal</type>
      <name>Frot</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a9f4cb57d21086c594afdb74f35821555</anchor>
      <arglist>(doublereal tr, doublereal sqtr)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const doublereal</type>
      <name>Min_C_Internal</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3d4d5a0d9f0fe6a9efad36aab04e83bc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MultiTransport.h</name>
    <path>/home/bryan/development/cantera/include/cantera/transport/</path>
    <filename>MultiTransport_8h</filename>
    <includes id="GasTransport_8h" name="GasTransport.h" local="yes" imported="no">GasTransport.h</includes>
    <class kind="class">Cantera::MultiTransport</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Nasa9Poly1.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>Nasa9Poly1_8cpp</filename>
    <includes id="Nasa9Poly1_8h" name="Nasa9Poly1.h" local="yes" imported="no">cantera/thermo/Nasa9Poly1.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Nasa9Poly1.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>Nasa9Poly1_8h</filename>
    <includes id="SpeciesThermoInterpType_8h" name="SpeciesThermoInterpType.h" local="yes" imported="no">SpeciesThermoInterpType.h</includes>
    <class kind="class">Cantera::Nasa9Poly1</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Nasa9PolyMultiTempRegion.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>Nasa9PolyMultiTempRegion_8cpp</filename>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <includes id="Nasa9PolyMultiTempRegion_8h" name="Nasa9PolyMultiTempRegion.h" local="yes" imported="no">cantera/thermo/Nasa9PolyMultiTempRegion.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Nasa9PolyMultiTempRegion.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>Nasa9PolyMultiTempRegion_8h</filename>
    <includes id="Nasa9Poly1_8h" name="Nasa9Poly1.h" local="yes" imported="no">cantera/thermo/Nasa9Poly1.h</includes>
    <class kind="class">Cantera::Nasa9PolyMultiTempRegion</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>NasaPoly1.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>NasaPoly1_8h</filename>
    <includes id="SpeciesThermoInterpType_8h" name="SpeciesThermoInterpType.h" local="yes" imported="no">SpeciesThermoInterpType.h</includes>
    <class kind="class">Cantera::NasaPoly1</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>NasaPoly2.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>NasaPoly2_8h</filename>
    <includes id="SpeciesThermoInterpType_8h" name="SpeciesThermoInterpType.h" local="yes" imported="no">cantera/thermo/SpeciesThermoInterpType.h</includes>
    <includes id="NasaPoly1_8h" name="NasaPoly1.h" local="yes" imported="no">cantera/thermo/NasaPoly1.h</includes>
    <class kind="class">Cantera::NasaPoly2</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Nitrogen.cpp</name>
    <path>/home/bryan/development/cantera/src/tpx/</path>
    <filename>Nitrogen_8cpp</filename>
    <includes id="Nitrogen_8h" name="Nitrogen.h" local="yes" imported="no">Nitrogen.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
  </compound>
  <compound kind="file">
    <name>Nitrogen.h</name>
    <path>/home/bryan/development/cantera/src/tpx/</path>
    <filename>Nitrogen_8h</filename>
    <includes id="Sub_8h" name="Sub.h" local="yes" imported="no">cantera/tpx/Sub.h</includes>
    <class kind="class">tpx::nitrogen</class>
  </compound>
  <compound kind="file">
    <name>ODE_integrators.cpp</name>
    <path>/home/bryan/development/cantera/src/numerics/</path>
    <filename>ODE__integrators_8cpp</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <includes id="Integrator_8h" name="Integrator.h" local="yes" imported="no">cantera/numerics/Integrator.h</includes>
    <includes id="CVodesIntegrator_8h" name="CVodesIntegrator.h" local="yes" imported="no">cantera/numerics/CVodesIntegrator.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>OneDim.cpp</name>
    <path>/home/bryan/development/cantera/src/oneD/</path>
    <filename>OneDim_8cpp</filename>
    <includes id="OneDim_8h" name="OneDim.h" local="yes" imported="no">cantera/oneD/OneDim.h</includes>
    <includes id="Func1_8h" name="Func1.h" local="yes" imported="no">cantera/numerics/Func1.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="MultiNewton_8h" name="MultiNewton.h" local="yes" imported="no">cantera/oneD/MultiNewton.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>onedim.h</name>
    <path>/home/bryan/development/cantera/include/cantera/</path>
    <filename>onedim_8h</filename>
    <includes id="Sim1D_8h" name="Sim1D.h" local="yes" imported="no">oneD/Sim1D.h</includes>
    <includes id="Domain1D_8h" name="Domain1D.h" local="yes" imported="no">oneD/Domain1D.h</includes>
    <includes id="Inlet1D_8h" name="Inlet1D.h" local="yes" imported="no">oneD/Inlet1D.h</includes>
    <includes id="StFlow_8h" name="StFlow.h" local="yes" imported="no">oneD/StFlow.h</includes>
  </compound>
  <compound kind="file">
    <name>OneDim.h</name>
    <path>/home/bryan/development/cantera/include/cantera/oneD/</path>
    <filename>OneDim_8h</filename>
    <includes id="Domain1D_8h" name="Domain1D.h" local="yes" imported="no">Domain1D.h</includes>
    <includes id="MultiJac_8h" name="MultiJac.h" local="yes" imported="no">MultiJac.h</includes>
    <class kind="class">Cantera::OneDim</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Oxygen.cpp</name>
    <path>/home/bryan/development/cantera/src/tpx/</path>
    <filename>Oxygen_8cpp</filename>
    <includes id="Oxygen_8h" name="Oxygen.h" local="yes" imported="no">Oxygen.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
  </compound>
  <compound kind="file">
    <name>Oxygen.h</name>
    <path>/home/bryan/development/cantera/src/tpx/</path>
    <filename>Oxygen_8h</filename>
    <includes id="Sub_8h" name="Sub.h" local="yes" imported="no">cantera/tpx/Sub.h</includes>
    <class kind="class">tpx::oxygen</class>
  </compound>
  <compound kind="file">
    <name>PDSS.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>PDSS_8cpp</filename>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="PDSS_8h" name="PDSS.h" local="yes" imported="no">cantera/thermo/PDSS.h</includes>
    <includes id="VPStandardStateTP_8h" name="VPStandardStateTP.h" local="yes" imported="no">cantera/thermo/VPStandardStateTP.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>PDSS.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>PDSS_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <class kind="class">Cantera::PDSS</class>
    <class kind="class">Cantera::PDSS_Molar</class>
    <class kind="class">Cantera::PDSS_Nondimensional</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>PDSS_ConstVol.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>PDSS__ConstVol_8cpp</filename>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="PDSS__ConstVol_8h" name="PDSS_ConstVol.h" local="yes" imported="no">cantera/thermo/PDSS_ConstVol.h</includes>
    <includes id="VPStandardStateTP_8h" name="VPStandardStateTP.h" local="yes" imported="no">cantera/thermo/VPStandardStateTP.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>PDSS_ConstVol.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>PDSS__ConstVol_8h</filename>
    <includes id="PDSS_8h" name="PDSS.h" local="yes" imported="no">PDSS.h</includes>
    <class kind="class">Cantera::PDSS_ConstVol</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>PDSS_HKFT.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>PDSS__HKFT_8cpp</filename>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="PDSS__HKFT_8h" name="PDSS_HKFT.h" local="yes" imported="no">cantera/thermo/PDSS_HKFT.h</includes>
    <includes id="PDSS__Water_8h" name="PDSS_Water.h" local="yes" imported="no">cantera/thermo/PDSS_Water.h</includes>
    <includes id="VPStandardStateTP_8h" name="VPStandardStateTP.h" local="yes" imported="no">cantera/thermo/VPStandardStateTP.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>PDSS_HKFT.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>PDSS__HKFT_8h</filename>
    <includes id="PDSS_8h" name="PDSS.h" local="yes" imported="no">PDSS.h</includes>
    <includes id="WaterProps_8h" name="WaterProps.h" local="yes" imported="no">WaterProps.h</includes>
    <class kind="class">Cantera::PDSS_HKFT</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>PDSS_IdealGas.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>PDSS__IdealGas_8cpp</filename>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="PDSS__IdealGas_8h" name="PDSS_IdealGas.h" local="yes" imported="no">cantera/thermo/PDSS_IdealGas.h</includes>
    <includes id="VPStandardStateTP_8h" name="VPStandardStateTP.h" local="yes" imported="no">cantera/thermo/VPStandardStateTP.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>PDSS_IdealGas.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>PDSS__IdealGas_8h</filename>
    <includes id="PDSS_8h" name="PDSS.h" local="yes" imported="no">PDSS.h</includes>
    <class kind="class">Cantera::PDSS_IdealGas</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>PDSS_IonsFromNeutral.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>PDSS__IonsFromNeutral_8cpp</filename>
    <includes id="PDSS__IonsFromNeutral_8h" name="PDSS_IonsFromNeutral.h" local="yes" imported="no">cantera/thermo/PDSS_IonsFromNeutral.h</includes>
    <includes id="IonsFromNeutralVPSSTP_8h" name="IonsFromNeutralVPSSTP.h" local="yes" imported="no">cantera/thermo/IonsFromNeutralVPSSTP.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>PDSS_IonsFromNeutral.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>PDSS__IonsFromNeutral_8h</filename>
    <includes id="PDSS_8h" name="PDSS.h" local="yes" imported="no">PDSS.h</includes>
    <class kind="class">Cantera::PDSS_IonsFromNeutral</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>PDSS_SSVol.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>PDSS__SSVol_8cpp</filename>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="PDSS__SSVol_8h" name="PDSS_SSVol.h" local="yes" imported="no">cantera/thermo/PDSS_SSVol.h</includes>
    <includes id="VPStandardStateTP_8h" name="VPStandardStateTP.h" local="yes" imported="no">cantera/thermo/VPStandardStateTP.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>PDSS_SSVol.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>PDSS__SSVol_8h</filename>
    <includes id="PDSS_8h" name="PDSS.h" local="yes" imported="no">PDSS.h</includes>
    <class kind="class">Cantera::PDSS_SSVol</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>PDSS_Water.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>PDSS__Water_8cpp</filename>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="PDSS__Water_8h" name="PDSS_Water.h" local="yes" imported="no">cantera/thermo/PDSS_Water.h</includes>
    <includes id="WaterPropsIAPWS_8h" name="WaterPropsIAPWS.h" local="yes" imported="no">cantera/thermo/WaterPropsIAPWS.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="Elements_8h" name="Elements.h" local="yes" imported="no">cantera/thermo/Elements.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>PDSS_Water.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>PDSS__Water_8h</filename>
    <includes id="PDSS_8h" name="PDSS.h" local="yes" imported="no">PDSS.h</includes>
    <includes id="WaterPropsIAPWS_8h" name="WaterPropsIAPWS.h" local="yes" imported="no">WaterPropsIAPWS.h</includes>
    <includes id="WaterProps_8h" name="WaterProps.h" local="yes" imported="no">WaterProps.h</includes>
    <class kind="class">Cantera::PDSS_Water</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>PDSSFactory.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>PDSSFactory_8cpp</filename>
    <includes id="PDSSFactory_8h" name="PDSSFactory.h" local="yes" imported="no">cantera/thermo/PDSSFactory.h</includes>
    <includes id="PDSS__IdealGas_8h" name="PDSS_IdealGas.h" local="yes" imported="no">cantera/thermo/PDSS_IdealGas.h</includes>
    <includes id="PDSS__Water_8h" name="PDSS_Water.h" local="yes" imported="no">cantera/thermo/PDSS_Water.h</includes>
    <includes id="PDSS__ConstVol_8h" name="PDSS_ConstVol.h" local="yes" imported="no">cantera/thermo/PDSS_ConstVol.h</includes>
    <includes id="PDSS__SSVol_8h" name="PDSS_SSVol.h" local="yes" imported="no">cantera/thermo/PDSS_SSVol.h</includes>
    <includes id="PDSS__HKFT_8h" name="PDSS_HKFT.h" local="yes" imported="no">cantera/thermo/PDSS_HKFT.h</includes>
    <includes id="PDSS__IonsFromNeutral_8h" name="PDSS_IonsFromNeutral.h" local="yes" imported="no">cantera/thermo/PDSS_IonsFromNeutral.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>PDSSFactory.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>PDSSFactory_8h</filename>
    <includes id="PDSS_8h" name="PDSS.h" local="yes" imported="no">PDSS.h</includes>
    <includes id="FactoryBase_8h" name="FactoryBase.h" local="yes" imported="no">cantera/base/FactoryBase.h</includes>
    <includes id="VPStandardStateTP_8h" name="VPStandardStateTP.h" local="yes" imported="no">cantera/thermo/VPStandardStateTP.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Phase.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>Phase_8cpp</filename>
    <includes id="Phase_8h" name="Phase.h" local="yes" imported="no">cantera/thermo/Phase.h</includes>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">cantera/base/utilities.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Phase.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>Phase_8h</filename>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <includes id="Elements_8h" name="Elements.h" local="yes" imported="no">cantera/thermo/Elements.h</includes>
    <includes id="Species_8h" name="Species.h" local="yes" imported="no">cantera/thermo/Species.h</includes>
    <includes id="ValueCache_8h" name="ValueCache.h" local="yes" imported="no">cantera/base/ValueCache.h</includes>
    <class kind="class">Cantera::Phase</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>PhaseCombo_Interaction.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>PhaseCombo__Interaction_8cpp</filename>
    <includes id="PhaseCombo__Interaction_8h" name="PhaseCombo_Interaction.h" local="yes" imported="no">cantera/thermo/PhaseCombo_Interaction.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>PhaseCombo_Interaction.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>PhaseCombo__Interaction_8h</filename>
    <includes id="GibbsExcessVPSSTP_8h" name="GibbsExcessVPSSTP.h" local="yes" imported="no">GibbsExcessVPSSTP.h</includes>
    <class kind="class">Cantera::PhaseCombo_Interaction</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>plots.cpp</name>
    <path>/home/bryan/development/cantera/src/base/</path>
    <filename>plots_8cpp</filename>
    <includes id="plots_8h" name="plots.h" local="yes" imported="no">cantera/base/plots.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>void</type>
      <name>writePlotFile</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa308afb5e8df7d10697a897b570873eb</anchor>
      <arglist>(const std::string &amp;fname, const std::string &amp;fmt, const std::string &amp;plotTitle, const std::vector&lt; std::string &gt; &amp;names, const Array2D &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>outputTEC</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a48ec450fc41980730468311dd3d05053</anchor>
      <arglist>(std::ostream &amp;s, const std::string &amp;title, const std::vector&lt; std::string &gt; &amp;names, const Array2D &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>outputExcel</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aee6059b70728e56f33b9a6a4b2e731e2</anchor>
      <arglist>(std::ostream &amp;s, const std::string &amp;title, const std::vector&lt; std::string &gt; &amp;names, const Array2D &amp;data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>plots.h</name>
    <path>/home/bryan/development/cantera/include/cantera/base/</path>
    <filename>plots_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">cantera/base/Array.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>void</type>
      <name>writePlotFile</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa308afb5e8df7d10697a897b570873eb</anchor>
      <arglist>(const std::string &amp;fname, const std::string &amp;fmt, const std::string &amp;plotTitle, const std::vector&lt; std::string &gt; &amp;names, const Array2D &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>outputTEC</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a48ec450fc41980730468311dd3d05053</anchor>
      <arglist>(std::ostream &amp;s, const std::string &amp;title, const std::vector&lt; std::string &gt; &amp;names, const Array2D &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>outputExcel</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aee6059b70728e56f33b9a6a4b2e731e2</anchor>
      <arglist>(std::ostream &amp;s, const std::string &amp;title, const std::vector&lt; std::string &gt; &amp;names, const Array2D &amp;data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>polyfit.cpp</name>
    <path>/home/bryan/development/cantera/src/numerics/</path>
    <filename>polyfit_8cpp</filename>
    <includes id="polyfit_8h" name="polyfit.h" local="yes" imported="no">cantera/numerics/polyfit.h</includes>
    <includes id="global_8h" name="global.h" local="yes" imported="no">cantera/base/global.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>double</type>
      <name>polyfit</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>acabfa11266a2115e7a90a065d10d860b</anchor>
      <arglist>(size_t n, size_t deg, const double *x, const double *y, const double *w, double *p)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>polyfit.h</name>
    <path>/home/bryan/development/cantera/include/cantera/numerics/</path>
    <filename>polyfit_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>double</type>
      <name>polyfit</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>acabfa11266a2115e7a90a065d10d860b</anchor>
      <arglist>(size_t n, size_t deg, const double *x, const double *y, const double *w, double *p)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PureFluid.h</name>
    <path>/home/bryan/development/cantera/include/cantera/</path>
    <filename>PureFluid_8h</filename>
    <includes id="PureFluidPhase_8h" name="PureFluidPhase.h" local="yes" imported="no">thermo/PureFluidPhase.h</includes>
    <includes id="kinetics_8h" name="kinetics.h" local="yes" imported="no">kinetics.h</includes>
    <class kind="class">Cantera::PureFluid</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>PureFluidPhase.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>PureFluidPhase_8cpp</filename>
    <includes id="xml_8h" name="xml.h" local="yes" imported="no">cantera/base/xml.h</includes>
    <includes id="PureFluidPhase_8h" name="PureFluidPhase.h" local="yes" imported="no">cantera/thermo/PureFluidPhase.h</includes>
    <includes id="Sub_8h" name="Sub.h" local="yes" imported="no">cantera/tpx/Sub.h</includes>
    <includes id="utils_8h" name="utils.h" local="yes" imported="no">cantera/tpx/utils.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>PureFluidPhase.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>PureFluidPhase_8h</filename>
    <includes id="ThermoPhase_8h" name="ThermoPhase.h" local="yes" imported="no">ThermoPhase.h</includes>
    <includes id="Sub_8h" name="Sub.h" local="yes" imported="no">cantera/tpx/Sub.h</includes>
    <class kind="class">Cantera::PureFluidPhase</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>RateCoeffMgr.h</name>
    <path>/home/bryan/development/cantera/include/cantera/kinetics/</path>
    <filename>RateCoeffMgr_8h</filename>
    <includes id="RxnRates_8h" name="RxnRates.h" local="yes" imported="no">RxnRates.h</includes>
    <class kind="class">Cantera::Rate1</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Reaction.cpp</name>
    <path>/home/bryan/development/cantera/src/kinetics/</path>
    <filename>Reaction_8cpp</filename>
    <includes id="Reaction_8h" name="Reaction.h" local="yes" imported="no">cantera/kinetics/Reaction.h</includes>
    <includes id="FalloffFactory_8h" name="FalloffFactory.h" local="yes" imported="no">cantera/kinetics/FalloffFactory.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">cantera/base/Array.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>void</type>
      <name>readFalloff</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a7a3ae5d7adfd0a48f6e434a7354f6d42</anchor>
      <arglist>(FalloffReaction &amp;R, const XML_Node &amp;rc_node)</arglist>
    </member>
    <member kind="function">
      <type>shared_ptr&lt; Reaction &gt;</type>
      <name>newReaction</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3f427a93eb078fb84df1395d14f78242</anchor>
      <arglist>(const XML_Node &amp;rxn_node)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; shared_ptr&lt; Reaction &gt; &gt;</type>
      <name>getReactions</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a2e2ae48151c466ce7372d2a57b500657</anchor>
      <arglist>(const XML_Node &amp;node)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Reaction.h</name>
    <path>/home/bryan/development/cantera/include/cantera/kinetics/</path>
    <filename>Reaction_8h</filename>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">cantera/base/utilities.h</includes>
    <includes id="RxnRates_8h" name="RxnRates.h" local="yes" imported="no">cantera/kinetics/RxnRates.h</includes>
    <class kind="class">Cantera::Reaction</class>
    <class kind="class">Cantera::ElementaryReaction</class>
    <class kind="class">Cantera::ThirdBody</class>
    <class kind="class">Cantera::ThreeBodyReaction</class>
    <class kind="class">Cantera::FalloffReaction</class>
    <class kind="class">Cantera::ChemicallyActivatedReaction</class>
    <class kind="class">Cantera::PlogReaction</class>
    <class kind="class">Cantera::ChebyshevReaction</class>
    <class kind="struct">Cantera::CoverageDependency</class>
    <class kind="class">Cantera::InterfaceReaction</class>
    <class kind="class">Cantera::ElectrochemicalReaction</class>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>shared_ptr&lt; Reaction &gt;</type>
      <name>newReaction</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3f427a93eb078fb84df1395d14f78242</anchor>
      <arglist>(const XML_Node &amp;rxn_node)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; shared_ptr&lt; Reaction &gt; &gt;</type>
      <name>getReactions</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a2e2ae48151c466ce7372d2a57b500657</anchor>
      <arglist>(const XML_Node &amp;node)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reaction_defs.h</name>
    <path>/home/bryan/development/cantera/include/cantera/kinetics/</path>
    <filename>reaction__defs_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <namespace>Cantera</namespace>
    <member kind="variable">
      <type>const int</type>
      <name>ELEMENTARY_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a8df81c7ff3d9f97bc34701d3960e10e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>THREE_BODY_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a70945bb179b75a13b0dc07c4da769579</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>FALLOFF_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>acc8d11c98a6b8576d7804b739e16cdcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>PLOG_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a36559219afd4abf2b6248f749d26edc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>CHEBYSHEV_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a15deb3717c54dfbe02eddfbaecf9c2bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>CHEMACT_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>abaa0bb140343633ff77781128c8392ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>SURFACE_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a36d9f1e25c18562e8ced89a5b0234d82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>INTERFACE_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a9a8ce48aae935259a4ff2a0c149ac302</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>BUTLERVOLMER_NOACTIVITYCOEFFS_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a07fc1991fc34316430113d5d7252e4a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>BUTLERVOLMER_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3d519251ddea4ca8492ece66d6026ff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>SURFACEAFFINITY_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa57e828a72df53d5e15c386eb59636cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>EDGE_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a69ea2e7380ff5d0bf95eb20490154c87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>GLOBAL_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a5ed7e66f048a46de7539f50e7fe82601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ELEMENTARY_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a8df81c7ff3d9f97bc34701d3960e10e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>THREE_BODY_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a70945bb179b75a13b0dc07c4da769579</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>FALLOFF_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>acc8d11c98a6b8576d7804b739e16cdcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>PLOG_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a36559219afd4abf2b6248f749d26edc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>CHEBYSHEV_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a15deb3717c54dfbe02eddfbaecf9c2bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>CHEMACT_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>abaa0bb140343633ff77781128c8392ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>SURFACE_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a36d9f1e25c18562e8ced89a5b0234d82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>INTERFACE_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a9a8ce48aae935259a4ff2a0c149ac302</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>BUTLERVOLMER_NOACTIVITYCOEFFS_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a07fc1991fc34316430113d5d7252e4a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>BUTLERVOLMER_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3d519251ddea4ca8492ece66d6026ff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>SURFACEAFFINITY_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa57e828a72df53d5e15c386eb59636cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>EDGE_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a69ea2e7380ff5d0bf95eb20490154c87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>GLOBAL_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a5ed7e66f048a46de7539f50e7fe82601</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ReactionPath.cpp</name>
    <path>/home/bryan/development/cantera/src/kinetics/</path>
    <filename>ReactionPath_8cpp</filename>
    <includes id="ReactionPath_8h" name="ReactionPath.h" local="yes" imported="no">cantera/kinetics/ReactionPath.h</includes>
    <includes id="reaction__defs_8h" name="reaction_defs.h" local="yes" imported="no">cantera/kinetics/reaction_defs.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ReactionPath.h</name>
    <path>/home/bryan/development/cantera/include/cantera/kinetics/</path>
    <filename>ReactionPath_8h</filename>
    <includes id="DenseMatrix_8h" name="DenseMatrix.h" local="yes" imported="no">cantera/numerics/DenseMatrix.h</includes>
    <includes id="Group_8h" name="Group.h" local="yes" imported="no">Group.h</includes>
    <includes id="Kinetics_8h" name="Kinetics.h" local="yes" imported="no">Kinetics.h</includes>
    <class kind="class">Cantera::SpeciesNode</class>
    <class kind="class">Cantera::ReactionPathDiagram</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Reactor.cpp</name>
    <path>/home/bryan/development/cantera/src/zeroD/</path>
    <filename>Reactor_8cpp</filename>
    <includes id="Reactor_8h" name="Reactor.h" local="yes" imported="no">cantera/zeroD/Reactor.h</includes>
    <includes id="FlowDevice_8h" name="FlowDevice.h" local="yes" imported="no">cantera/zeroD/FlowDevice.h</includes>
    <includes id="Wall_8h" name="Wall.h" local="yes" imported="no">cantera/zeroD/Wall.h</includes>
    <includes id="SurfPhase_8h" name="SurfPhase.h" local="yes" imported="no">cantera/thermo/SurfPhase.h</includes>
    <includes id="ReactorNet_8h" name="ReactorNet.h" local="yes" imported="no">cantera/zeroD/ReactorNet.h</includes>
    <includes id="ReactorSurface_8h" name="ReactorSurface.h" local="yes" imported="no">cantera/zeroD/ReactorSurface.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Reactor.h</name>
    <path>/home/bryan/development/cantera/include/cantera/zeroD/</path>
    <filename>Reactor_8h</filename>
    <includes id="ReactorBase_8h" name="ReactorBase.h" local="yes" imported="no">ReactorBase.h</includes>
    <includes id="Kinetics_8h" name="Kinetics.h" local="yes" imported="no">cantera/kinetics/Kinetics.h</includes>
    <class kind="class">Cantera::Reactor</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ReactorBase.cpp</name>
    <path>/home/bryan/development/cantera/src/zeroD/</path>
    <filename>ReactorBase_8cpp</filename>
    <includes id="ReactorBase_8h" name="ReactorBase.h" local="yes" imported="no">cantera/zeroD/ReactorBase.h</includes>
    <includes id="FlowDevice_8h" name="FlowDevice.h" local="yes" imported="no">cantera/zeroD/FlowDevice.h</includes>
    <includes id="ReactorNet_8h" name="ReactorNet.h" local="yes" imported="no">cantera/zeroD/ReactorNet.h</includes>
    <includes id="ReactorSurface_8h" name="ReactorSurface.h" local="yes" imported="no">cantera/zeroD/ReactorSurface.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ReactorBase.h</name>
    <path>/home/bryan/development/cantera/include/cantera/zeroD/</path>
    <filename>ReactorBase_8h</filename>
    <includes id="ThermoPhase_8h" name="ThermoPhase.h" local="yes" imported="no">cantera/thermo/ThermoPhase.h</includes>
    <class kind="class">Cantera::ReactorBase</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ReactorFactory.cpp</name>
    <path>/home/bryan/development/cantera/src/zeroD/</path>
    <filename>ReactorFactory_8cpp</filename>
    <includes id="ReactorFactory_8h" name="ReactorFactory.h" local="yes" imported="no">cantera/zeroD/ReactorFactory.h</includes>
    <includes id="Reservoir_8h" name="Reservoir.h" local="yes" imported="no">cantera/zeroD/Reservoir.h</includes>
    <includes id="Reactor_8h" name="Reactor.h" local="yes" imported="no">cantera/zeroD/Reactor.h</includes>
    <includes id="FlowReactor_8h" name="FlowReactor.h" local="yes" imported="no">cantera/zeroD/FlowReactor.h</includes>
    <includes id="ConstPressureReactor_8h" name="ConstPressureReactor.h" local="yes" imported="no">cantera/zeroD/ConstPressureReactor.h</includes>
    <includes id="IdealGasReactor_8h" name="IdealGasReactor.h" local="yes" imported="no">cantera/zeroD/IdealGasReactor.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ReactorFactory.h</name>
    <path>/home/bryan/development/cantera/include/cantera/zeroD/</path>
    <filename>ReactorFactory_8h</filename>
    <includes id="ReactorBase_8h" name="ReactorBase.h" local="yes" imported="no">ReactorBase.h</includes>
    <includes id="FactoryBase_8h" name="FactoryBase.h" local="yes" imported="no">cantera/base/FactoryBase.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>ReactorBase *</type>
      <name>newReactor</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a0660c6b6e4f2173b8cc7ee4bb008d496</anchor>
      <arglist>(const std::string &amp;model)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ReactorNet.cpp</name>
    <path>/home/bryan/development/cantera/src/zeroD/</path>
    <filename>ReactorNet_8cpp</filename>
    <includes id="ReactorNet_8h" name="ReactorNet.h" local="yes" imported="no">cantera/zeroD/ReactorNet.h</includes>
    <includes id="FlowDevice_8h" name="FlowDevice.h" local="yes" imported="no">cantera/zeroD/FlowDevice.h</includes>
    <includes id="Wall_8h" name="Wall.h" local="yes" imported="no">cantera/zeroD/Wall.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ReactorNet.h</name>
    <path>/home/bryan/development/cantera/include/cantera/zeroD/</path>
    <filename>ReactorNet_8h</filename>
    <includes id="Reactor_8h" name="Reactor.h" local="yes" imported="no">Reactor.h</includes>
    <includes id="FuncEval_8h" name="FuncEval.h" local="yes" imported="no">cantera/numerics/FuncEval.h</includes>
    <includes id="Integrator_8h" name="Integrator.h" local="yes" imported="no">cantera/numerics/Integrator.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">cantera/base/Array.h</includes>
    <class kind="class">Cantera::ReactorNet</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ReactorSurface.cpp</name>
    <path>/home/bryan/development/cantera/src/zeroD/</path>
    <filename>ReactorSurface_8cpp</filename>
    <includes id="ReactorSurface_8h" name="ReactorSurface.h" local="yes" imported="no">cantera/zeroD/ReactorSurface.h</includes>
    <includes id="ReactorNet_8h" name="ReactorNet.h" local="yes" imported="no">cantera/zeroD/ReactorNet.h</includes>
    <includes id="SurfPhase_8h" name="SurfPhase.h" local="yes" imported="no">cantera/thermo/SurfPhase.h</includes>
    <includes id="Kinetics_8h" name="Kinetics.h" local="yes" imported="no">cantera/kinetics/Kinetics.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ReactorSurface.h</name>
    <path>/home/bryan/development/cantera/include/cantera/zeroD/</path>
    <filename>ReactorSurface_8h</filename>
    <includes id="ReactorBase_8h" name="ReactorBase.h" local="yes" imported="no">cantera/zeroD/ReactorBase.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>RedlichKisterVPSSTP.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>RedlichKisterVPSSTP_8cpp</filename>
    <includes id="RedlichKisterVPSSTP_8h" name="RedlichKisterVPSSTP.h" local="yes" imported="no">cantera/thermo/RedlichKisterVPSSTP.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>RedlichKisterVPSSTP.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>RedlichKisterVPSSTP_8h</filename>
    <includes id="GibbsExcessVPSSTP_8h" name="GibbsExcessVPSSTP.h" local="yes" imported="no">cantera/thermo/GibbsExcessVPSSTP.h</includes>
    <class kind="class">Cantera::RedlichKisterVPSSTP</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>RedlichKwongMFTP.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>RedlichKwongMFTP_8cpp</filename>
    <includes id="RedlichKwongMFTP_8h" name="RedlichKwongMFTP.h" local="yes" imported="no">cantera/thermo/RedlichKwongMFTP.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>RedlichKwongMFTP.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>RedlichKwongMFTP_8h</filename>
    <includes id="MixtureFugacityTP_8h" name="MixtureFugacityTP.h" local="yes" imported="no">MixtureFugacityTP.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">cantera/base/Array.h</includes>
    <class kind="class">Cantera::RedlichKwongMFTP</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>refine.cpp</name>
    <path>/home/bryan/development/cantera/src/oneD/</path>
    <filename>refine_8cpp</filename>
    <includes id="StFlow_8h" name="StFlow.h" local="yes" imported="no">cantera/oneD/StFlow.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Reservoir.h</name>
    <path>/home/bryan/development/cantera/include/cantera/zeroD/</path>
    <filename>Reservoir_8h</filename>
    <includes id="ReactorBase_8h" name="ReactorBase.h" local="yes" imported="no">ReactorBase.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ResidEval.h</name>
    <path>/home/bryan/development/cantera/include/cantera/numerics/</path>
    <filename>ResidEval_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">cantera/base/utilities.h</includes>
    <class kind="class">Cantera::ResidEval</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ResidJacEval.cpp</name>
    <path>/home/bryan/development/cantera/src/numerics/</path>
    <filename>ResidJacEval_8cpp</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <includes id="ResidJacEval_8h" name="ResidJacEval.h" local="yes" imported="no">cantera/numerics/ResidJacEval.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ResidJacEval.h</name>
    <path>/home/bryan/development/cantera/include/cantera/numerics/</path>
    <filename>ResidJacEval_8h</filename>
    <includes id="ResidEval_8h" name="ResidEval.h" local="yes" imported="no">ResidEval.h</includes>
    <includes id="DenseMatrix_8h" name="DenseMatrix.h" local="yes" imported="no">DenseMatrix.h</includes>
    <class kind="class">Cantera::ResidJacEval</class>
    <namespace>Cantera</namespace>
    <member kind="enumeration">
      <type></type>
      <name>ResidEval_Type_Enum</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a929b71317e0aa7f81336a73311423c14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Base_ResidEval</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a929b71317e0aa7f81336a73311423c14aa2c7a3e5e067f69fb2a99054cc956741</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JacBase_ResidEval</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a929b71317e0aa7f81336a73311423c14ab3ac1217d93227a4ccf060ae8f412e7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JacDelta_ResidEval</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a929b71317e0aa7f81336a73311423c14a0e79d1d952655ddf7eaab9917d81ff1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Base_ShowSolution</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a929b71317e0aa7f81336a73311423c14a71ca89d30f5bf39b5f3191a08fa0d128</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Base_LaggedSolutionComponents</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a929b71317e0aa7f81336a73311423c14aa5361e66d7f032bd558f11b7478aefc0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RxnRates.cpp</name>
    <path>/home/bryan/development/cantera/src/kinetics/</path>
    <filename>RxnRates_8cpp</filename>
    <includes id="RxnRates_8h" name="RxnRates.h" local="yes" imported="no">cantera/kinetics/RxnRates.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">cantera/base/Array.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>RxnRates.h</name>
    <path>/home/bryan/development/cantera/include/cantera/kinetics/</path>
    <filename>RxnRates_8h</filename>
    <includes id="reaction__defs_8h" name="reaction_defs.h" local="yes" imported="no">cantera/kinetics/reaction_defs.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <class kind="class">Cantera::Arrhenius</class>
    <class kind="class">Cantera::SurfaceArrhenius</class>
    <class kind="class">Cantera::Plog</class>
    <class kind="class">Cantera::ChebyshevRate</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ShomatePoly.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>ShomatePoly_8h</filename>
    <includes id="SpeciesThermoInterpType_8h" name="SpeciesThermoInterpType.h" local="yes" imported="no">cantera/thermo/SpeciesThermoInterpType.h</includes>
    <class kind="class">Cantera::ShomatePoly</class>
    <class kind="class">Cantera::ShomatePoly2</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Sim1D.cpp</name>
    <path>/home/bryan/development/cantera/src/oneD/</path>
    <filename>Sim1D_8cpp</filename>
    <includes id="Sim1D_8h" name="Sim1D.h" local="yes" imported="no">cantera/oneD/Sim1D.h</includes>
    <includes id="MultiJac_8h" name="MultiJac.h" local="yes" imported="no">cantera/oneD/MultiJac.h</includes>
    <includes id="StFlow_8h" name="StFlow.h" local="yes" imported="no">cantera/oneD/StFlow.h</includes>
    <includes id="MultiNewton_8h" name="MultiNewton.h" local="yes" imported="no">cantera/oneD/MultiNewton.h</includes>
    <includes id="funcs_8h" name="funcs.h" local="yes" imported="no">cantera/numerics/funcs.h</includes>
    <includes id="xml_8h" name="xml.h" local="yes" imported="no">cantera/base/xml.h</includes>
    <includes id="Func1_8h" name="Func1.h" local="yes" imported="no">cantera/numerics/Func1.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Sim1D.h</name>
    <path>/home/bryan/development/cantera/include/cantera/oneD/</path>
    <filename>Sim1D_8h</filename>
    <includes id="OneDim_8h" name="OneDim.h" local="yes" imported="no">OneDim.h</includes>
    <class kind="class">Cantera::Sim1D</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>SimpleTransport.cpp</name>
    <path>/home/bryan/development/cantera/src/transport/</path>
    <filename>SimpleTransport_8cpp</filename>
    <includes id="SimpleTransport_8h" name="SimpleTransport.h" local="yes" imported="no">cantera/transport/SimpleTransport.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>SimpleTransport.h</name>
    <path>/home/bryan/development/cantera/include/cantera/transport/</path>
    <filename>SimpleTransport_8h</filename>
    <includes id="LiquidTransportParams_8h" name="LiquidTransportParams.h" local="yes" imported="no">LiquidTransportParams.h</includes>
    <class kind="class">Cantera::SimpleTransport</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>SingleSpeciesTP.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>SingleSpeciesTP_8cpp</filename>
    <includes id="SingleSpeciesTP_8h" name="SingleSpeciesTP.h" local="yes" imported="no">cantera/thermo/SingleSpeciesTP.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="global_8h" name="global.h" local="yes" imported="no">cantera/base/global.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>SingleSpeciesTP.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>SingleSpeciesTP_8h</filename>
    <includes id="ThermoPhase_8h" name="ThermoPhase.h" local="yes" imported="no">ThermoPhase.h</includes>
    <class kind="class">Cantera::SingleSpeciesTP</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>SolidTransport.cpp</name>
    <path>/home/bryan/development/cantera/src/transport/</path>
    <filename>SolidTransport_8cpp</filename>
    <includes id="SolidTransport_8h" name="SolidTransport.h" local="yes" imported="no">cantera/transport/SolidTransport.h</includes>
    <includes id="SolidTransportData_8h" name="SolidTransportData.h" local="yes" imported="no">cantera/transport/SolidTransportData.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>SolidTransport.h</name>
    <path>/home/bryan/development/cantera/include/cantera/transport/</path>
    <filename>SolidTransport_8h</filename>
    <includes id="LTPspecies_8h" name="LTPspecies.h" local="yes" imported="no">LTPspecies.h</includes>
    <includes id="TransportBase_8h" name="TransportBase.h" local="yes" imported="no">TransportBase.h</includes>
    <class kind="class">Cantera::SolidTransport</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>SolidTransportData.cpp</name>
    <path>/home/bryan/development/cantera/src/transport/</path>
    <filename>SolidTransportData_8cpp</filename>
    <includes id="SolidTransportData_8h" name="SolidTransportData.h" local="yes" imported="no">cantera/transport/SolidTransportData.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>SolidTransportData.h</name>
    <path>/home/bryan/development/cantera/include/cantera/transport/</path>
    <filename>SolidTransportData_8h</filename>
    <includes id="TransportParams_8h" name="TransportParams.h" local="yes" imported="no">cantera/transport/TransportParams.h</includes>
    <includes id="LTPspecies_8h" name="LTPspecies.h" local="yes" imported="no">cantera/transport/LTPspecies.h</includes>
    <class kind="class">Cantera::SolidTransportData</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>solveSP.h</name>
    <path>/home/bryan/development/cantera/include/cantera/kinetics/</path>
    <filename>solveSP_8h</filename>
    <includes id="InterfaceKinetics_8h" name="InterfaceKinetics.h" local="yes" imported="no">cantera/kinetics/InterfaceKinetics.h</includes>
    <includes id="DenseMatrix_8h" name="DenseMatrix.h" local="yes" imported="no">cantera/numerics/DenseMatrix.h</includes>
    <class kind="class">Cantera::solveSP</class>
    <namespace>Cantera</namespace>
    <member kind="variable">
      <type>const int</type>
      <name>SFLUX_INITIALIZE</name>
      <anchorfile>group__solvesp__methods.html</anchorfile>
      <anchor>gae5f542008d31d9746cb795b0462a5b94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>SFLUX_RESIDUAL</name>
      <anchorfile>group__solvesp__methods.html</anchorfile>
      <anchor>ga4f2ffc1091d10bd8e779af896864981f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>SFLUX_JACOBIAN</name>
      <anchorfile>group__solvesp__methods.html</anchorfile>
      <anchor>gadd3b85c5011b46f207b0e38497238127</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>SFLUX_TRANSIENT</name>
      <anchorfile>group__solvesp__methods.html</anchorfile>
      <anchor>ga4d7c44bf008036d22deb9c3ee0bbb9eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>BULK_DEPOSITION</name>
      <anchorfile>group__solvesp__bulkFunc.html</anchorfile>
      <anchor>gaa7b207ea4b9b00fe897eb275ace8afbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>BULK_ETCH</name>
      <anchorfile>group__solvesp__bulkFunc.html</anchorfile>
      <anchor>ga92b5e73562d02f6ccb5ae3d6182938b8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Species.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>Species_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <includes id="AnyMap_8h" name="AnyMap.h" local="yes" imported="no">cantera/base/AnyMap.h</includes>
    <class kind="class">Cantera::Species</class>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>shared_ptr&lt; Species &gt;</type>
      <name>newSpecies</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a5ae29e5a8ce6a76463b3d8f71df8b07e</anchor>
      <arglist>(const XML_Node &amp;species_node)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; shared_ptr&lt; Species &gt; &gt;</type>
      <name>getSpecies</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a8d1bee8dcd3b3decffaf3459374e5139</anchor>
      <arglist>(const XML_Node &amp;node)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SpeciesThermoFactory.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>SpeciesThermoFactory_8cpp</filename>
    <includes id="SpeciesThermoFactory_8h" name="SpeciesThermoFactory.h" local="yes" imported="no">cantera/thermo/SpeciesThermoFactory.h</includes>
    <includes id="MultiSpeciesThermo_8h" name="MultiSpeciesThermo.h" local="yes" imported="no">cantera/thermo/MultiSpeciesThermo.h</includes>
    <includes id="Mu0Poly_8h" name="Mu0Poly.h" local="yes" imported="no">cantera/thermo/Mu0Poly.h</includes>
    <includes id="Nasa9PolyMultiTempRegion_8h" name="Nasa9PolyMultiTempRegion.h" local="yes" imported="no">cantera/thermo/Nasa9PolyMultiTempRegion.h</includes>
    <includes id="Nasa9Poly1_8h" name="Nasa9Poly1.h" local="yes" imported="no">cantera/thermo/Nasa9Poly1.h</includes>
    <includes id="NasaPoly2_8h" name="NasaPoly2.h" local="yes" imported="no">cantera/thermo/NasaPoly2.h</includes>
    <includes id="ShomatePoly_8h" name="ShomatePoly.h" local="yes" imported="no">cantera/thermo/ShomatePoly.h</includes>
    <includes id="ConstCpPoly_8h" name="ConstCpPoly.h" local="yes" imported="no">cantera/thermo/ConstCpPoly.h</includes>
    <includes id="AdsorbateThermo_8h" name="AdsorbateThermo.h" local="yes" imported="no">cantera/thermo/AdsorbateThermo.h</includes>
    <includes id="speciesThermoTypes_8h" name="speciesThermoTypes.h" local="yes" imported="no">cantera/thermo/speciesThermoTypes.h</includes>
    <includes id="VPStandardStateTP_8h" name="VPStandardStateTP.h" local="yes" imported="no">cantera/thermo/VPStandardStateTP.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>SpeciesThermoInterpType *</type>
      <name>newSpeciesThermoInterpType</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>afb02ac53280719e7ac379232336484a1</anchor>
      <arglist>(int type, double tlow, double thigh, double pref, const double *coeffs)</arglist>
    </member>
    <member kind="function">
      <type>SpeciesThermoInterpType *</type>
      <name>newSpeciesThermoInterpType</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ae5dd881339c0b91ff7fc9c2b1741fb72</anchor>
      <arglist>(const std::string &amp;type, double tlow, double thigh, double pref, const double *coeffs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SpeciesThermoInterpType *</type>
      <name>newNasaThermoFromXML</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ad4ab2fda8e7c2b60873fda4bd85690fe</anchor>
      <arglist>(vector&lt; XML_Node *&gt; nodes)</arglist>
    </member>
    <member kind="function">
      <type>SpeciesThermoInterpType *</type>
      <name>newShomateForMineralEQ3</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a01c938cdd8011396823618912c89c3f5</anchor>
      <arglist>(const XML_Node &amp;MinEQ3node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SpeciesThermoInterpType *</type>
      <name>newShomateThermoFromXML</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a7b28dbc5e41f389657b66673c08c4cf0</anchor>
      <arglist>(vector&lt; XML_Node *&gt; &amp;nodes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SpeciesThermoInterpType *</type>
      <name>newConstCpThermoFromXML</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a6b88fb0b764374c7db30f731e1857efc</anchor>
      <arglist>(XML_Node &amp;f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SpeciesThermoInterpType *</type>
      <name>newNasa9ThermoFromXML</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a9d802789c8d66185a617159237e315d5</anchor>
      <arglist>(const std::vector&lt; XML_Node *&gt; &amp;tp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SpeciesThermoInterpType *</type>
      <name>newAdsorbateThermoFromXML</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a7e77434ce7a2039f75cb002355bc3625</anchor>
      <arglist>(const XML_Node &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>SpeciesThermoInterpType *</type>
      <name>newSpeciesThermoInterpType</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a74ba99b6aa28f380837d87ef64dd2fa4</anchor>
      <arglist>(const XML_Node &amp;thermoNode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SpeciesThermoFactory.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>SpeciesThermoFactory_8h</filename>
    <includes id="SpeciesThermoInterpType_8h" name="SpeciesThermoInterpType.h" local="yes" imported="no">SpeciesThermoInterpType.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>SpeciesThermoInterpType *</type>
      <name>newSpeciesThermoInterpType</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>afb02ac53280719e7ac379232336484a1</anchor>
      <arglist>(int type, double tlow, double thigh, double pref, const double *coeffs)</arglist>
    </member>
    <member kind="function">
      <type>SpeciesThermoInterpType *</type>
      <name>newSpeciesThermoInterpType</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ae5dd881339c0b91ff7fc9c2b1741fb72</anchor>
      <arglist>(const std::string &amp;type, double tlow, double thigh, double pref, const double *coeffs)</arglist>
    </member>
    <member kind="function">
      <type>SpeciesThermoInterpType *</type>
      <name>newSpeciesThermoInterpType</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a74ba99b6aa28f380837d87ef64dd2fa4</anchor>
      <arglist>(const XML_Node &amp;thermoNode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SpeciesThermoInterpType.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>SpeciesThermoInterpType_8cpp</filename>
    <includes id="SpeciesThermoInterpType_8h" name="SpeciesThermoInterpType.h" local="yes" imported="no">cantera/thermo/SpeciesThermoInterpType.h</includes>
    <includes id="PDSS_8h" name="PDSS.h" local="yes" imported="no">cantera/thermo/PDSS.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>SpeciesThermoInterpType.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>SpeciesThermoInterpType_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <includes id="speciesThermoTypes_8h" name="speciesThermoTypes.h" local="yes" imported="no">speciesThermoTypes.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <includes id="global_8h" name="global.h" local="yes" imported="no">cantera/base/global.h</includes>
    <class kind="class">Cantera::SpeciesThermoInterpType</class>
    <class kind="class">Cantera::STITbyPDSS</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>speciesThermoTypes.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>speciesThermoTypes_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>CONSTANT_CP</name>
      <anchorfile>speciesThermoTypes_8h.html</anchorfile>
      <anchor>a1c3dfa4094041518792f6bb2ce8b3a4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POLYNOMIAL_4</name>
      <anchorfile>speciesThermoTypes_8h.html</anchorfile>
      <anchor>ad5e586f9f8a8435bbf5623e5c2b74760</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NASA</name>
      <anchorfile>speciesThermoTypes_8h.html</anchorfile>
      <anchor>aef09debb68abd3c3a68c3988c950edf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NASA2</name>
      <anchorfile>speciesThermoTypes_8h.html</anchorfile>
      <anchor>afc59b79ac08ed86ef2b7251357efa77d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHOMATE</name>
      <anchorfile>speciesThermoTypes_8h.html</anchorfile>
      <anchor>a7b012023ac014e404054ee8e059e692a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHOMATE2</name>
      <anchorfile>speciesThermoTypes_8h.html</anchorfile>
      <anchor>ab23d14a2de6849dac5cb4bd30880b717</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TIGER</name>
      <anchorfile>speciesThermoTypes_8h.html</anchorfile>
      <anchor>a5d571c41c8149c86b5a8c9d31a989360</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SIMPLE</name>
      <anchorfile>speciesThermoTypes_8h.html</anchorfile>
      <anchor>af24471f1578a70e28e9c6775449d88b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MU0_INTERP</name>
      <anchorfile>speciesThermoTypes_8h.html</anchorfile>
      <anchor>a239b13c6ee8b8fa05f0f9b20787600dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHOMATE1</name>
      <anchorfile>speciesThermoTypes_8h.html</anchorfile>
      <anchor>a34f7a9aae14e83777a80f1cebddb30f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NASA1</name>
      <anchorfile>speciesThermoTypes_8h.html</anchorfile>
      <anchor>a072b63704a05ab216151716db7e3b463</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NASA9</name>
      <anchorfile>speciesThermoTypes_8h.html</anchorfile>
      <anchor>a8f36b350a1f9991dcb5fe9961284e7e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NASA9MULTITEMP</name>
      <anchorfile>speciesThermoTypes_8h.html</anchorfile>
      <anchor>a76aed1385aff9ff22a02fe128b5f2db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADSORBATE</name>
      <anchorfile>speciesThermoTypes_8h.html</anchorfile>
      <anchor>abff13a05dbd171def9e2313ae78aed38</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDSS_TYPE</name>
      <anchorfile>speciesThermoTypes_8h.html</anchorfile>
      <anchor>aee48c7998185d952f3a59c575b189835</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>StFlow.cpp</name>
    <path>/home/bryan/development/cantera/src/oneD/</path>
    <filename>StFlow_8cpp</filename>
    <includes id="StFlow_8h" name="StFlow.h" local="yes" imported="no">cantera/oneD/StFlow.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="TransportBase_8h" name="TransportBase.h" local="yes" imported="no">cantera/transport/TransportBase.h</includes>
    <includes id="funcs_8h" name="funcs.h" local="yes" imported="no">cantera/numerics/funcs.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>StFlow.h</name>
    <path>/home/bryan/development/cantera/include/cantera/oneD/</path>
    <filename>StFlow_8h</filename>
    <includes id="Domain1D_8h" name="Domain1D.h" local="yes" imported="no">Domain1D.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">cantera/base/Array.h</includes>
    <includes id="IdealGasPhase_8h" name="IdealGasPhase.h" local="yes" imported="no">cantera/thermo/IdealGasPhase.h</includes>
    <includes id="Kinetics_8h" name="Kinetics.h" local="yes" imported="no">cantera/kinetics/Kinetics.h</includes>
    <class kind="class">Cantera::StFlow</class>
    <class kind="class">Cantera::AxiStagnFlow</class>
    <class kind="class">Cantera::FreeFlame</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>StoichManager.h</name>
    <path>/home/bryan/development/cantera/include/cantera/kinetics/</path>
    <filename>StoichManager_8h</filename>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <class kind="class">Cantera::C1</class>
    <class kind="class">Cantera::C2</class>
    <class kind="class">Cantera::C3</class>
    <class kind="class">Cantera::C_AnyN</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>StoichSubstance.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>StoichSubstance_8cpp</filename>
    <includes id="StoichSubstance_8h" name="StoichSubstance.h" local="yes" imported="no">cantera/thermo/StoichSubstance.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>StoichSubstance.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>StoichSubstance_8h</filename>
    <includes id="SingleSpeciesTP_8h" name="SingleSpeciesTP.h" local="yes" imported="no">SingleSpeciesTP.h</includes>
    <class kind="class">Cantera::StoichSubstance</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>stringUtils.cpp</name>
    <path>/home/bryan/development/cantera/src/base/</path>
    <filename>stringUtils_8cpp</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">cantera/base/utilities.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>vec2str</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a5b722bf618cb150a186ff92c37581377</anchor>
      <arglist>(const vector_fp &amp;v, const std::string &amp;fmt=&quot;%g&quot;, const std::string &amp;sep=&quot;, &quot;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>stripnonprint</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ae2e25406ab30098069551a0b4c5d45de</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>compositionMap</type>
      <name>parseCompString</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aeb84fb8591813c96958522a5f62f1cc7</anchor>
      <arglist>(const std::string &amp;ss, const std::vector&lt; std::string &gt; &amp;names=std::vector&lt; std::string &gt;())</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>intValue</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a12e43976b9c806ebd37e48da389dbe7b</anchor>
      <arglist>(const std::string &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>fpValue</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a40ba7b5ab1b1b24301cb7efbef4ca7fb</anchor>
      <arglist>(const std::string &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>fpValueCheck</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac365a4fc99d3bcfa1281c6e58c74efec</anchor>
      <arglist>(const std::string &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>parseSpeciesName</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa55dee65bcc43472a343f99291ad8928</anchor>
      <arglist>(const std::string &amp;nameStr, std::string &amp;phaseName)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>strSItoDbl</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac80b2ff9e60bbba0a999ee807be8e838</anchor>
      <arglist>(const std::string &amp;strSI)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tokenizeString</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ad51b0173f30c42c9a48112c6e671218a</anchor>
      <arglist>(const std::string &amp;oval, std::vector&lt; std::string &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>copyString</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a77d436f7ba30e0d4cb86c18f6df945ec</anchor>
      <arglist>(const std::string &amp;source, char *dest, size_t length)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>trimCopy</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a767b1414783740533a57be03b8bd1e3d</anchor>
      <arglist>(const std::string &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toLowerCopy</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a793eb598985b264bd4d8f5d3a5258ef8</anchor>
      <arglist>(const std::string &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>caseInsensitiveEquals</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a4e26f1418e441d82847b41542216bcd9</anchor>
      <arglist>(const std::string &amp;input, const std::string &amp;test)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stringUtils.h</name>
    <path>/home/bryan/development/cantera/include/cantera/base/</path>
    <filename>stringUtils_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">ct_defs.h</includes>
    <includes id="fmt_8h" name="fmt.h" local="yes" imported="no">cantera/base/fmt.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>vec2str</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a5b722bf618cb150a186ff92c37581377</anchor>
      <arglist>(const vector_fp &amp;v, const std::string &amp;fmt=&quot;%g&quot;, const std::string &amp;sep=&quot;, &quot;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>stripnonprint</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ae2e25406ab30098069551a0b4c5d45de</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>compositionMap</type>
      <name>parseCompString</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aeb84fb8591813c96958522a5f62f1cc7</anchor>
      <arglist>(const std::string &amp;ss, const std::vector&lt; std::string &gt; &amp;names=std::vector&lt; std::string &gt;())</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>intValue</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a12e43976b9c806ebd37e48da389dbe7b</anchor>
      <arglist>(const std::string &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>fpValue</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a40ba7b5ab1b1b24301cb7efbef4ca7fb</anchor>
      <arglist>(const std::string &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>fpValueCheck</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac365a4fc99d3bcfa1281c6e58c74efec</anchor>
      <arglist>(const std::string &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>parseSpeciesName</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa55dee65bcc43472a343f99291ad8928</anchor>
      <arglist>(const std::string &amp;nameStr, std::string &amp;phaseName)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>strSItoDbl</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac80b2ff9e60bbba0a999ee807be8e838</anchor>
      <arglist>(const std::string &amp;strSI)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tokenizeString</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ad51b0173f30c42c9a48112c6e671218a</anchor>
      <arglist>(const std::string &amp;oval, std::vector&lt; std::string &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>copyString</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a77d436f7ba30e0d4cb86c18f6df945ec</anchor>
      <arglist>(const std::string &amp;source, char *dest, size_t length)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>trimCopy</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a767b1414783740533a57be03b8bd1e3d</anchor>
      <arglist>(const std::string &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toLowerCopy</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a793eb598985b264bd4d8f5d3a5258ef8</anchor>
      <arglist>(const std::string &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>caseInsensitiveEquals</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a4e26f1418e441d82847b41542216bcd9</anchor>
      <arglist>(const std::string &amp;input, const std::string &amp;test)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Sub.cpp</name>
    <path>/home/bryan/development/cantera/src/tpx/</path>
    <filename>Sub_8cpp</filename>
    <includes id="Sub_8h" name="Sub.h" local="yes" imported="no">cantera/tpx/Sub.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="global_8h" name="global.h" local="yes" imported="no">cantera/base/global.h</includes>
  </compound>
  <compound kind="file">
    <name>Sub.h</name>
    <path>/home/bryan/development/cantera/include/cantera/tpx/</path>
    <filename>Sub_8h</filename>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <class kind="class">tpx::Substance</class>
  </compound>
  <compound kind="file">
    <name>SurfPhase.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>SurfPhase_8cpp</filename>
    <includes id="SurfPhase_8h" name="SurfPhase.h" local="yes" imported="no">cantera/thermo/SurfPhase.h</includes>
    <includes id="EdgePhase_8h" name="EdgePhase.h" local="yes" imported="no">cantera/thermo/EdgePhase.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">cantera/base/utilities.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>SurfPhase.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>SurfPhase_8h</filename>
    <includes id="ThermoPhase_8h" name="ThermoPhase.h" local="yes" imported="no">ThermoPhase.h</includes>
    <class kind="class">Cantera::SurfPhase</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>thermo.h</name>
    <path>/home/bryan/development/cantera/include/cantera/</path>
    <filename>thermo_8h</filename>
    <includes id="ThermoPhase_8h" name="ThermoPhase.h" local="yes" imported="no">thermo/ThermoPhase.h</includes>
    <includes id="Species_8h" name="Species.h" local="yes" imported="no">thermo/Species.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">thermo/ThermoFactory.h</includes>
    <includes id="SpeciesThermoInterpType_8h" name="SpeciesThermoInterpType.h" local="yes" imported="no">thermo/SpeciesThermoInterpType.h</includes>
    <includes id="SpeciesThermoFactory_8h" name="SpeciesThermoFactory.h" local="yes" imported="no">thermo/SpeciesThermoFactory.h</includes>
  </compound>
  <compound kind="file">
    <name>ThermoFactory.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>ThermoFactory_8cpp</filename>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <includes id="Species_8h" name="Species.h" local="yes" imported="no">cantera/thermo/Species.h</includes>
    <includes id="speciesThermoTypes_8h" name="speciesThermoTypes.h" local="yes" imported="no">cantera/thermo/speciesThermoTypes.h</includes>
    <includes id="SpeciesThermoFactory_8h" name="SpeciesThermoFactory.h" local="yes" imported="no">cantera/thermo/SpeciesThermoFactory.h</includes>
    <includes id="PDSSFactory_8h" name="PDSSFactory.h" local="yes" imported="no">cantera/thermo/PDSSFactory.h</includes>
    <includes id="MultiSpeciesThermo_8h" name="MultiSpeciesThermo.h" local="yes" imported="no">cantera/thermo/MultiSpeciesThermo.h</includes>
    <includes id="IdealGasPhase_8h" name="IdealGasPhase.h" local="yes" imported="no">cantera/thermo/IdealGasPhase.h</includes>
    <includes id="IdealSolidSolnPhase_8h" name="IdealSolidSolnPhase.h" local="yes" imported="no">cantera/thermo/IdealSolidSolnPhase.h</includes>
    <includes id="MaskellSolidSolnPhase_8h" name="MaskellSolidSolnPhase.h" local="yes" imported="no">cantera/thermo/MaskellSolidSolnPhase.h</includes>
    <includes id="MargulesVPSSTP_8h" name="MargulesVPSSTP.h" local="yes" imported="no">cantera/thermo/MargulesVPSSTP.h</includes>
    <includes id="RedlichKisterVPSSTP_8h" name="RedlichKisterVPSSTP.h" local="yes" imported="no">cantera/thermo/RedlichKisterVPSSTP.h</includes>
    <includes id="IonsFromNeutralVPSSTP_8h" name="IonsFromNeutralVPSSTP.h" local="yes" imported="no">cantera/thermo/IonsFromNeutralVPSSTP.h</includes>
    <includes id="PhaseCombo__Interaction_8h" name="PhaseCombo_Interaction.h" local="yes" imported="no">cantera/thermo/PhaseCombo_Interaction.h</includes>
    <includes id="PureFluidPhase_8h" name="PureFluidPhase.h" local="yes" imported="no">cantera/thermo/PureFluidPhase.h</includes>
    <includes id="RedlichKwongMFTP_8h" name="RedlichKwongMFTP.h" local="yes" imported="no">cantera/thermo/RedlichKwongMFTP.h</includes>
    <includes id="ConstDensityThermo_8h" name="ConstDensityThermo.h" local="yes" imported="no">cantera/thermo/ConstDensityThermo.h</includes>
    <includes id="SurfPhase_8h" name="SurfPhase.h" local="yes" imported="no">cantera/thermo/SurfPhase.h</includes>
    <includes id="EdgePhase_8h" name="EdgePhase.h" local="yes" imported="no">cantera/thermo/EdgePhase.h</includes>
    <includes id="MetalPhase_8h" name="MetalPhase.h" local="yes" imported="no">cantera/thermo/MetalPhase.h</includes>
    <includes id="StoichSubstance_8h" name="StoichSubstance.h" local="yes" imported="no">cantera/thermo/StoichSubstance.h</includes>
    <includes id="MineralEQ3_8h" name="MineralEQ3.h" local="yes" imported="no">cantera/thermo/MineralEQ3.h</includes>
    <includes id="MetalSHEelectrons_8h" name="MetalSHEelectrons.h" local="yes" imported="no">cantera/thermo/MetalSHEelectrons.h</includes>
    <includes id="FixedChemPotSSTP_8h" name="FixedChemPotSSTP.h" local="yes" imported="no">cantera/thermo/FixedChemPotSSTP.h</includes>
    <includes id="LatticeSolidPhase_8h" name="LatticeSolidPhase.h" local="yes" imported="no">cantera/thermo/LatticeSolidPhase.h</includes>
    <includes id="LatticePhase_8h" name="LatticePhase.h" local="yes" imported="no">cantera/thermo/LatticePhase.h</includes>
    <includes id="HMWSoln_8h" name="HMWSoln.h" local="yes" imported="no">cantera/thermo/HMWSoln.h</includes>
    <includes id="DebyeHuckel_8h" name="DebyeHuckel.h" local="yes" imported="no">cantera/thermo/DebyeHuckel.h</includes>
    <includes id="IdealMolalSoln_8h" name="IdealMolalSoln.h" local="yes" imported="no">cantera/thermo/IdealMolalSoln.h</includes>
    <includes id="MolarityIonicVPSSTP_8h" name="MolarityIonicVPSSTP.h" local="yes" imported="no">cantera/thermo/MolarityIonicVPSSTP.h</includes>
    <includes id="IdealSolnGasVPSS_8h" name="IdealSolnGasVPSS.h" local="yes" imported="no">cantera/thermo/IdealSolnGasVPSS.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>ThermoPhase *</type>
      <name>newPhase</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>gae7ab44a3276a87e4e3408c91c9167f4a</anchor>
      <arglist>(XML_Node &amp;phase)</arglist>
    </member>
    <member kind="function">
      <type>ThermoPhase *</type>
      <name>newPhase</name>
      <anchorfile>group__thermoprops.html</anchorfile>
      <anchor>gac4ee44bd37ea9c1ca0fa4212af1d8baa</anchor>
      <arglist>(const std::string &amp;infile, std::string id=&quot;&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>formSpeciesXMLNodeList</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a4790ffa243fa10646c64e3d752157602</anchor>
      <arglist>(std::vector&lt; XML_Node *&gt; &amp;spDataNodeList, std::vector&lt; std::string &gt; &amp;spNamesList, vector_int &amp;spRuleList, const std::vector&lt; XML_Node *&gt; spArray_names, const std::vector&lt; XML_Node *&gt; spArray_dbases, const vector_int sprule)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>importPhase</name>
      <anchorfile>group__thermoprops.html</anchorfile>
      <anchor>ga8ef0ddc75ddb04cbe40dc9508c3c23f2</anchor>
      <arglist>(XML_Node &amp;phase, ThermoPhase *th)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>installElements</name>
      <anchorfile>group__thermoprops.html</anchorfile>
      <anchor>gaa1a8e4e755addef4ebd3d6a10a619768</anchor>
      <arglist>(Phase &amp;th, const XML_Node &amp;phaseNode)</arglist>
    </member>
    <member kind="function">
      <type>const XML_Node *</type>
      <name>speciesXML_Node</name>
      <anchorfile>group__thermoprops.html</anchorfile>
      <anchor>ga795278f91e905724307bc51f240a5574</anchor>
      <arglist>(const std::string &amp;kname, const XML_Node *phaseSpeciesData)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ThermoFactory.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>ThermoFactory_8h</filename>
    <includes id="ThermoPhase_8h" name="ThermoPhase.h" local="yes" imported="no">ThermoPhase.h</includes>
    <includes id="xml_8h" name="xml.h" local="yes" imported="no">cantera/base/xml.h</includes>
    <includes id="FactoryBase_8h" name="FactoryBase.h" local="yes" imported="no">cantera/base/FactoryBase.h</includes>
    <class kind="class">Cantera::UnknownThermoPhaseModel</class>
    <class kind="class">Cantera::ThermoFactory</class>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>ThermoPhase *</type>
      <name>newThermoPhase</name>
      <anchorfile>group__thermoprops.html</anchorfile>
      <anchor>gab79a3fca59a013a5d3fad542e25213b9</anchor>
      <arglist>(const std::string &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>ThermoPhase *</type>
      <name>newPhase</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>gae7ab44a3276a87e4e3408c91c9167f4a</anchor>
      <arglist>(XML_Node &amp;phase)</arglist>
    </member>
    <member kind="function">
      <type>ThermoPhase *</type>
      <name>newPhase</name>
      <anchorfile>group__thermoprops.html</anchorfile>
      <anchor>gac4ee44bd37ea9c1ca0fa4212af1d8baa</anchor>
      <arglist>(const std::string &amp;infile, std::string id=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>importPhase</name>
      <anchorfile>group__thermoprops.html</anchorfile>
      <anchor>ga8ef0ddc75ddb04cbe40dc9508c3c23f2</anchor>
      <arglist>(XML_Node &amp;phase, ThermoPhase *th)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>installElements</name>
      <anchorfile>group__thermoprops.html</anchorfile>
      <anchor>gaa1a8e4e755addef4ebd3d6a10a619768</anchor>
      <arglist>(Phase &amp;th, const XML_Node &amp;phaseNode)</arglist>
    </member>
    <member kind="function">
      <type>const XML_Node *</type>
      <name>speciesXML_Node</name>
      <anchorfile>group__thermoprops.html</anchorfile>
      <anchor>ga795278f91e905724307bc51f240a5574</anchor>
      <arglist>(const std::string &amp;kname, const XML_Node *phaseSpeciesData)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ThermoPhase.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>ThermoPhase_8cpp</filename>
    <includes id="ThermoPhase_8h" name="ThermoPhase.h" local="yes" imported="no">cantera/thermo/ThermoPhase.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <includes id="SpeciesThermoInterpType_8h" name="SpeciesThermoInterpType.h" local="yes" imported="no">cantera/thermo/SpeciesThermoInterpType.h</includes>
    <includes id="ChemEquil_8h" name="ChemEquil.h" local="yes" imported="no">cantera/equil/ChemEquil.h</includes>
    <includes id="MultiPhase_8h" name="MultiPhase.h" local="yes" imported="no">cantera/equil/MultiPhase.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ThermoPhase.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>ThermoPhase_8h</filename>
    <includes id="Phase_8h" name="Phase.h" local="yes" imported="no">Phase.h</includes>
    <includes id="MultiSpeciesThermo_8h" name="MultiSpeciesThermo.h" local="yes" imported="no">MultiSpeciesThermo.h</includes>
    <includes id="global_8h" name="global.h" local="yes" imported="no">cantera/base/global.h</includes>
    <class kind="class">Cantera::ThermoPhase</class>
    <namespace>Cantera</namespace>
    <member kind="typedef">
      <type>ThermoPhase</type>
      <name>thermo_t</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a8236f718220883b27d0dcb93d3b0f328</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cAC_CONVENTION_MOLAR</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a451f2e7bea2dc8d0fcc451b1cfcf2b4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cAC_CONVENTION_MOLALITY</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aef5d8f7985e646cecaefd8bf38d0adee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cSS_CONVENTION_TEMPERATURE</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa0ea25ae1d9344f16340919143530847</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cSS_CONVENTION_VPSS</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3265905962fc12616b0caaeabb889826</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cSS_CONVENTION_SLAVE</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ab9b8ba28a8ed37ee0bbea110859754ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cAC_CONVENTION_MOLAR</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a451f2e7bea2dc8d0fcc451b1cfcf2b4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cAC_CONVENTION_MOLALITY</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aef5d8f7985e646cecaefd8bf38d0adee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cSS_CONVENTION_TEMPERATURE</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa0ea25ae1d9344f16340919143530847</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cSS_CONVENTION_VPSS</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3265905962fc12616b0caaeabb889826</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cSS_CONVENTION_SLAVE</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ab9b8ba28a8ed37ee0bbea110859754ac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ThirdBodyCalc.h</name>
    <path>/home/bryan/development/cantera/include/cantera/kinetics/</path>
    <filename>ThirdBodyCalc_8h</filename>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">cantera/base/utilities.h</includes>
    <class kind="class">Cantera::ThirdBodyCalc</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Tortuosity.h</name>
    <path>/home/bryan/development/cantera/include/cantera/transport/</path>
    <filename>Tortuosity_8h</filename>
    <class kind="class">Cantera::Tortuosity</class>
    <class kind="class">Cantera::TortuosityPercolation</class>
    <class kind="class">Cantera::TortuosityMaxwell</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>transport.h</name>
    <path>/home/bryan/development/cantera/include/cantera/</path>
    <filename>transport_8h</filename>
    <includes id="TransportFactory_8h" name="TransportFactory.h" local="yes" imported="no">transport/TransportFactory.h</includes>
  </compound>
  <compound kind="file">
    <name>TransportBase.cpp</name>
    <path>/home/bryan/development/cantera/src/transport/</path>
    <filename>TransportBase_8cpp</filename>
    <includes id="TransportBase_8h" name="TransportBase.h" local="yes" imported="no">cantera/transport/TransportBase.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>TransportBase.h</name>
    <path>/home/bryan/development/cantera/include/cantera/transport/</path>
    <filename>TransportBase_8h</filename>
    <includes id="ThermoPhase_8h" name="ThermoPhase.h" local="yes" imported="no">cantera/thermo/ThermoPhase.h</includes>
    <class kind="class">Cantera::Transport</class>
    <namespace>Cantera</namespace>
    <member kind="typedef">
      <type>int</type>
      <name>VelocityBasis</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>ga6db7188408b57b95bb0da59376bfc9ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VelocityBasis</type>
      <name>VB_MASSAVG</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>ga96f35f99ee09bc61fcc00bdef46f6368</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VelocityBasis</type>
      <name>VB_MOLEAVG</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>gac7dfd49f9f283c0cb52b54918d4de28c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VelocityBasis</type>
      <name>VB_SPECIES_0</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>gaf7dd43de47d23b9f681b2c50ba2acf61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VelocityBasis</type>
      <name>VB_SPECIES_1</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>ga076e09978596085fc8f60c76733096f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VelocityBasis</type>
      <name>VB_SPECIES_2</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>gabf84dc8092bd874a8a8ad3d0fba24313</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VelocityBasis</type>
      <name>VB_SPECIES_3</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>gadc189f14531496989e70807ad3573eba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TransportData.cpp</name>
    <path>/home/bryan/development/cantera/src/transport/</path>
    <filename>TransportData_8cpp</filename>
    <includes id="TransportData_8h" name="TransportData.h" local="yes" imported="no">cantera/transport/TransportData.h</includes>
    <includes id="Species_8h" name="Species.h" local="yes" imported="no">cantera/thermo/Species.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>shared_ptr&lt; TransportData &gt;</type>
      <name>newTransportData</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ae565eec35aecbd1b3978d83a77bf8232</anchor>
      <arglist>(const XML_Node &amp;transport_node)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TransportData.h</name>
    <path>/home/bryan/development/cantera/include/cantera/transport/</path>
    <filename>TransportData_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <class kind="class">Cantera::TransportData</class>
    <class kind="class">Cantera::GasTransportData</class>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>shared_ptr&lt; TransportData &gt;</type>
      <name>newTransportData</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ae565eec35aecbd1b3978d83a77bf8232</anchor>
      <arglist>(const XML_Node &amp;transport_node)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TransportFactory.cpp</name>
    <path>/home/bryan/development/cantera/src/transport/</path>
    <filename>TransportFactory_8cpp</filename>
    <includes id="MultiTransport_8h" name="MultiTransport.h" local="yes" imported="no">cantera/transport/MultiTransport.h</includes>
    <includes id="MixTransport_8h" name="MixTransport.h" local="yes" imported="no">cantera/transport/MixTransport.h</includes>
    <includes id="UnityLewisTransport_8h" name="UnityLewisTransport.h" local="yes" imported="no">cantera/transport/UnityLewisTransport.h</includes>
    <includes id="IonGasTransport_8h" name="IonGasTransport.h" local="yes" imported="no">cantera/transport/IonGasTransport.h</includes>
    <includes id="SolidTransport_8h" name="SolidTransport.h" local="yes" imported="no">cantera/transport/SolidTransport.h</includes>
    <includes id="DustyGasTransport_8h" name="DustyGasTransport.h" local="yes" imported="no">cantera/transport/DustyGasTransport.h</includes>
    <includes id="SimpleTransport_8h" name="SimpleTransport.h" local="yes" imported="no">cantera/transport/SimpleTransport.h</includes>
    <includes id="LiquidTransport_8h" name="LiquidTransport.h" local="yes" imported="no">cantera/transport/LiquidTransport.h</includes>
    <includes id="HighPressureGasTransport_8h" name="HighPressureGasTransport.h" local="yes" imported="no">cantera/transport/HighPressureGasTransport.h</includes>
    <includes id="TransportFactory_8h" name="TransportFactory.h" local="yes" imported="no">cantera/transport/TransportFactory.h</includes>
    <includes id="SolidTransportData_8h" name="SolidTransportData.h" local="yes" imported="no">cantera/transport/SolidTransportData.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">cantera/base/utilities.h</includes>
    <class kind="class">Cantera::TransportDBError</class>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>Transport *</type>
      <name>newDefaultTransportMgr</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>gae3407d53d8110cd449a636228298ba4d</anchor>
      <arglist>(thermo_t *thermo, int loglevel=0)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TransportFactory.h</name>
    <path>/home/bryan/development/cantera/include/cantera/transport/</path>
    <filename>TransportFactory_8h</filename>
    <includes id="TransportBase_8h" name="TransportBase.h" local="yes" imported="no">TransportBase.h</includes>
    <includes id="FactoryBase_8h" name="FactoryBase.h" local="yes" imported="no">cantera/base/FactoryBase.h</includes>
    <includes id="LiquidTransportParams_8h" name="LiquidTransportParams.h" local="yes" imported="no">LiquidTransportParams.h</includes>
    <class kind="class">Cantera::TransportFactory</class>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>Transport *</type>
      <name>newDefaultTransportMgr</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>gae3407d53d8110cd449a636228298ba4d</anchor>
      <arglist>(thermo_t *thermo, int loglevel=0)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TransportParams.cpp</name>
    <path>/home/bryan/development/cantera/src/transport/</path>
    <filename>TransportParams_8cpp</filename>
    <includes id="TransportParams_8h" name="TransportParams.h" local="yes" imported="no">cantera/transport/TransportParams.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>TransportParams.h</name>
    <path>/home/bryan/development/cantera/include/cantera/transport/</path>
    <filename>TransportParams_8h</filename>
    <includes id="DenseMatrix_8h" name="DenseMatrix.h" local="yes" imported="no">cantera/numerics/DenseMatrix.h</includes>
    <includes id="TransportBase_8h" name="TransportBase.h" local="yes" imported="no">TransportBase.h</includes>
    <class kind="class">Cantera::TransportParams</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>units.h</name>
    <path>/home/bryan/development/cantera/src/base/</path>
    <filename>units_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <class kind="class">Cantera::Unit</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>UnityLewisTransport.h</name>
    <path>/home/bryan/development/cantera/include/cantera/transport/</path>
    <filename>UnityLewisTransport_8h</filename>
    <includes id="MixTransport_8h" name="MixTransport.h" local="yes" imported="no">MixTransport.h</includes>
    <class kind="class">Cantera::UnityLewisTransport</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>utilities.h</name>
    <path>/home/bryan/development/cantera/include/cantera/base/</path>
    <filename>utilities_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">ct_defs.h</includes>
    <includes id="global_8h" name="global.h" local="yes" imported="no">global.h</includes>
    <class kind="struct">Cantera::timesConstant</class>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>doublereal</type>
      <name>dot4</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a7cb5f1494672ce322bca0b2d3940c2a2</anchor>
      <arglist>(const V &amp;x, const V &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>dot5</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a9ab14f0829659b0748abd32fa8cdfc89</anchor>
      <arglist>(const V &amp;x, const V &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>dot</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a2e0d0036916502297fd21ffee900c41b</anchor>
      <arglist>(InputIter x_begin, InputIter x_end, InputIter2 y_begin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a805da1302033e3f56a3d53f6ea296f4b</anchor>
      <arglist>(InputIter begin, InputIter end, OutputIter out, S scale_factor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply_each</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a5c292cbe14b78329ec021bb1627946fb</anchor>
      <arglist>(OutputIter x_begin, OutputIter x_end, InputIter y_begin)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>absmax</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a36da549d3d59b1e18ba4913c7531e3ea</anchor>
      <arglist>(InputIter begin, InputIter end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aabb084ddbf5ff63a208a9c6b42c1a1a4</anchor>
      <arglist>(InputIter begin, InputIter end, OutputIter out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide_each</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a2dc0ac860716fad0004d9efb2a29c18c</anchor>
      <arglist>(OutputIter x_begin, OutputIter x_end, InputIter y_begin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sum_each</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa02abea516beef489e8cfdc1159d5bbb</anchor>
      <arglist>(OutputIter x_begin, OutputIter x_end, InputIter y_begin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scatter_copy</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a9dac94f1c5cef43fe0400127d2a0b88c</anchor>
      <arglist>(InputIter begin, InputIter end, OutputIter result, IndexIter index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scatter_mult</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a9e3ba968d009b6f423d296d960c7c62a</anchor>
      <arglist>(InputIter mult_begin, InputIter mult_end, RandAccessIter data, IndexIter index)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>sum_xlogx</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a6a4a89015224314d4f914a1cd607e70f</anchor>
      <arglist>(InputIter begin, InputIter end)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>sum_xlogQ</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a2f5edc20b5727c1d9d63f2f7d9885991</anchor>
      <arglist>(InputIter1 begin, InputIter1 end, InputIter2 Q_begin)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>poly6</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ad6bf2c3f1c20507381e768019c24f7dd</anchor>
      <arglist>(D x, R *c)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>poly8</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aaf5191524b09ebbaabed2a8e1a7d8821</anchor>
      <arglist>(D x, R *c)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>poly5</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a8445959d2c2ef7a6ca846f8f3b804157</anchor>
      <arglist>(D x, R *c)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>poly4</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac49b7eaa150f51f925d0e9869c0e4253</anchor>
      <arglist>(D x, R *c)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>poly3</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>abca98935cce3614e830dd4069cd5b228</anchor>
      <arglist>(D x, R *c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkFinite</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a29e84e6914c4eae9fe064bfa1d06644e</anchor>
      <arglist>(const double tmp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkFinite</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ad15e699994b1acff285903b2325a4739</anchor>
      <arglist>(const std::string &amp;name, double *values, size_t N)</arglist>
    </member>
    <member kind="function">
      <type>const U &amp;</type>
      <name>getValue</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a0705f9a3eb37e4f04b60986a33bfbed8</anchor>
      <arglist>(const std::map&lt; T, U &gt; &amp;m, const T &amp;key, const U &amp;default_val)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>utils.cpp</name>
    <path>/home/bryan/development/cantera/src/tpx/</path>
    <filename>utils_8cpp</filename>
    <includes id="utils_8h" name="utils.h" local="yes" imported="no">cantera/tpx/utils.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="CarbonDioxide_8h" name="CarbonDioxide.h" local="yes" imported="no">CarbonDioxide.h</includes>
    <includes id="Heptane_8h" name="Heptane.h" local="yes" imported="no">Heptane.h</includes>
    <includes id="HFC134a_8h" name="HFC134a.h" local="yes" imported="no">HFC134a.h</includes>
    <includes id="Hydrogen_8h" name="Hydrogen.h" local="yes" imported="no">Hydrogen.h</includes>
    <includes id="Methane_8h" name="Methane.h" local="yes" imported="no">Methane.h</includes>
    <includes id="Nitrogen_8h" name="Nitrogen.h" local="yes" imported="no">Nitrogen.h</includes>
    <includes id="Oxygen_8h" name="Oxygen.h" local="yes" imported="no">Oxygen.h</includes>
    <includes id="Water_8h" name="Water.h" local="yes" imported="no">Water.h</includes>
    <member kind="function">
      <type>Substance *</type>
      <name>newSubstance</name>
      <anchorfile>utils_8cpp.html</anchorfile>
      <anchor>af4d961a3fdc715dddaa0d5c086697b54</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>utils.h</name>
    <path>/home/bryan/development/cantera/include/cantera/tpx/</path>
    <filename>utils_8h</filename>
    <includes id="Sub_8h" name="Sub.h" local="yes" imported="no">cantera/tpx/Sub.h</includes>
    <member kind="function">
      <type>Substance *</type>
      <name>newSubstance</name>
      <anchorfile>utils_8cpp.html</anchorfile>
      <anchor>af4d961a3fdc715dddaa0d5c086697b54</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ValueCache.cpp</name>
    <path>/home/bryan/development/cantera/src/base/</path>
    <filename>ValueCache_8cpp</filename>
    <includes id="ValueCache_8h" name="ValueCache.h" local="yes" imported="no">cantera/base/ValueCache.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>ValueCache.h</name>
    <path>/home/bryan/development/cantera/include/cantera/base/</path>
    <filename>ValueCache_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">ct_defs.h</includes>
    <class kind="struct">Cantera::CachedValue</class>
    <class kind="class">Cantera::ValueCache</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>vcs_defs.h</name>
    <path>/home/bryan/development/cantera/include/cantera/equil/</path>
    <filename>vcs__defs_8h</filename>
    <namespace>Cantera</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SUCCESS</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>adcfdf84a50a578cec01daaf9edbc602b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_RELDELETE_SPECIES_CUTOFF</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a3d5f9f53a3ceb72caee139bca2c277c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_DELETE_MINORSPECIES_CUTOFF</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a2a2fe316d8c37ff40038fef4f172e141</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SMALL_MULTIPHASE_SPECIES</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>ac23eb86929ff15fcfba78d287d1aa677</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_DELETE_PHASE_CUTOFF</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>aae62bc22c6c0ea16485658520b237ab3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_POP_PHASE_MOLENUM</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a83044fbb042e2ea62832ae36095b05ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_DELETE_ELEMENTABS_CUTOFF</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>ac8a1fa80faa1a68c30c3e849cb16cfbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_MAXSTEPS</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a330b361758b3209d39aebbabbb7bfdb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_COMPONENT_STOICHZERO</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a260447ec4fca9489fa00a80baf979eaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_COMPONENT</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a4006c9a94f98c39b1a9e793f92493eb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_MAJOR</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a45a7c2620886313942262c746a2a5f94</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_MINOR</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>ac2bec97c68f1c9762fa413b2b3fdd2f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_SMALLMS</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a685ec00905257f3f13dab403bd9a1f4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_ZEROEDMS</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a8aa72393ec18a537099adf2ad8d1c32d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_ZEROEDSS</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>aadb1bc5843b38232b8ef3f2ec1cb1d2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_DELETED</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>ac0668a92b1693e0b9a3472a5ba31829b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_INTERFACIALVOLTAGE</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a0075668fa9fd0bc84ca5e7541785843d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_ZEROEDPHASE</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a8e167f2d005ab16c6872052ef9776f6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_ACTIVEBUTZERO</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a9ceef496ed6f1cf93a835145939e751f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_STOICHZERO</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a6ce702a5a27d9b3cff26f44801c9065a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_PHASE_EXIST_ALWAYS</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a54f0fc2777f1c23553cbd3453fc19b5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_PHASE_EXIST_YES</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>ad5d2df110bd4a228bf52cb06c961ec4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_PHASE_EXIST_MINORCONC</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>aa39e71f8b8da61a492aae572c216f02e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_PHASE_EXIST_NO</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a51371ed477f982cb229775fa5321abf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_PHASE_EXIST_ZEROEDPHASE</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>afb8add9aefedc09be64437f52233f3fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_ELEM_TYPE_TURNEDOFF</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>af8ec8dc829d623c68a5ff37b13084ab8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_ELEM_TYPE_ABSPOS</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a72abdca6083c2bdc49aebea708055bb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_ELEM_TYPE_ELECTRONCHARGE</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a9fbe4d8d446b29510bb9d025e12be782</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_ELEM_TYPE_CHARGENEUTRALITY</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>ac280b80d0b67e80ec5a74c545c8964ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_ELEM_TYPE_LATTICERATIO</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a9c38548a729c393778c4d308618aed1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_ELEM_TYPE_KINETICFROZEN</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a8a3b6ae5bd8bdbb0de032a1a10361026</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_ELEM_TYPE_SURFACECONSTRAINT</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a1a03947d816b6dddbd23c76a6777ba06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_ELEM_TYPE_OTHERCONSTRAINT</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a1a14be2babf4757a2a24735404161be0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_TYPE_MOLNUM</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a8870ab7420269abc4034f648a8ae473a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_TYPE_INTERFACIALVOLTAGE</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a029767e5493de113a6c7b4ac209e9164</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_STATECALC_UNKNOWN</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>ac534ae58ee7c1925609106dafdfd3ad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_STATECALC_OLD</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a2136ddd5b4cf8a5de2ace5e794ff725d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_STATECALC_NEW</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a7b3b0db4f467a254bfc6fb485da4924e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_STATECALC_PHASESTABILITY</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>ae569999a727cfcce67e8f698a8dea2dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_STATECALC_TMP</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a4dd022da0b051c0c25901d355ab57d94</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SUCCESS</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>adcfdf84a50a578cec01daaf9edbc602b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_RELDELETE_SPECIES_CUTOFF</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a3d5f9f53a3ceb72caee139bca2c277c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_DELETE_MINORSPECIES_CUTOFF</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a2a2fe316d8c37ff40038fef4f172e141</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SMALL_MULTIPHASE_SPECIES</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>ac23eb86929ff15fcfba78d287d1aa677</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_DELETE_PHASE_CUTOFF</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>aae62bc22c6c0ea16485658520b237ab3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_POP_PHASE_MOLENUM</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a83044fbb042e2ea62832ae36095b05ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_DELETE_ELEMENTABS_CUTOFF</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>ac8a1fa80faa1a68c30c3e849cb16cfbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_MAXSTEPS</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a330b361758b3209d39aebbabbb7bfdb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_COMPONENT_STOICHZERO</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a260447ec4fca9489fa00a80baf979eaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_COMPONENT</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a4006c9a94f98c39b1a9e793f92493eb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_MAJOR</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a45a7c2620886313942262c746a2a5f94</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_MINOR</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>ac2bec97c68f1c9762fa413b2b3fdd2f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_SMALLMS</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a685ec00905257f3f13dab403bd9a1f4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_ZEROEDMS</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a8aa72393ec18a537099adf2ad8d1c32d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_ZEROEDSS</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>aadb1bc5843b38232b8ef3f2ec1cb1d2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_DELETED</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>ac0668a92b1693e0b9a3472a5ba31829b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_INTERFACIALVOLTAGE</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a0075668fa9fd0bc84ca5e7541785843d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_ZEROEDPHASE</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a8e167f2d005ab16c6872052ef9776f6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_ACTIVEBUTZERO</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a9ceef496ed6f1cf93a835145939e751f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_STOICHZERO</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a6ce702a5a27d9b3cff26f44801c9065a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_PHASE_EXIST_ALWAYS</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a54f0fc2777f1c23553cbd3453fc19b5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_PHASE_EXIST_YES</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>ad5d2df110bd4a228bf52cb06c961ec4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_PHASE_EXIST_MINORCONC</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>aa39e71f8b8da61a492aae572c216f02e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_PHASE_EXIST_NO</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a51371ed477f982cb229775fa5321abf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_PHASE_EXIST_ZEROEDPHASE</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>afb8add9aefedc09be64437f52233f3fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_ELEM_TYPE_TURNEDOFF</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>af8ec8dc829d623c68a5ff37b13084ab8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_ELEM_TYPE_ABSPOS</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a72abdca6083c2bdc49aebea708055bb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_ELEM_TYPE_ELECTRONCHARGE</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a9fbe4d8d446b29510bb9d025e12be782</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_ELEM_TYPE_CHARGENEUTRALITY</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>ac280b80d0b67e80ec5a74c545c8964ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_ELEM_TYPE_LATTICERATIO</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a9c38548a729c393778c4d308618aed1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_ELEM_TYPE_KINETICFROZEN</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a8a3b6ae5bd8bdbb0de032a1a10361026</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_ELEM_TYPE_SURFACECONSTRAINT</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a1a03947d816b6dddbd23c76a6777ba06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_ELEM_TYPE_OTHERCONSTRAINT</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a1a14be2babf4757a2a24735404161be0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_TYPE_MOLNUM</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a8870ab7420269abc4034f648a8ae473a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SPECIES_TYPE_INTERFACIALVOLTAGE</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a029767e5493de113a6c7b4ac209e9164</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_STATECALC_UNKNOWN</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>ac534ae58ee7c1925609106dafdfd3ad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_STATECALC_OLD</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a2136ddd5b4cf8a5de2ace5e794ff725d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_STATECALC_NEW</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a7b3b0db4f467a254bfc6fb485da4924e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_STATECALC_PHASESTABILITY</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>ae569999a727cfcce67e8f698a8dea2dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VCS_STATECALC_TMP</name>
      <anchorfile>vcs__defs_8h.html</anchorfile>
      <anchor>a4dd022da0b051c0c25901d355ab57d94</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vcs_elem.cpp</name>
    <path>/home/bryan/development/cantera/src/equil/</path>
    <filename>vcs__elem_8cpp</filename>
    <includes id="vcs__solve_8h" name="vcs_solve.h" local="yes" imported="no">cantera/equil/vcs_solve.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <includes id="DenseMatrix_8h" name="DenseMatrix.h" local="yes" imported="no">cantera/numerics/DenseMatrix.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>vcs_elem_rearrange.cpp</name>
    <path>/home/bryan/development/cantera/src/equil/</path>
    <filename>vcs__elem__rearrange_8cpp</filename>
    <includes id="vcs__solve_8h" name="vcs_solve.h" local="yes" imported="no">cantera/equil/vcs_solve.h</includes>
    <includes id="vcs__VolPhase_8h" name="vcs_VolPhase.h" local="yes" imported="no">cantera/equil/vcs_VolPhase.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>vcs_Gibbs.cpp</name>
    <path>/home/bryan/development/cantera/src/equil/</path>
    <filename>vcs__Gibbs_8cpp</filename>
    <includes id="vcs__solve_8h" name="vcs_solve.h" local="yes" imported="no">cantera/equil/vcs_solve.h</includes>
    <includes id="vcs__VolPhase_8h" name="vcs_VolPhase.h" local="yes" imported="no">cantera/equil/vcs_VolPhase.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>vcs_inest.cpp</name>
    <path>/home/bryan/development/cantera/src/equil/</path>
    <filename>vcs__inest_8cpp</filename>
    <includes id="vcs__solve_8h" name="vcs_solve.h" local="yes" imported="no">cantera/equil/vcs_solve.h</includes>
    <includes id="vcs__VolPhase_8h" name="vcs_VolPhase.h" local="yes" imported="no">cantera/equil/vcs_VolPhase.h</includes>
    <includes id="clockWC_8h" name="clockWC.h" local="yes" imported="no">cantera/base/clockWC.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>vcs_internal.h</name>
    <path>/home/bryan/development/cantera/include/cantera/equil/</path>
    <filename>vcs__internal_8h</filename>
    <includes id="global_8h" name="global.h" local="yes" imported="no">cantera/base/global.h</includes>
    <class kind="class">Cantera::VCS_COUNTERS</class>
    <namespace>Cantera</namespace>
    <member kind="define">
      <type>#define</type>
      <name>plogf</name>
      <anchorfile>vcs__internal_8h.html</anchorfile>
      <anchor>aaa5e9d97e39613d1d610f063d5723dc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double(*</type>
      <name>VCS_FUNC_PTR</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a2a2f79d7b23ff31e864b57c38f4a013c</anchor>
      <arglist>)(double xval, double Vtarget, int varID, void *fptrPassthrough, int *err)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vcs_l2norm</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a086776dc5619a43710d9f774492fd9c0</anchor>
      <arglist>(const vector_fp &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>vcs_speciesType_string</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a6f00f524246c2f92384c26b247972995</anchor>
      <arglist>(int speciesStatus, int length=100)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vcs_doubleEqual</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a7196aa61f088bc25e69a6ab83ccc21e8</anchor>
      <arglist>(double d1, double d2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vcs_MultiPhaseEquil.cpp</name>
    <path>/home/bryan/development/cantera/src/equil/</path>
    <filename>vcs__MultiPhaseEquil_8cpp</filename>
    <includes id="vcs__MultiPhaseEquil_8h" name="vcs_MultiPhaseEquil.h" local="yes" imported="no">cantera/equil/vcs_MultiPhaseEquil.h</includes>
    <includes id="vcs__VolPhase_8h" name="vcs_VolPhase.h" local="yes" imported="no">cantera/equil/vcs_VolPhase.h</includes>
    <includes id="vcs__species__thermo_8h" name="vcs_species_thermo.h" local="yes" imported="no">cantera/equil/vcs_species_thermo.h</includes>
    <includes id="clockWC_8h" name="clockWC.h" local="yes" imported="no">cantera/base/clockWC.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="speciesThermoTypes_8h" name="speciesThermoTypes.h" local="yes" imported="no">cantera/thermo/speciesThermoTypes.h</includes>
    <includes id="IdealSolidSolnPhase_8h" name="IdealSolidSolnPhase.h" local="yes" imported="no">cantera/thermo/IdealSolidSolnPhase.h</includes>
    <includes id="IdealMolalSoln_8h" name="IdealMolalSoln.h" local="yes" imported="no">cantera/thermo/IdealMolalSoln.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>vcs_MultiPhaseEquil.h</name>
    <path>/home/bryan/development/cantera/include/cantera/equil/</path>
    <filename>vcs__MultiPhaseEquil_8h</filename>
    <includes id="MultiPhase_8h" name="MultiPhase.h" local="yes" imported="no">MultiPhase.h</includes>
    <includes id="vcs__solve_8h" name="vcs_solve.h" local="yes" imported="no">vcs_solve.h</includes>
    <class kind="class">Cantera::vcs_MultiPhaseEquil</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>vcs_phaseStability.cpp</name>
    <path>/home/bryan/development/cantera/src/equil/</path>
    <filename>vcs__phaseStability_8cpp</filename>
    <includes id="vcs__solve_8h" name="vcs_solve.h" local="yes" imported="no">cantera/equil/vcs_solve.h</includes>
    <includes id="vcs__VolPhase_8h" name="vcs_VolPhase.h" local="yes" imported="no">cantera/equil/vcs_VolPhase.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>vcs_prep.cpp</name>
    <path>/home/bryan/development/cantera/src/equil/</path>
    <filename>vcs__prep_8cpp</filename>
    <includes id="vcs__solve_8h" name="vcs_solve.h" local="yes" imported="no">cantera/equil/vcs_solve.h</includes>
    <includes id="vcs__VolPhase_8h" name="vcs_VolPhase.h" local="yes" imported="no">cantera/equil/vcs_VolPhase.h</includes>
    <includes id="MultiPhase_8h" name="MultiPhase.h" local="yes" imported="no">cantera/equil/MultiPhase.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>vcs_prob.cpp</name>
    <path>/home/bryan/development/cantera/src/equil/</path>
    <filename>vcs__prob_8cpp</filename>
    <includes id="vcs__VolPhase_8h" name="vcs_VolPhase.h" local="yes" imported="no">cantera/equil/vcs_VolPhase.h</includes>
    <includes id="vcs__species__thermo_8h" name="vcs_species_thermo.h" local="yes" imported="no">cantera/equil/vcs_species_thermo.h</includes>
    <includes id="vcs__internal_8h" name="vcs_internal.h" local="yes" imported="no">cantera/equil/vcs_internal.h</includes>
    <includes id="vcs__defs_8h" name="vcs_defs.h" local="yes" imported="no">cantera/equil/vcs_defs.h</includes>
    <includes id="vcs__solve_8h" name="vcs_solve.h" local="yes" imported="no">cantera/equil/vcs_solve.h</includes>
    <includes id="MolalityVPSSTP_8h" name="MolalityVPSSTP.h" local="yes" imported="no">cantera/thermo/MolalityVPSSTP.h</includes>
    <includes id="MultiPhase_8h" name="MultiPhase.h" local="yes" imported="no">cantera/equil/MultiPhase.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>vcs_report.cpp</name>
    <path>/home/bryan/development/cantera/src/equil/</path>
    <filename>vcs__report_8cpp</filename>
    <includes id="vcs__solve_8h" name="vcs_solve.h" local="yes" imported="no">cantera/equil/vcs_solve.h</includes>
    <includes id="vcs__VolPhase_8h" name="vcs_VolPhase.h" local="yes" imported="no">cantera/equil/vcs_VolPhase.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>vcs_rxnadj.cpp</name>
    <path>/home/bryan/development/cantera/src/equil/</path>
    <filename>vcs__rxnadj_8cpp</filename>
    <includes id="vcs__solve_8h" name="vcs_solve.h" local="yes" imported="no">cantera/equil/vcs_solve.h</includes>
    <includes id="vcs__VolPhase_8h" name="vcs_VolPhase.h" local="yes" imported="no">cantera/equil/vcs_VolPhase.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>vcs_setMolesLinProg.cpp</name>
    <path>/home/bryan/development/cantera/src/equil/</path>
    <filename>vcs__setMolesLinProg_8cpp</filename>
    <includes id="vcs__solve_8h" name="vcs_solve.h" local="yes" imported="no">cantera/equil/vcs_solve.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>vcs_solve.cpp</name>
    <path>/home/bryan/development/cantera/src/equil/</path>
    <filename>vcs__solve_8cpp</filename>
    <includes id="vcs__solve_8h" name="vcs_solve.h" local="yes" imported="no">cantera/equil/vcs_solve.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="vcs__VolPhase_8h" name="vcs_VolPhase.h" local="yes" imported="no">cantera/equil/vcs_VolPhase.h</includes>
    <includes id="vcs__species__thermo_8h" name="vcs_species_thermo.h" local="yes" imported="no">cantera/equil/vcs_species_thermo.h</includes>
    <includes id="clockWC_8h" name="clockWC.h" local="yes" imported="no">cantera/base/clockWC.h</includes>
    <includes id="MultiPhase_8h" name="MultiPhase.h" local="yes" imported="no">cantera/equil/MultiPhase.h</includes>
    <namespace>Cantera</namespace>
    <member kind="variable">
      <type>int</type>
      <name>vcs_timing_print_lvl</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a1bed08dd50013012412579c25096b9dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vcs_solve.h</name>
    <path>/home/bryan/development/cantera/include/cantera/equil/</path>
    <filename>vcs__solve_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <includes id="vcs__defs_8h" name="vcs_defs.h" local="yes" imported="no">cantera/equil/vcs_defs.h</includes>
    <includes id="vcs__internal_8h" name="vcs_internal.h" local="yes" imported="no">cantera/equil/vcs_internal.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">cantera/base/Array.h</includes>
    <class kind="class">Cantera::VCS_SOLVE</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>vcs_solve_TP.cpp</name>
    <path>/home/bryan/development/cantera/src/equil/</path>
    <filename>vcs__solve__TP_8cpp</filename>
    <includes id="vcs__solve_8h" name="vcs_solve.h" local="yes" imported="no">cantera/equil/vcs_solve.h</includes>
    <includes id="vcs__VolPhase_8h" name="vcs_VolPhase.h" local="yes" imported="no">cantera/equil/vcs_VolPhase.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <includes id="clockWC_8h" name="clockWC.h" local="yes" imported="no">cantera/base/clockWC.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="DenseMatrix_8h" name="DenseMatrix.h" local="yes" imported="no">cantera/numerics/DenseMatrix.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>vcs_species_thermo.cpp</name>
    <path>/home/bryan/development/cantera/src/equil/</path>
    <filename>vcs__species__thermo_8cpp</filename>
    <includes id="vcs__species__thermo_8h" name="vcs_species_thermo.h" local="yes" imported="no">cantera/equil/vcs_species_thermo.h</includes>
    <includes id="vcs__defs_8h" name="vcs_defs.h" local="yes" imported="no">cantera/equil/vcs_defs.h</includes>
    <includes id="vcs__VolPhase_8h" name="vcs_VolPhase.h" local="yes" imported="no">cantera/equil/vcs_VolPhase.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <includes id="vcs__internal_8h" name="vcs_internal.h" local="yes" imported="no">cantera/equil/vcs_internal.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>vcs_species_thermo.h</name>
    <path>/home/bryan/development/cantera/include/cantera/equil/</path>
    <filename>vcs__species__thermo_8h</filename>
    <class kind="class">Cantera::VCS_SPECIES_THERMO</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>vcs_SpeciesProperties.cpp</name>
    <path>/home/bryan/development/cantera/src/equil/</path>
    <filename>vcs__SpeciesProperties_8cpp</filename>
    <includes id="vcs__SpeciesProperties_8h" name="vcs_SpeciesProperties.h" local="yes" imported="no">cantera/equil/vcs_SpeciesProperties.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>vcs_SpeciesProperties.h</name>
    <path>/home/bryan/development/cantera/include/cantera/equil/</path>
    <filename>vcs__SpeciesProperties_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <class kind="class">Cantera::vcs_SpeciesProperties</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>vcs_TP.cpp</name>
    <path>/home/bryan/development/cantera/src/equil/</path>
    <filename>vcs__TP_8cpp</filename>
    <includes id="vcs__solve_8h" name="vcs_solve.h" local="yes" imported="no">cantera/equil/vcs_solve.h</includes>
    <includes id="vcs__VolPhase_8h" name="vcs_VolPhase.h" local="yes" imported="no">cantera/equil/vcs_VolPhase.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>vcs_util.cpp</name>
    <path>/home/bryan/development/cantera/src/equil/</path>
    <filename>vcs__util_8cpp</filename>
    <includes id="vcs__internal_8h" name="vcs_internal.h" local="yes" imported="no">cantera/equil/vcs_internal.h</includes>
    <includes id="vcs__defs_8h" name="vcs_defs.h" local="yes" imported="no">cantera/equil/vcs_defs.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>double</type>
      <name>vcs_l2norm</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a086776dc5619a43710d9f774492fd9c0</anchor>
      <arglist>(const vector_fp &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>vcs_speciesType_string</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a6f00f524246c2f92384c26b247972995</anchor>
      <arglist>(int speciesStatus, int length=100)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vcs_doubleEqual</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a7196aa61f088bc25e69a6ab83ccc21e8</anchor>
      <arglist>(double d1, double d2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vcs_VolPhase.cpp</name>
    <path>/home/bryan/development/cantera/src/equil/</path>
    <filename>vcs__VolPhase_8cpp</filename>
    <includes id="vcs__VolPhase_8h" name="vcs_VolPhase.h" local="yes" imported="no">cantera/equil/vcs_VolPhase.h</includes>
    <includes id="vcs__species__thermo_8h" name="vcs_species_thermo.h" local="yes" imported="no">cantera/equil/vcs_species_thermo.h</includes>
    <includes id="vcs__solve_8h" name="vcs_solve.h" local="yes" imported="no">cantera/equil/vcs_solve.h</includes>
    <includes id="ThermoPhase_8h" name="ThermoPhase.h" local="yes" imported="no">cantera/thermo/ThermoPhase.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasChargedSpecies</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a70c91230cd190d46397c55a29d946471</anchor>
      <arglist>(const ThermoPhase *const tPhase)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>chargeNeutralityElement</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a9d360b8a2c2f12192a264e60a3aeb3d9</anchor>
      <arglist>(const ThermoPhase *const tPhase)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vcs_VolPhase.h</name>
    <path>/home/bryan/development/cantera/include/cantera/equil/</path>
    <filename>vcs__VolPhase_8h</filename>
    <includes id="vcs__SpeciesProperties_8h" name="vcs_SpeciesProperties.h" local="yes" imported="no">cantera/equil/vcs_SpeciesProperties.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">cantera/base/Array.h</includes>
    <class kind="class">Cantera::vcs_VolPhase</class>
    <namespace>Cantera</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VCS_SSVOL_IDEALGAS</name>
      <anchorfile>vcs__VolPhase_8h.html</anchorfile>
      <anchor>a3f3f063454676216eaf862ee017968da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>VPStandardStateTP.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>VPStandardStateTP_8cpp</filename>
    <includes id="VPStandardStateTP_8h" name="VPStandardStateTP.h" local="yes" imported="no">cantera/thermo/VPStandardStateTP.h</includes>
    <includes id="PDSS_8h" name="PDSS.h" local="yes" imported="no">cantera/thermo/PDSS.h</includes>
    <includes id="PDSS__Water_8h" name="PDSS_Water.h" local="yes" imported="no">cantera/thermo/PDSS_Water.h</includes>
    <includes id="IonsFromNeutralVPSSTP_8h" name="IonsFromNeutralVPSSTP.h" local="yes" imported="no">cantera/thermo/IonsFromNeutralVPSSTP.h</includes>
    <includes id="SpeciesThermoFactory_8h" name="SpeciesThermoFactory.h" local="yes" imported="no">cantera/thermo/SpeciesThermoFactory.h</includes>
    <includes id="PDSSFactory_8h" name="PDSSFactory.h" local="yes" imported="no">cantera/thermo/PDSSFactory.h</includes>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">cantera/base/utilities.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>VPStandardStateTP.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>VPStandardStateTP_8h</filename>
    <includes id="ThermoPhase_8h" name="ThermoPhase.h" local="yes" imported="no">ThermoPhase.h</includes>
    <includes id="PDSS_8h" name="PDSS.h" local="yes" imported="no">PDSS.h</includes>
    <class kind="class">Cantera::VPStandardStateTP</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Wall.cpp</name>
    <path>/home/bryan/development/cantera/src/zeroD/</path>
    <filename>Wall_8cpp</filename>
    <includes id="Wall_8h" name="Wall.h" local="yes" imported="no">cantera/zeroD/Wall.h</includes>
    <includes id="ReactorNet_8h" name="ReactorNet.h" local="yes" imported="no">cantera/zeroD/ReactorNet.h</includes>
    <includes id="Func1_8h" name="Func1.h" local="yes" imported="no">cantera/numerics/Func1.h</includes>
    <includes id="SurfPhase_8h" name="SurfPhase.h" local="yes" imported="no">cantera/thermo/SurfPhase.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Wall.h</name>
    <path>/home/bryan/development/cantera/include/cantera/zeroD/</path>
    <filename>Wall_8h</filename>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <includes id="Func1_8h" name="Func1.h" local="yes" imported="no">cantera/numerics/Func1.h</includes>
    <includes id="ReactorBase_8h" name="ReactorBase.h" local="yes" imported="no">cantera/zeroD/ReactorBase.h</includes>
    <includes id="ReactorSurface_8h" name="ReactorSurface.h" local="yes" imported="no">cantera/zeroD/ReactorSurface.h</includes>
    <class kind="class">Cantera::Wall</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>Water.cpp</name>
    <path>/home/bryan/development/cantera/src/tpx/</path>
    <filename>Water_8cpp</filename>
    <includes id="Water_8h" name="Water.h" local="yes" imported="no">Water.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
  </compound>
  <compound kind="file">
    <name>Water.h</name>
    <path>/home/bryan/development/cantera/src/tpx/</path>
    <filename>Water_8h</filename>
    <includes id="Sub_8h" name="Sub.h" local="yes" imported="no">cantera/tpx/Sub.h</includes>
    <class kind="class">tpx::water</class>
  </compound>
  <compound kind="file">
    <name>WaterProps.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>WaterProps_8cpp</filename>
    <includes id="WaterProps_8h" name="WaterProps.h" local="yes" imported="no">cantera/thermo/WaterProps.h</includes>
    <includes id="ctml_8h" name="ctml.h" local="yes" imported="no">cantera/base/ctml.h</includes>
    <includes id="PDSS__Water_8h" name="PDSS_Water.h" local="yes" imported="no">cantera/thermo/PDSS_Water.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>WaterProps.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>WaterProps_8h</filename>
    <includes id="ct__defs_8h" name="ct_defs.h" local="yes" imported="no">cantera/base/ct_defs.h</includes>
    <class kind="class">Cantera::WaterProps</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>WaterPropsIAPWS.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>WaterPropsIAPWS_8cpp</filename>
    <includes id="WaterPropsIAPWS_8h" name="WaterPropsIAPWS.h" local="yes" imported="no">cantera/thermo/WaterPropsIAPWS.h</includes>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">cantera/base/ctexceptions.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
    <member kind="variable">
      <type>const doublereal</type>
      <name>T_c</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aba7d6c272ace07325109e0c061dcac41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const doublereal</type>
      <name>P_c</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa2149f96848678ace7356866bcfdae82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Rho_c</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a520cf97721bce15bab3be4746f595804</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const doublereal</type>
      <name>M_water</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac91581a9f684905080912001300cbe16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const doublereal</type>
      <name>Rgas</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ada9ffba95a8d4fb61fba366e7d6daea1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WaterPropsIAPWS.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>WaterPropsIAPWS_8h</filename>
    <includes id="WaterPropsIAPWSphi_8h" name="WaterPropsIAPWSphi.h" local="yes" imported="no">WaterPropsIAPWSphi.h</includes>
    <class kind="class">Cantera::WaterPropsIAPWS</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>WaterPropsIAPWSphi.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>WaterPropsIAPWSphi_8cpp</filename>
    <includes id="WaterPropsIAPWSphi_8h" name="WaterPropsIAPWSphi.h" local="yes" imported="no">cantera/thermo/WaterPropsIAPWSphi.h</includes>
    <includes id="global_8h" name="global.h" local="yes" imported="no">cantera/base/global.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>WaterPropsIAPWSphi.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>WaterPropsIAPWSphi_8h</filename>
    <class kind="class">Cantera::WaterPropsIAPWSphi</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>WaterSSTP.cpp</name>
    <path>/home/bryan/development/cantera/src/thermo/</path>
    <filename>WaterSSTP_8cpp</filename>
    <includes id="WaterSSTP_8h" name="WaterSSTP.h" local="yes" imported="no">cantera/thermo/WaterSSTP.h</includes>
    <includes id="ThermoFactory_8h" name="ThermoFactory.h" local="yes" imported="no">cantera/thermo/ThermoFactory.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>WaterSSTP.h</name>
    <path>/home/bryan/development/cantera/include/cantera/thermo/</path>
    <filename>WaterSSTP_8h</filename>
    <includes id="SingleSpeciesTP_8h" name="SingleSpeciesTP.h" local="yes" imported="no">SingleSpeciesTP.h</includes>
    <includes id="WaterPropsIAPWS_8h" name="WaterPropsIAPWS.h" local="yes" imported="no">cantera/thermo/WaterPropsIAPWS.h</includes>
    <includes id="WaterProps_8h" name="WaterProps.h" local="yes" imported="no">cantera/thermo/WaterProps.h</includes>
    <class kind="class">Cantera::WaterSSTP</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>WaterTransport.cpp</name>
    <path>/home/bryan/development/cantera/src/transport/</path>
    <filename>WaterTransport_8cpp</filename>
    <includes id="WaterTransport_8h" name="WaterTransport.h" local="yes" imported="no">cantera/transport/WaterTransport.h</includes>
    <includes id="VPStandardStateTP_8h" name="VPStandardStateTP.h" local="yes" imported="no">cantera/thermo/VPStandardStateTP.h</includes>
    <includes id="PDSS__Water_8h" name="PDSS_Water.h" local="yes" imported="no">cantera/thermo/PDSS_Water.h</includes>
    <includes id="WaterSSTP_8h" name="WaterSSTP.h" local="yes" imported="no">cantera/thermo/WaterSSTP.h</includes>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>WaterTransport.h</name>
    <path>/home/bryan/development/cantera/include/cantera/transport/</path>
    <filename>WaterTransport_8h</filename>
    <includes id="LiquidTransportParams_8h" name="LiquidTransportParams.h" local="yes" imported="no">LiquidTransportParams.h</includes>
    <includes id="WaterPropsIAPWS_8h" name="WaterPropsIAPWS.h" local="yes" imported="no">cantera/thermo/WaterPropsIAPWS.h</includes>
    <class kind="class">Cantera::WaterTransport</class>
    <namespace>Cantera</namespace>
  </compound>
  <compound kind="file">
    <name>xml.cpp</name>
    <path>/home/bryan/development/cantera/src/base/</path>
    <filename>xml_8cpp</filename>
    <includes id="xml_8h" name="xml.h" local="yes" imported="no">cantera/base/xml.h</includes>
    <includes id="stringUtils_8h" name="stringUtils.h" local="yes" imported="no">cantera/base/stringUtils.h</includes>
    <includes id="global_8h" name="global.h" local="yes" imported="no">cantera/base/global.h</includes>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">cantera/base/utilities.h</includes>
    <class kind="class">Cantera::XML_Error</class>
    <class kind="class">Cantera::XML_TagMismatch</class>
    <class kind="class">Cantera::XML_NoChild</class>
    <namespace>Cantera</namespace>
    <member kind="function" static="yes">
      <type>static string::size_type</type>
      <name>findUnbackslashed</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a80b19383d89a3a459b4db57fc1469084</anchor>
      <arglist>(const std::string &amp;s, const char q, std::string::size_type istart=0)</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>findXMLPhase</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a09a7701bf0b7118023ee5958df57f48e</anchor>
      <arglist>(XML_Node *root, const std::string &amp;phaseName)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>xml.h</name>
    <path>/home/bryan/development/cantera/include/cantera/base/</path>
    <filename>xml_8h</filename>
    <includes id="ctexceptions_8h" name="ctexceptions.h" local="yes" imported="no">ctexceptions.h</includes>
    <includes id="global_8h" name="global.h" local="yes" imported="no">global.h</includes>
    <class kind="class">Cantera::XML_Reader</class>
    <class kind="class">Cantera::XML_Node</class>
    <namespace>Cantera</namespace>
    <member kind="function">
      <type>XML_Node *</type>
      <name>findXMLPhase</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a09a7701bf0b7118023ee5958df57f48e</anchor>
      <arglist>(XML_Node *root, const std::string &amp;phaseName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Adsorbate</name>
    <filename>classCantera_1_1Adsorbate.html</filename>
    <base>Cantera::SpeciesThermoInterpType</base>
    <member kind="function">
      <type></type>
      <name>Adsorbate</name>
      <anchorfile>classCantera_1_1Adsorbate.html</anchorfile>
      <anchor>a64480c3976f48454325a6f6de518830e</anchor>
      <arglist>(double tlow, double thigh, double pref, const double *coeffs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>reportType</name>
      <anchorfile>classCantera_1_1Adsorbate.html</anchorfile>
      <anchor>ae2d249a609d29261db259191f2100f4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updatePropertiesTemp</name>
      <anchorfile>classCantera_1_1Adsorbate.html</anchorfile>
      <anchor>a9ad26486b7aa404ff87b29b61472b7e9</anchor>
      <arglist>(const doublereal temp, doublereal *cp_R, doublereal *h_RT, doublereal *s_R) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reportParameters</name>
      <anchorfile>classCantera_1_1Adsorbate.html</anchorfile>
      <anchor>aa644859d921972e54e88c4f9ea56d854</anchor>
      <arglist>(size_t &amp;n, int &amp;type, doublereal &amp;tlow, doublereal &amp;thigh, doublereal &amp;pref, doublereal *const coeffs) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_freq</name>
      <anchorfile>classCantera_1_1Adsorbate.html</anchorfile>
      <anchor>ab1df13e1280de855dc5607ab90d807c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::AnyMap</name>
    <filename>classCantera_1_1AnyMap.html</filename>
  </compound>
  <compound kind="class">
    <name>Cantera::AnyValue</name>
    <filename>classCantera_1_1AnyValue.html</filename>
  </compound>
  <compound kind="class">
    <name>Cantera::Application</name>
    <filename>classCantera_1_1Application.html</filename>
    <class kind="class">Cantera::Application::Messages</class>
    <class kind="class">Cantera::Application::ThreadMessages</class>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Application</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>a713b51c450f3ae9db74cd857c2419173</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addError</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>a374c66d954f25c1f0ee859952648005e</anchor>
      <arglist>(const std::string &amp;r, const std::string &amp;msg=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getErrorCount</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>ad5e9a9a276f1d98add727ea3eb6e2fdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popError</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>aff4eeaace2472342ffd4107048fc7f0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>lastErrorMessage</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>a7785653a63fcc18c8c472b6e411eeca8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getErrors</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>ad1da9e20f047834165e4746fe1687136</anchor>
      <arglist>(std::ostream &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logErrors</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>a66d925145e4fa099cda970c0c5d8bbcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDataDirectory</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga665c099aafbe6dc958c3497997d732ad</anchor>
      <arglist>(const std::string &amp;dir)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>findInputFile</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga144465952eb1270d254a049a31411540</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getDataDirectories</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga56eae1a5159c796885f800504ee1d266</anchor>
      <arglist>(const std::string &amp;sep)</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>get_XML_File</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>a235b0367c7f1d78a08cf52c4a8c5448c</anchor>
      <arglist>(const std::string &amp;file, int debug=0)</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>get_XML_from_string</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>a72da66d231def86c76d798b44f35b93e</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close_XML_File</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>a8ffba23a8e87a86a0398f8fe1c2fe350</anchor>
      <arglist>(const std::string &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writelog</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>a304c529581146b5b5eeb034aed77d449</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writelogendl</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>aed3c4e18a21f764dc088d5957bcef148</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>warn_deprecated</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>ad5d610e093906d9c26b279745352299e</anchor>
      <arglist>(const std::string &amp;method, const std::string &amp;extra=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>suppress_deprecation_warnings</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>a2ad83de9e93f370a39fde7c30dd5dea6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_deprecation_warnings_fatal</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>a5c8f2df8777aeeb40a231aa3027e2c3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>suppress_thermo_warnings</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>ac489f7de1ec9e60d50297def82e69d19</anchor>
      <arglist>(bool suppress=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>thermo_warnings_suppressed</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>a3a8219ec9db18f6c28ba0713bd8f98c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogger</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>a40134534f5b00a810ec7b6de60378b00</anchor>
      <arglist>(Logger *logwriter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>thread_complete</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>aa6775f4e79890dac1c4e5eea51c57a1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Application *</type>
      <name>Instance</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>a5fbe5364ed1f350b9ca5303987423ca7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ApplicationDestroy</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>aed47b1658779659c45b1237602c4237a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>shared_ptr&lt; Messages &gt;</type>
      <name>pMessages_t</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>ac9c83d8d85333434b606be6de4284d93</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Application</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>aec7d6461aa7be31d98eff24b9d69ae3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setDefaultDirectories</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>gac430b8358a27aea9d3c1908dea79538d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>inputDirs</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>a34edd651e94cfebd3f0f32d2277f71da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::pair&lt; XML_Node *, int &gt; &gt;</type>
      <name>xmlfiles</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>ac366dec500f571a7f50ced52440aa65f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; std::string &gt;</type>
      <name>warnings</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>a15df8630cef9e5649c61a8ea47070243</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static Application *</type>
      <name>s_app</name>
      <anchorfile>classCantera_1_1Application.html</anchorfile>
      <anchor>a2778098f84e697b8c087057a561ff2c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Application::Messages</name>
    <filename>classCantera_1_1Application_1_1Messages.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addError</name>
      <anchorfile>group__errorhandling.html</anchorfile>
      <anchor>ga374c66d954f25c1f0ee859952648005e</anchor>
      <arglist>(const std::string &amp;r, const std::string &amp;msg=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getErrorCount</name>
      <anchorfile>group__errorhandling.html</anchorfile>
      <anchor>gad5e9a9a276f1d98add727ea3eb6e2fdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popError</name>
      <anchorfile>group__errorhandling.html</anchorfile>
      <anchor>gaff4eeaace2472342ffd4107048fc7f0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>lastErrorMessage</name>
      <anchorfile>group__errorhandling.html</anchorfile>
      <anchor>ga7785653a63fcc18c8c472b6e411eeca8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getErrors</name>
      <anchorfile>group__errorhandling.html</anchorfile>
      <anchor>gad1da9e20f047834165e4746fe1687136</anchor>
      <arglist>(std::ostream &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logErrors</name>
      <anchorfile>group__errorhandling.html</anchorfile>
      <anchor>ga66d925145e4fa099cda970c0c5d8bbcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writelog</name>
      <anchorfile>group__textlogs.html</anchorfile>
      <anchor>ga304c529581146b5b5eeb034aed77d449</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writelogendl</name>
      <anchorfile>classCantera_1_1Application_1_1Messages.html</anchorfile>
      <anchor>aed3c4e18a21f764dc088d5957bcef148</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogger</name>
      <anchorfile>group__textlogs.html</anchorfile>
      <anchor>ga40134534f5b00a810ec7b6de60378b00</anchor>
      <arglist>(Logger *logwriter)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>errorMessage</name>
      <anchorfile>classCantera_1_1Application_1_1Messages.html</anchorfile>
      <anchor>a3dbe866f0eecc198d7e22e6f53dd5b57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; Logger &gt;</type>
      <name>logwriter</name>
      <anchorfile>classCantera_1_1Application_1_1Messages.html</anchorfile>
      <anchor>a7b2cb27d136ec95be552a04283fa003d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Application::ThreadMessages</name>
    <filename>classCantera_1_1Application_1_1ThreadMessages.html</filename>
    <member kind="typedef">
      <type>std::map&lt; std::thread::id, pMessages_t &gt;</type>
      <name>threadMsgMap_t</name>
      <anchorfile>classCantera_1_1Application_1_1ThreadMessages.html</anchorfile>
      <anchor>a4e44d9681d227269784525f9b8735fe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ThreadMessages</name>
      <anchorfile>classCantera_1_1Application_1_1ThreadMessages.html</anchorfile>
      <anchor>ab8468c14303f44032540acaf3c6fa54d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Messages *</type>
      <name>operator-&gt;</name>
      <anchorfile>classCantera_1_1Application_1_1ThreadMessages.html</anchorfile>
      <anchor>ac214ca4cc91e2af14d3bc9ddd8f0eef3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeThreadMessages</name>
      <anchorfile>classCantera_1_1Application_1_1ThreadMessages.html</anchorfile>
      <anchor>adcae248ce9d90c401db67b14388c9e36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>threadMsgMap_t</type>
      <name>m_threadMsgMap</name>
      <anchorfile>classCantera_1_1Application_1_1ThreadMessages.html</anchorfile>
      <anchor>ac41559f201311429f48c7a31e059bb25</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::AqueousKinetics</name>
    <filename>classCantera_1_1AqueousKinetics.html</filename>
    <base>Cantera::BulkKinetics</base>
    <member kind="function">
      <type></type>
      <name>AqueousKinetics</name>
      <anchorfile>classCantera_1_1AqueousKinetics.html</anchorfile>
      <anchor>a6734ca761de5ca1f9137cfd8a036f8b0</anchor>
      <arglist>(thermo_t *thermo=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>kineticsType</name>
      <anchorfile>classCantera_1_1AqueousKinetics.html</anchorfile>
      <anchor>ad7dcd09d4e43dec6cdbd70a4412edf2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEquilibriumConstants</name>
      <anchorfile>classCantera_1_1AqueousKinetics.html</anchorfile>
      <anchor>ab8d2c41ec01bc6203df648a0b9cd806c</anchor>
      <arglist>(doublereal *kc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFwdRateConstants</name>
      <anchorfile>classCantera_1_1AqueousKinetics.html</anchorfile>
      <anchor>a5afbb7ec62ac028568d70322883439fe</anchor>
      <arglist>(doublereal *kfwd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_update_rates_T</name>
      <anchorfile>classCantera_1_1AqueousKinetics.html</anchorfile>
      <anchor>abe95ef0be10a79e36d8ec231d9c73835</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_update_rates_C</name>
      <anchorfile>classCantera_1_1AqueousKinetics.html</anchorfile>
      <anchor>a9aa3a6a8a02deda0179d2f2d8335dd34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateKc</name>
      <anchorfile>classCantera_1_1AqueousKinetics.html</anchorfile>
      <anchor>a8931461bd97d7de25974a3d1c10138cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addReaction</name>
      <anchorfile>classCantera_1_1AqueousKinetics.html</anchorfile>
      <anchor>a83c9a822d0a2627b291dcb2361769e1a</anchor>
      <arglist>(shared_ptr&lt; Reaction &gt; r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>modifyReaction</name>
      <anchorfile>classCantera_1_1AqueousKinetics.html</anchorfile>
      <anchor>a9f54370d32ba34fe3e68248ca22cd613</anchor>
      <arglist>(size_t i, shared_ptr&lt; Reaction &gt; rNew)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Array2D</name>
    <filename>classCantera_1_1Array2D.html</filename>
    <member kind="typedef">
      <type>vector_fp::iterator</type>
      <name>iterator</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>af3052098678ee5a458308c6eed1b3718</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector_fp::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>aedde688317797fa1e571a610769249e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array2D</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>af194b1c5e71b0bd61efe8a47ceb8075c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array2D</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>a0603927a30f7b721473dfc92b793e7c3</anchor>
      <arglist>(const size_t m, const size_t n, const doublereal v=0.0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array2D</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>a51b46dfcb67d485d70721bf11e53c73c</anchor>
      <arglist>(const size_t m, const size_t n, const doublereal *values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>a0722dec1df1abd8f6526070749a23fd7</anchor>
      <arglist>(size_t n, size_t m, doublereal v=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendColumn</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>ae34b9cf2d3d83284f636eb354cdf0fcb</anchor>
      <arglist>(const vector_fp &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendColumn</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>a3300faf449de4cc5c141bc2039781e5c</anchor>
      <arglist>(const doublereal *const c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRow</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>a05cedb2cc8dfe43e14b31160bd886518</anchor>
      <arglist>(size_t n, const doublereal *const rw)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getRow</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>a98917a3a163de91e20b2f2016ce67ac1</anchor>
      <arglist>(size_t n, doublereal *const rw)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumn</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>a5957ba93c146d28d8818789f0b45ef87</anchor>
      <arglist>(size_t m, doublereal *const col)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getColumn</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>a69b778db83745b7b5db7ccf9d570d138</anchor>
      <arglist>(size_t m, doublereal *const col)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zero</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>a0c4493a5d4723940d60164428f11adc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>doublereal &amp;</type>
      <name>operator()</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>a890f1169084d0841dab3198162b4afe5</anchor>
      <arglist>(size_t i, size_t j)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>operator()</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>a9a064f2e8bf9a58469b6f3baa8605b30</anchor>
      <arglist>(size_t i, size_t j) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal &amp;</type>
      <name>value</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>a17aafd9bdcfc4de55d4237c70e502962</anchor>
      <arglist>(size_t i, size_t j)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>value</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>a98c5130436f136bb421ab820546eba7b</anchor>
      <arglist>(size_t i, size_t j) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nRows</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>a6920eed672c95c66b8aef91962d11d06</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nColumns</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>a904ebae9c0a8f80edf951e84a1f5dbe7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>ad69bd11391be1a1dba5c8202259664f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>acad38d52497a975bfb6f2f6acd76631f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>a29305669b60ca1680752e2fc3592ba99</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>accf9a4bd0c34d4a5f6a7dab66ea10cdc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>vector_fp &amp;</type>
      <name>data</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>a1cbafc00609c657d0562c4694dbb4a63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>data</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>a4714f51a735f7a25cb43e3e6aabe6536</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal *</type>
      <name>ptrColumn</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>a8f565ce11fe7c227c2de6d96f5732f25</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function">
      <type>const doublereal *</type>
      <name>ptrColumn</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>a7e4ef8b411fa138d025e2ecf64c7782d</anchor>
      <arglist>(size_t j) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_data</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>a12e95d65b1f66ef00963b48a283e2691</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_nrows</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>a10fe17a74152c7023476cd0009bcee1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_ncols</name>
      <anchorfile>classCantera_1_1Array2D.html</anchorfile>
      <anchor>a74419b5091d8d7389846da5d6eb07606</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ArraySizeError</name>
    <filename>classCantera_1_1ArraySizeError.html</filename>
    <base>Cantera::CanteraError</base>
    <member kind="function">
      <type></type>
      <name>ArraySizeError</name>
      <anchorfile>classCantera_1_1ArraySizeError.html</anchorfile>
      <anchor>a82141696d163a84848ffbccffdddf105</anchor>
      <arglist>(const std::string &amp;procedure, size_t sz, size_t reqd)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getMessage</name>
      <anchorfile>classCantera_1_1ArraySizeError.html</anchorfile>
      <anchor>a1c1cc72e6e4257dbd29ff04a23973008</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getClass</name>
      <anchorfile>classCantera_1_1ArraySizeError.html</anchorfile>
      <anchor>a31a0154bd4d18f1bcd78a507b91056be</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Arrhenius</name>
    <filename>classCantera_1_1Arrhenius.html</filename>
    <member kind="function">
      <type></type>
      <name>Arrhenius</name>
      <anchorfile>classCantera_1_1Arrhenius.html</anchorfile>
      <anchor>aba579812d7d79bb33a3bb7b7d255a3c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Arrhenius</name>
      <anchorfile>classCantera_1_1Arrhenius.html</anchorfile>
      <anchor>a1038a2a1f26acd5582571fbb3b6879e8</anchor>
      <arglist>(doublereal A, doublereal b, doublereal E)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_C</name>
      <anchorfile>classCantera_1_1Arrhenius.html</anchorfile>
      <anchor>a34f4a70d7ddceff8933b2355763ed69f</anchor>
      <arglist>(const doublereal *c)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>updateLog</name>
      <anchorfile>classCantera_1_1Arrhenius.html</anchorfile>
      <anchor>a54ae4d95b51ebac3e52cb65a5d7dbcfc</anchor>
      <arglist>(doublereal logT, doublereal recipT) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>updateRC</name>
      <anchorfile>classCantera_1_1Arrhenius.html</anchorfile>
      <anchor>a354261ac5478e5384ff7d5175682a609</anchor>
      <arglist>(doublereal logT, doublereal recipT) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>preExponentialFactor</name>
      <anchorfile>classCantera_1_1Arrhenius.html</anchorfile>
      <anchor>ad09798797f5430a77e92d2a00840cb1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>temperatureExponent</name>
      <anchorfile>classCantera_1_1Arrhenius.html</anchorfile>
      <anchor>a764eedee1d92f091d7a1fb00d143a022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>activationEnergy_R</name>
      <anchorfile>classCantera_1_1Arrhenius.html</anchorfile>
      <anchor>a944ae0a43e1a2b473ed8dda485e97c9a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>type</name>
      <anchorfile>classCantera_1_1Arrhenius.html</anchorfile>
      <anchor>a2e3be63dca2a4aae8e55262718273283</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Arrhenius1</name>
    <filename>classCantera_1_1Arrhenius1.html</filename>
    <base>Cantera::Func1</base>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>duplicate</name>
      <anchorfile>classCantera_1_1Arrhenius1.html</anchorfile>
      <anchor>a4aa86693947c32c642a3d6ee556a8eed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1Arrhenius1.html</anchorfile>
      <anchor>acd39f99891dcb367c57588ec8c79b0c6</anchor>
      <arglist>(doublereal t) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cantera::atomicWeightData</name>
    <filename>structCantera_1_1atomicWeightData.html</filename>
    <member kind="variable">
      <type>string</type>
      <name>symbol</name>
      <anchorfile>structCantera_1_1atomicWeightData.html</anchorfile>
      <anchor>aa0183fad0a4c5c8a30c8fdc7b81a1279</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>fullName</name>
      <anchorfile>structCantera_1_1atomicWeightData.html</anchorfile>
      <anchor>a20dc5283470d1946c94e06c741e38f6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>atomicWeight</name>
      <anchorfile>structCantera_1_1atomicWeightData.html</anchorfile>
      <anchor>ac1b6080dd8f080f305ca80c61702d08f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::AxiStagnFlow</name>
    <filename>classCantera_1_1AxiStagnFlow.html</filename>
    <base>Cantera::StFlow</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evalRightBoundary</name>
      <anchorfile>classCantera_1_1AxiStagnFlow.html</anchorfile>
      <anchor>a17c99fdcaaf133d493fe4a7a0e41bfa4</anchor>
      <arglist>(doublereal *x, doublereal *res, integer *diag, doublereal rdt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evalContinuity</name>
      <anchorfile>classCantera_1_1AxiStagnFlow.html</anchorfile>
      <anchor>a94d658fe430f8a3c4144c08f0810857d</anchor>
      <arglist>(size_t j, doublereal *x, doublereal *r, integer *diag, doublereal rdt)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::BandMatrix</name>
    <filename>classCantera_1_1BandMatrix.html</filename>
    <base>Cantera::GeneralMatrix</base>
    <member kind="function">
      <type></type>
      <name>BandMatrix</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a84c04f28d6f50a1d5de566375b60792d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BandMatrix</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>abcf42dd1077584f4ac58e5d652b76938</anchor>
      <arglist>(size_t n, size_t kl, size_t ku, doublereal v=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>ab8ae69f6ba9b458c54b3e3bf9b6c5c26</anchor>
      <arglist>(size_t n, size_t kl, size_t ku, doublereal v=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bfill</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a807cd5523382db1d9198b2ca4ff25cb5</anchor>
      <arglist>(doublereal v=0.0)</arglist>
    </member>
    <member kind="function">
      <type>doublereal &amp;</type>
      <name>operator()</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a94d794e56870414a2ee075a7a51c5293</anchor>
      <arglist>(size_t i, size_t j)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>operator()</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a9a064f2e8bf9a58469b6f3baa8605b30</anchor>
      <arglist>(size_t i, size_t j) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal &amp;</type>
      <name>value</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>acac64b1e04df23e480b35ad8f1d0636d</anchor>
      <arglist>(size_t i, size_t j)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>value</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a98c5130436f136bb421ab820546eba7b</anchor>
      <arglist>(size_t i, size_t j) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>index</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a6381d497f1e7539efbc90397dbd7c9e2</anchor>
      <arglist>(size_t i, size_t j) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>_value</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a258609848a8f598e9957430b6f259c42</anchor>
      <arglist>(size_t i, size_t j) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>nRows</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a6920eed672c95c66b8aef91962d11d06</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nColumns</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a904ebae9c0a8f80edf951e84a1f5dbe7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nSubDiagonals</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a4582a70e62606c7896d15f7a4c2f618e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nSuperDiagonals</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a991cdb8da8dc3f8acc698eb7388bd0ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>ldim</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a4a5867ab6ba33ced821e59518ebe4c10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>mult</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a6782808f528d195bd6794dad3832ee70</anchor>
      <arglist>(const doublereal *b, doublereal *prod) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>leftMult</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>abcfa883b1c90312669a586a1cd9caa3f</anchor>
      <arglist>(const doublereal *const b, doublereal *const prod) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>factor</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a5f0888755aa8ad353d6996de3bbb134c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>aa4014a396abd286663c7e21c4eb83f09</anchor>
      <arglist>(const doublereal *const b, doublereal *const x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a86320de7d1206d1bd40915104af1a6c4</anchor>
      <arglist>(doublereal *b, size_t nrhs=1, size_t ldb=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual vector_fp::iterator</type>
      <name>begin</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a7f5b13acc7ff2d91d2255703d7b8650f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>vector_fp::iterator</type>
      <name>end</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>aa841ac6730d89deead6d69d6b4cea1fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>vector_fp::const_iterator</type>
      <name>begin</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a1df678d92b0efe9fbc34c702891cc109</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>vector_fp::const_iterator</type>
      <name>end</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a58e443e4396ab8c97e54f3397bcb594f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>zero</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a0c4493a5d4723940d60164428f11adc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>rcond</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a6ad99d631dfdf000fcf9943430f2d5b8</anchor>
      <arglist>(doublereal a1norm)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>factorAlgorithm</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>aa4d0701b698e399709e4fe218310442c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>oneNorm</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>af9b143b6881c17392bc554b5538b61a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal *</type>
      <name>ptrColumn</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a18f535b798e339d6876a0b853bee2540</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal *const  *</type>
      <name>colPts</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>ac7bb40500b4e4d1efbb814bd086bfb5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>checkRows</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a3482dff606e590a52766ada31a99abf5</anchor>
      <arglist>(doublereal &amp;valueSmall) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>checkColumns</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>aba0c149326a673aa202841f224f8ecb5</anchor>
      <arglist>(doublereal &amp;valueSmall) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>info</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>ab5355b499b2d433828bbf33a6ef90829</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>data</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>ada75123d9a4e6854130ffbe513dc5612</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>ludata</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a34750403f350d53f65a5375820e851d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_n</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>ad18a41dcde89b118c3d486d3aa5b5e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_kl</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a324b411cfc554703ffea895bd5bcf784</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_ku</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a2e0cfb51d9ebe1b074e0e900b7790fe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_zero</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a92a097bcad4b57fd81a2c0cfcf55be11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; PivData &gt;</type>
      <name>m_ipiv</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a7fabaa3fb80bb6e36e75e2d3044fd441</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; doublereal * &gt;</type>
      <name>m_colPtrs</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a3e00817b85da0e412f486cf1336e6d71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_int</type>
      <name>iwork_</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a78b120fa167d7b4e33b383c635d2e898</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>work_</name>
      <anchorfile>classCantera_1_1BandMatrix.html</anchorfile>
      <anchor>a9ee2cb99ac8920e655b20273ac12850f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Bdry1D</name>
    <filename>classCantera_1_1Bdry1D.html</filename>
    <base>Cantera::Domain1D</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1Bdry1D.html</anchorfile>
      <anchor>a9339772ec5ac9fa929938109207f2863</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTemperature</name>
      <anchorfile>classCantera_1_1Bdry1D.html</anchorfile>
      <anchor>a916a1ce9bd54041fc0191a0c70259768</anchor>
      <arglist>(doublereal t)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>temperature</name>
      <anchorfile>classCantera_1_1Bdry1D.html</anchorfile>
      <anchor>a8e25146d9f9fa1f523a6d3a60d2d02bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMoleFractions</name>
      <anchorfile>classCantera_1_1Bdry1D.html</anchorfile>
      <anchor>a53d2a5ce1f08ba65525242ae197050ad</anchor>
      <arglist>(const std::string &amp;xin)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMoleFractions</name>
      <anchorfile>classCantera_1_1Bdry1D.html</anchorfile>
      <anchor>a22ac0aad9e90bd138e84d8c547d0c49e</anchor>
      <arglist>(const doublereal *xin)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>massFraction</name>
      <anchorfile>classCantera_1_1Bdry1D.html</anchorfile>
      <anchor>a7941da009269934eb6319d4747f23cbe</anchor>
      <arglist>(size_t k)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMdot</name>
      <anchorfile>classCantera_1_1Bdry1D.html</anchorfile>
      <anchor>aae482e6b9bf7b8af473710dd5b91e2eb</anchor>
      <arglist>(doublereal mdot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>mdot</name>
      <anchorfile>classCantera_1_1Bdry1D.html</anchorfile>
      <anchor>a9d1c6e1cbbe5937dfd584adb6378d368</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupGrid</name>
      <anchorfile>classCantera_1_1Bdry1D.html</anchorfile>
      <anchor>a3a59a84618a5a8f28b8c63e1bbe56086</anchor>
      <arglist>(size_t n, const doublereal *z)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::BulkKinetics</name>
    <filename>classCantera_1_1BulkKinetics.html</filename>
    <base>Cantera::Kinetics</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isReversible</name>
      <anchorfile>classCantera_1_1BulkKinetics.html</anchorfile>
      <anchor>af39d155f296b54583a3ad17c3c3852e9</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaGibbs</name>
      <anchorfile>classCantera_1_1BulkKinetics.html</anchorfile>
      <anchor>ad69631cac287378c283168df8dafef0d</anchor>
      <arglist>(doublereal *deltaG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaEnthalpy</name>
      <anchorfile>classCantera_1_1BulkKinetics.html</anchorfile>
      <anchor>a57554eb16f3aa3df2dabf3a66ffbb41e</anchor>
      <arglist>(doublereal *deltaH)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaEntropy</name>
      <anchorfile>classCantera_1_1BulkKinetics.html</anchorfile>
      <anchor>abbd5b9f71b85c78d0f413ed82b68a404</anchor>
      <arglist>(doublereal *deltaS)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaSSGibbs</name>
      <anchorfile>classCantera_1_1BulkKinetics.html</anchorfile>
      <anchor>a06012cfe067d3753ad8edf4789dde1cc</anchor>
      <arglist>(doublereal *deltaG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaSSEnthalpy</name>
      <anchorfile>classCantera_1_1BulkKinetics.html</anchorfile>
      <anchor>ac729c926583379f4bb6e30f386ffca7b</anchor>
      <arglist>(doublereal *deltaH)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaSSEntropy</name>
      <anchorfile>classCantera_1_1BulkKinetics.html</anchorfile>
      <anchor>ab9dc371171918cd45813b24d4354dd83</anchor>
      <arglist>(doublereal *deltaS)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getRevRateConstants</name>
      <anchorfile>classCantera_1_1BulkKinetics.html</anchorfile>
      <anchor>a0d99321a45302aed6f3e89cd1b54cec6</anchor>
      <arglist>(doublereal *krev, bool doIrreversible=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addReaction</name>
      <anchorfile>classCantera_1_1BulkKinetics.html</anchorfile>
      <anchor>a83c9a822d0a2627b291dcb2361769e1a</anchor>
      <arglist>(shared_ptr&lt; Reaction &gt; r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resizeSpecies</name>
      <anchorfile>classCantera_1_1BulkKinetics.html</anchorfile>
      <anchor>aed2e3dc2792f0b83801e711fbcd18200</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMultiplier</name>
      <anchorfile>classCantera_1_1BulkKinetics.html</anchorfile>
      <anchor>a1ab6c6d652cbad357855abc9962a0293</anchor>
      <arglist>(size_t i, double f)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_revindex</name>
      <anchorfile>classCantera_1_1BulkKinetics.html</anchorfile>
      <anchor>a0622186ebe5a6793c53be58fb185c371</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_irrev</name>
      <anchorfile>classCantera_1_1BulkKinetics.html</anchorfile>
      <anchor>a8e7251e19598df7416da759bbf56ae15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_dn</name>
      <anchorfile>classCantera_1_1BulkKinetics.html</anchorfile>
      <anchor>a57c67890e8df6985612598a582f804d7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::C1</name>
    <filename>classCantera_1_1C1.html</filename>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>m_rxn</name>
      <anchorfile>classCantera_1_1C1.html</anchorfile>
      <anchor>a0a4dc3ed928e51ab29031e303842bc79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>m_ic0</name>
      <anchorfile>classCantera_1_1C1.html</anchorfile>
      <anchor>a9408354b9222dbcbd0183f00f62eecb7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::C2</name>
    <filename>classCantera_1_1C2.html</filename>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>m_rxn</name>
      <anchorfile>classCantera_1_1C2.html</anchorfile>
      <anchor>a0a4dc3ed928e51ab29031e303842bc79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>m_ic0</name>
      <anchorfile>classCantera_1_1C2.html</anchorfile>
      <anchor>a9408354b9222dbcbd0183f00f62eecb7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::C3</name>
    <filename>classCantera_1_1C3.html</filename>
  </compound>
  <compound kind="class">
    <name>Cantera::C_AnyN</name>
    <filename>classCantera_1_1C__AnyN.html</filename>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>m_n</name>
      <anchorfile>classCantera_1_1C__AnyN.html</anchorfile>
      <anchor>ad18a41dcde89b118c3d486d3aa5b5e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>m_rxn</name>
      <anchorfile>classCantera_1_1C__AnyN.html</anchorfile>
      <anchor>a0a4dc3ed928e51ab29031e303842bc79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_ic</name>
      <anchorfile>classCantera_1_1C__AnyN.html</anchorfile>
      <anchor>a1e236d2edcea03bb5d899b1d915da85d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_order</name>
      <anchorfile>classCantera_1_1C__AnyN.html</anchorfile>
      <anchor>aa98cdfa0e38a0ccfaa9287a353e12d29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_stoich</name>
      <anchorfile>classCantera_1_1C__AnyN.html</anchorfile>
      <anchor>ad1b2526fc34783ccd334f64be06402c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cantera::CachedValue</name>
    <filename>structCantera_1_1CachedValue.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>bool</type>
      <name>validate</name>
      <anchorfile>structCantera_1_1CachedValue.html</anchorfile>
      <anchor>aa29235f9aaaca70109fa7cea2ddbff00</anchor>
      <arglist>(double state1New)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validate</name>
      <anchorfile>structCantera_1_1CachedValue.html</anchorfile>
      <anchor>a2e78cddc8730b646fe1be7c5d712a2d6</anchor>
      <arglist>(double state1New, double state2New)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validate</name>
      <anchorfile>structCantera_1_1CachedValue.html</anchorfile>
      <anchor>a444cc040da7d8573745b917b85b5d148</anchor>
      <arglist>(double state1New, int stateNumNew)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validate</name>
      <anchorfile>structCantera_1_1CachedValue.html</anchorfile>
      <anchor>add12fe15749727ddfdb5ec6dae1aa4bb</anchor>
      <arglist>(int stateNumNew)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validate</name>
      <anchorfile>structCantera_1_1CachedValue.html</anchorfile>
      <anchor>a4ad6ee12ea8c2ffff24097b92e607ea4</anchor>
      <arglist>(double state1New, double state2New, int stateNumNew)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>state1</name>
      <anchorfile>structCantera_1_1CachedValue.html</anchorfile>
      <anchor>ac73f541d02c6b528e6c61686698d8eea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>state2</name>
      <anchorfile>structCantera_1_1CachedValue.html</anchorfile>
      <anchor>a095f8842c49dbda1c0bb90b08c7b4369</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>stateNum</name>
      <anchorfile>structCantera_1_1CachedValue.html</anchorfile>
      <anchor>a736f6a5a0ef7cbd8892110dc80ae7946</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>T</type>
      <name>value</name>
      <anchorfile>structCantera_1_1CachedValue.html</anchorfile>
      <anchor>a4fc7f59e3113e19697159919a5aad095</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::CanteraError</name>
    <filename>classCantera_1_1CanteraError.html</filename>
    <member kind="function">
      <type></type>
      <name>CanteraError</name>
      <anchorfile>classCantera_1_1CanteraError.html</anchorfile>
      <anchor>aae660ffca409cd5c6eaccef0bb9c6bdd</anchor>
      <arglist>(const std::string &amp;procedure, const std::string &amp;msg, const Args &amp;... args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CanteraError</name>
      <anchorfile>classCantera_1_1CanteraError.html</anchorfile>
      <anchor>ad2cd8e4faf96a47789319675db78d46d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>what</name>
      <anchorfile>classCantera_1_1CanteraError.html</anchorfile>
      <anchor>a8d4b96162e93e11e5816d83702578af8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getMessage</name>
      <anchorfile>classCantera_1_1CanteraError.html</anchorfile>
      <anchor>a1c1cc72e6e4257dbd29ff04a23973008</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getClass</name>
      <anchorfile>classCantera_1_1CanteraError.html</anchorfile>
      <anchor>a31a0154bd4d18f1bcd78a507b91056be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CanteraError</name>
      <anchorfile>classCantera_1_1CanteraError.html</anchorfile>
      <anchor>ad307f9ad52ec7d03910102046203a0e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CanteraError</name>
      <anchorfile>classCantera_1_1CanteraError.html</anchorfile>
      <anchor>aa3224773cd278a142a81ce1042a31a96</anchor>
      <arglist>(const std::string &amp;procedure)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>procedure_</name>
      <anchorfile>classCantera_1_1CanteraError.html</anchorfile>
      <anchor>a66c5c4bfa2b552ab3064a69b72d09862</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>formattedMessage_</name>
      <anchorfile>classCantera_1_1CanteraError.html</anchorfile>
      <anchor>aada371d44ad1e6e946c9b95f31da5e12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>msg_</name>
      <anchorfile>classCantera_1_1CanteraError.html</anchorfile>
      <anchor>a1da24fcb3b81cddc8a32815f13997437</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ChebyshevRate</name>
    <filename>classCantera_1_1ChebyshevRate.html</filename>
    <member kind="function">
      <type></type>
      <name>ChebyshevRate</name>
      <anchorfile>classCantera_1_1ChebyshevRate.html</anchorfile>
      <anchor>a295a38505f758fd5142a6a9e006968e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ChebyshevRate</name>
      <anchorfile>classCantera_1_1ChebyshevRate.html</anchorfile>
      <anchor>aed5f449875e5bfd7ff3e1a85ebe6e203</anchor>
      <arglist>(double Tmin, double Tmax, double Pmin, double Pmax, const Array2D &amp;coeffs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_C</name>
      <anchorfile>classCantera_1_1ChebyshevRate.html</anchorfile>
      <anchor>a34f4a70d7ddceff8933b2355763ed69f</anchor>
      <arglist>(const doublereal *c)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>updateRC</name>
      <anchorfile>classCantera_1_1ChebyshevRate.html</anchorfile>
      <anchor>a354261ac5478e5384ff7d5175682a609</anchor>
      <arglist>(doublereal logT, doublereal recipT) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tmin</name>
      <anchorfile>classCantera_1_1ChebyshevRate.html</anchorfile>
      <anchor>a577152ba2c12ed314a8f1bcfc5a5605d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tmax</name>
      <anchorfile>classCantera_1_1ChebyshevRate.html</anchorfile>
      <anchor>a75ed4042cdcb6ee099d93995ae22c2d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Pmin</name>
      <anchorfile>classCantera_1_1ChebyshevRate.html</anchorfile>
      <anchor>a5488331e7f0925f090aedbf27c1e0f59</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Pmax</name>
      <anchorfile>classCantera_1_1ChebyshevRate.html</anchorfile>
      <anchor>ab95b20bbae9cd224bff1f6c1718f55d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nPressure</name>
      <anchorfile>classCantera_1_1ChebyshevRate.html</anchorfile>
      <anchor>ab309c5b6da0fed9d809b2604ebe7327a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nTemperature</name>
      <anchorfile>classCantera_1_1ChebyshevRate.html</anchorfile>
      <anchor>ae36ba6163df2912e9c8675b91ad0e699</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>coeffs</name>
      <anchorfile>classCantera_1_1ChebyshevRate.html</anchorfile>
      <anchor>a8eac16bbf63a3e564840cdacfd517e21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>type</name>
      <anchorfile>classCantera_1_1ChebyshevRate.html</anchorfile>
      <anchor>a2e3be63dca2a4aae8e55262718273283</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>Tmax_</name>
      <anchorfile>classCantera_1_1ChebyshevRate.html</anchorfile>
      <anchor>a28e8d9ba2fbec00d418c003f9892a315</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>Pmax_</name>
      <anchorfile>classCantera_1_1ChebyshevRate.html</anchorfile>
      <anchor>aa9263c0c60febedf816cd4736a051a49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>TrDen_</name>
      <anchorfile>classCantera_1_1ChebyshevRate.html</anchorfile>
      <anchor>a326cd1f6664c42822a3a273133a845b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>PrDen_</name>
      <anchorfile>classCantera_1_1ChebyshevRate.html</anchorfile>
      <anchor>abd60e536e1f4976570945b51de836a67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nP_</name>
      <anchorfile>classCantera_1_1ChebyshevRate.html</anchorfile>
      <anchor>a8ce9a37b2c99c351e5072740eaf51b8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>nT_</name>
      <anchorfile>classCantera_1_1ChebyshevRate.html</anchorfile>
      <anchor>aad183a94114f5bdbe62cdd332267752d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>chebCoeffs_</name>
      <anchorfile>classCantera_1_1ChebyshevRate.html</anchorfile>
      <anchor>ac1e4e7a630d5a5bf534c61d053d3fe3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>dotProd_</name>
      <anchorfile>classCantera_1_1ChebyshevRate.html</anchorfile>
      <anchor>aad9332e9f56e1998a955f3c9753b22c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ChebyshevReaction</name>
    <filename>classCantera_1_1ChebyshevReaction.html</filename>
    <base>Cantera::Reaction</base>
  </compound>
  <compound kind="class">
    <name>Cantera::ChemEquil</name>
    <filename>classCantera_1_1ChemEquil.html</filename>
    <member kind="function">
      <type></type>
      <name>ChemEquil</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>a3d4d16a0a507473ae6823963759fa6ad</anchor>
      <arglist>(thermo_t &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>equilibrate</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>a040f85cb42ea1d37bf79d7a53d9dbec0</anchor>
      <arglist>(thermo_t &amp;s, const char *XY, int loglevel=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>equilibrate</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>a156f91004bd5e0cedfd2a34d6a0571b2</anchor>
      <arglist>(thermo_t &amp;s, const char *XY, vector_fp &amp;elMoles, int loglevel=0)</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>elementPotentials</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>a4cba68ab633525cdef9cfce821b659ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>EquilOpt</type>
      <name>options</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>a89f3cead2c8ae42002deb734fc2e50bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>doublereal</type>
      <name>nAtoms</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>ac2a7f5caa0d13053e852f4995ed2f0b7</anchor>
      <arglist>(size_t k, size_t m) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>ae29a95726d13d9ae6cae14c6e51eca57</anchor>
      <arglist>(thermo_t &amp;s)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setToEquilState</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>ab24e8561f836b3015ba3f764d82bd758</anchor>
      <arglist>(thermo_t &amp;s, const vector_fp &amp;x, doublereal t)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>setInitialMoles</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>a8f9ad63e6d5e4497213ff8f28696fd92</anchor>
      <arglist>(thermo_t &amp;s, vector_fp &amp;elMoleGoal, int loglevel=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>estimateElementPotentials</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>ac85a40bf708b63e587a0c0d7dac722e2</anchor>
      <arglist>(thermo_t &amp;s, vector_fp &amp;lambda, vector_fp &amp;elMolesGoal, int loglevel=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>estimateEP_Brinkley</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>ab9674f4e07035b382eea25bac27daee9</anchor>
      <arglist>(thermo_t &amp;s, vector_fp &amp;lambda, vector_fp &amp;elMoles)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>dampStep</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>a86019f5554152af177483df834cb39e3</anchor>
      <arglist>(thermo_t &amp;s, vector_fp &amp;oldx, double oldf, vector_fp &amp;grad, vector_fp &amp;step, vector_fp &amp;x, double &amp;f, vector_fp &amp;elmols, double xval, double yval)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>equilResidual</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>a23ecc03dca49ff806ff293f383b1c4b2</anchor>
      <arglist>(thermo_t &amp;s, const vector_fp &amp;x, const vector_fp &amp;elmtotal, vector_fp &amp;resid, double xval, double yval, int loglevel=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>update</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>a372e674f4be80276b911efeecb613012</anchor>
      <arglist>(const thermo_t &amp;s)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>calcEmoles</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>a9bdb648a253ad736ab4be6af4f0a2def</anchor>
      <arglist>(thermo_t &amp;s, vector_fp &amp;x, const double &amp;n_t, const vector_fp &amp;Xmol_i_calc, vector_fp &amp;eMolesCalc, vector_fp &amp;n_i_calc, double pressureConst)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>thermo_t *</type>
      <name>m_phase</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>a3f274fc5ef68e34af98f3ba14e0005df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_mm</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>af0081be78d5328da569458b20cc984aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_kk</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>a44776286c3ba788047554eef4620e6de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_nComponents</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>a47c755536e8dc9fe2595be65e684ff89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_molefractions</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>a8f642c00284680c489eb8024604c0d42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_lambda</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>a31648f4deda374ff07c0e26e73ca1860</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_elementTotalSum</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>ad3fe4b8422050d5611cc3d349fda804f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_elementmolefracs</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>ab532437620156f71d44049be3c483f06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_comp</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>ab09cd1cf50ca715f5f7d258564f9be6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_eloc</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>a680344ee860b0091474f3758f03d44a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_muSS_RT</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>a1b5f97cd8d0356195c8cd907a2a0dfc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_elemFracCutoff</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>ad11b36f61d536b3fd20bf4b5cbd10d40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_loglevel</name>
      <anchorfile>classCantera_1_1ChemEquil.html</anchorfile>
      <anchor>a478156bbbbd963be442e55f708ffc7c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ChemicallyActivatedReaction</name>
    <filename>classCantera_1_1ChemicallyActivatedReaction.html</filename>
    <base>Cantera::FalloffReaction</base>
  </compound>
  <compound kind="class">
    <name>Cantera::clockWC</name>
    <filename>classCantera_1_1clockWC.html</filename>
    <member kind="function">
      <type></type>
      <name>clockWC</name>
      <anchorfile>classCantera_1_1clockWC.html</anchorfile>
      <anchor>addc0c3b163f39a2092c228c29996a664</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>start</name>
      <anchorfile>classCantera_1_1clockWC.html</anchorfile>
      <anchor>a6f9eade154cd191c58e8ca94746c2855</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>secondsWC</name>
      <anchorfile>classCantera_1_1clockWC.html</anchorfile>
      <anchor>ace3e59cd5fd160388d9f312c8a39eb8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>clock_t</type>
      <name>last_num_ticks</name>
      <anchorfile>classCantera_1_1clockWC.html</anchorfile>
      <anchor>a07813a7335d8f10310d572188ef3a635</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>clock_rollovers</name>
      <anchorfile>classCantera_1_1clockWC.html</anchorfile>
      <anchor>a91e0371427c464d54c80e60792f354dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>clock_t</type>
      <name>start_ticks</name>
      <anchorfile>classCantera_1_1clockWC.html</anchorfile>
      <anchor>aab3a57370d8f3ba540ba66d08db79385</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const double</type>
      <name>inv_clocks_per_sec</name>
      <anchorfile>classCantera_1_1clockWC.html</anchorfile>
      <anchor>ad5a58a2c5b61aa23caeb6778b3b93ef1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const double</type>
      <name>clock_width</name>
      <anchorfile>classCantera_1_1clockWC.html</anchorfile>
      <anchor>af6f092c2c3a1f0614be203d5978d84fa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Composite1</name>
    <filename>classCantera_1_1Composite1.html</filename>
    <base>Cantera::Func1</base>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1Composite1.html</anchorfile>
      <anchor>acd39f99891dcb367c57588ec8c79b0c6</anchor>
      <arglist>(doublereal t) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>duplicate</name>
      <anchorfile>classCantera_1_1Composite1.html</anchorfile>
      <anchor>a4aa86693947c32c642a3d6ee556a8eed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>derivative</name>
      <anchorfile>classCantera_1_1Composite1.html</anchorfile>
      <anchor>a79b93814a3999ee82ef932b9b861d9b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>order</name>
      <anchorfile>classCantera_1_1Composite1.html</anchorfile>
      <anchor>a177cd31efbfb81626a24dea53fcabfe8</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Const1</name>
    <filename>classCantera_1_1Const1.html</filename>
    <base>Cantera::Func1</base>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1Const1.html</anchorfile>
      <anchor>acd39f99891dcb367c57588ec8c79b0c6</anchor>
      <arglist>(doublereal t) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>duplicate</name>
      <anchorfile>classCantera_1_1Const1.html</anchorfile>
      <anchor>a4aa86693947c32c642a3d6ee556a8eed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>derivative</name>
      <anchorfile>classCantera_1_1Const1.html</anchorfile>
      <anchor>a79b93814a3999ee82ef932b9b861d9b8</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ConstCpPoly</name>
    <filename>classCantera_1_1ConstCpPoly.html</filename>
    <base>Cantera::SpeciesThermoInterpType</base>
    <member kind="function">
      <type></type>
      <name>ConstCpPoly</name>
      <anchorfile>classCantera_1_1ConstCpPoly.html</anchorfile>
      <anchor>a258b3fdf5f3f2e545dd1539b3c9c9552</anchor>
      <arglist>(double tlow, double thigh, double pref, const double *coeffs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>reportType</name>
      <anchorfile>classCantera_1_1ConstCpPoly.html</anchorfile>
      <anchor>ae2d249a609d29261db259191f2100f4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateProperties</name>
      <anchorfile>classCantera_1_1ConstCpPoly.html</anchorfile>
      <anchor>acb928ca625bcbc618f12e9ec8feef13d</anchor>
      <arglist>(const doublereal *tt, doublereal *cp_R, doublereal *h_RT, doublereal *s_R) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updatePropertiesTemp</name>
      <anchorfile>classCantera_1_1ConstCpPoly.html</anchorfile>
      <anchor>a9ad26486b7aa404ff87b29b61472b7e9</anchor>
      <arglist>(const doublereal temp, doublereal *cp_R, doublereal *h_RT, doublereal *s_R) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reportParameters</name>
      <anchorfile>classCantera_1_1ConstCpPoly.html</anchorfile>
      <anchor>aa644859d921972e54e88c4f9ea56d854</anchor>
      <arglist>(size_t &amp;n, int &amp;type, doublereal &amp;tlow, doublereal &amp;thigh, doublereal &amp;pref, doublereal *const coeffs) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>reportHf298</name>
      <anchorfile>classCantera_1_1ConstCpPoly.html</anchorfile>
      <anchor>a82cf17c36b8a588ef9e093ce455bb352</anchor>
      <arglist>(doublereal *const h298=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>modifyOneHf298</name>
      <anchorfile>classCantera_1_1ConstCpPoly.html</anchorfile>
      <anchor>a770cf32674ea8e0da12ee537e82216a1</anchor>
      <arglist>(const size_t k, const doublereal Hf298New)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetHf298</name>
      <anchorfile>classCantera_1_1ConstCpPoly.html</anchorfile>
      <anchor>a50871997796fc34fd44cb7a2e5aba283</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_t0</name>
      <anchorfile>classCantera_1_1ConstCpPoly.html</anchorfile>
      <anchor>aed25322525aa3a2c5447526ce80fa55a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_cp0_R</name>
      <anchorfile>classCantera_1_1ConstCpPoly.html</anchorfile>
      <anchor>aa56b549261123ac2a6c759fc7512e5f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_h0_R</name>
      <anchorfile>classCantera_1_1ConstCpPoly.html</anchorfile>
      <anchor>ae6301526d97864462d1295264eda8b4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_s0_R</name>
      <anchorfile>classCantera_1_1ConstCpPoly.html</anchorfile>
      <anchor>a6c1207d13eb50dba6d1e6a37489c4302</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_logt0</name>
      <anchorfile>classCantera_1_1ConstCpPoly.html</anchorfile>
      <anchor>a96a53c299141e860f71f7929e5227abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_h0_R_orig</name>
      <anchorfile>classCantera_1_1ConstCpPoly.html</anchorfile>
      <anchor>a9edecfcbad841d5ae2cd3ed2ca6a8990</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ConstDensityThermo</name>
    <filename>classCantera_1_1ConstDensityThermo.html</filename>
    <base>Cantera::ThermoPhase</base>
    <member kind="function">
      <type></type>
      <name>ConstDensityThermo</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>a839cae6a14e4c75e8438d708466c4b26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>a20b3c290780f2f094b028e19b63b8e6e</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>a6b4cdc30b480b92ed405f95e1f660687</anchor>
      <arglist>(doublereal *mu0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPureGibbs</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>a9599e93f9a444b03f7306455f87f2efc</anchor>
      <arglist>(doublereal *gpure) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>ad80ad288a04db09a765a211aa1618edb</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>a6736e153cc33a62e77d8b5bc594cb7c3</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>enthalpy_RT</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>a3f474e20397fe43ccd8bb770444dd28e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>gibbs_RT</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>aca1975055570f80cc9689837d4e2bc82</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>entropy_R</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>adcd0c1d421fa19411f61cd44a4447f37</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>cp_R</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>a0a3ddf1e5f9fe32b5f386cb7a53597f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParameters</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>ad4ac746210fdc6259486bf5f62b5558f</anchor>
      <arglist>(int n, doublereal *const c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getParameters</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>af5e81039b1f040b1d66d29dc24e3d22a</anchor>
      <arglist>(int &amp;n, doublereal *const c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>abe11f2065246742c73c778c5de62f5b7</anchor>
      <arglist>(const XML_Node &amp;eosdata)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_h0_RT</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>a3c5e8d8c0d3a1e74b657da7f4e9014bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_cp0_R</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>a0f99f8895cc2109fd4dcebb729d615fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_g0_RT</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>a0b34289ccbc27c3af431627fd7a3a4fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_s0_R</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>a56e8ca74ece671716ff2cb73967e1576</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_press</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>a0edab2fddaaaa5321a40af0cbca697cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>_updateThermo</name>
      <anchorfile>classCantera_1_1ConstDensityThermo.html</anchorfile>
      <anchor>adc787a3ca8a5489e2763cc7e712685bc</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ConstPressureReactor</name>
    <filename>classCantera_1_1ConstPressureReactor.html</filename>
    <base>Cantera::Reactor</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>type</name>
      <anchorfile>classCantera_1_1ConstPressureReactor.html</anchorfile>
      <anchor>a67b824a3d6f5f8dc7b9f435353c62676</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getState</name>
      <anchorfile>classCantera_1_1ConstPressureReactor.html</anchorfile>
      <anchor>a62334bd67a22db256d39b9e673e6a7d3</anchor>
      <arglist>(doublereal *y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classCantera_1_1ConstPressureReactor.html</anchorfile>
      <anchor>ab2df902e719cd522b0df4d234b016c26</anchor>
      <arglist>(doublereal t0=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evalEqs</name>
      <anchorfile>classCantera_1_1ConstPressureReactor.html</anchorfile>
      <anchor>ab56bbca2717dd3f4851029f65728f745</anchor>
      <arglist>(doublereal t, doublereal *y, doublereal *ydot, doublereal *params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateState</name>
      <anchorfile>classCantera_1_1ConstPressureReactor.html</anchorfile>
      <anchor>a0ff521286d89a1422948c0497385cb28</anchor>
      <arglist>(doublereal *y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>componentIndex</name>
      <anchorfile>classCantera_1_1ConstPressureReactor.html</anchorfile>
      <anchor>a00653754ecb40ea0445540af4d9cf353</anchor>
      <arglist>(const std::string &amp;nm) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>componentName</name>
      <anchorfile>classCantera_1_1ConstPressureReactor.html</anchorfile>
      <anchor>a88152e299410846a224a41e71e2f1151</anchor>
      <arglist>(size_t k)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Cos1</name>
    <filename>classCantera_1_1Cos1.html</filename>
    <base>Cantera::Func1</base>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>duplicate</name>
      <anchorfile>classCantera_1_1Cos1.html</anchorfile>
      <anchor>a4aa86693947c32c642a3d6ee556a8eed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1Cos1.html</anchorfile>
      <anchor>acd39f99891dcb367c57588ec8c79b0c6</anchor>
      <arglist>(doublereal t) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>derivative</name>
      <anchorfile>classCantera_1_1Cos1.html</anchorfile>
      <anchor>add413b6d193ee81507d1b6c2e6a7077e</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cantera::CoverageDependency</name>
    <filename>structCantera_1_1CoverageDependency.html</filename>
    <member kind="function">
      <type></type>
      <name>CoverageDependency</name>
      <anchorfile>structCantera_1_1CoverageDependency.html</anchorfile>
      <anchor>a77c241abeced93b04463671069c25bb8</anchor>
      <arglist>(double a_, double E_, double m_)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>a</name>
      <anchorfile>structCantera_1_1CoverageDependency.html</anchorfile>
      <anchor>a1031d0e0a97a340abfe0a6ab9e831045</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>E</name>
      <anchorfile>structCantera_1_1CoverageDependency.html</anchorfile>
      <anchor>a1eb62b8cb1f5e5f571d51179718e7d4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m</name>
      <anchorfile>structCantera_1_1CoverageDependency.html</anchorfile>
      <anchor>a5175b356eac1d83a42608b42a25d00b9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::CVodesIntegrator</name>
    <filename>classCantera_1_1CVodesIntegrator.html</filename>
    <base>Cantera::Integrator</base>
    <member kind="function">
      <type></type>
      <name>CVodesIntegrator</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>a39d06fc0c58f871da41e9633fcee6499</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTolerances</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>a77aba291a4c01c3f703f2447daf4b658</anchor>
      <arglist>(double reltol, size_t n, double *abstol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTolerances</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>ae5897d3a1468448349340589749a6ab9</anchor>
      <arglist>(double reltol, double abstol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSensitivityTolerances</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>a6481a7d11838f7bc4a3db1ab76bc33c1</anchor>
      <arglist>(double reltol, double abstol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setProblemType</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>adae37f82145ca3c253c9e0d588241f09</anchor>
      <arglist>(int probtype)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>a452cf5e3479b54afe668386773f12c7c</anchor>
      <arglist>(double t0, FuncEval &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>integrate</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>a504e4ff0d8fff55204625f7ed61e4f52</anchor>
      <arglist>(double tout)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>step</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>a5af96d6570932e04a2d8a4cd4f937c05</anchor>
      <arglist>(double tout)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double &amp;</type>
      <name>solution</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>ab5db1e4e57df8ab1c40ca301c43bf02b</anchor>
      <arglist>(size_t k)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double *</type>
      <name>solution</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>a6fb305c1128e91cec530767dc6e7e96c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>nEquations</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>aad2946dfd16fdcc5955d48240bcd2c0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>nEvals</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>a19997a129c9e3b2fa74e95145334c6e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaxOrder</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>affb48850ed1203145dcef72fef940bfd</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMethod</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>adedeb0538090453e14a047e96453da23</anchor>
      <arglist>(MethodType t)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setIterator</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>a8b77d5b5a8297276b293968313d34e9a</anchor>
      <arglist>(IterType t)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaxStepSize</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>aa196c65ea65f017dab82951e4ba3129b</anchor>
      <arglist>(double hmax)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMinStepSize</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>a303bcab348c73ae072a8bdaba2487313</anchor>
      <arglist>(double hmin)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaxErrTestFails</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>aeeef037bca5f449d08964904358962cd</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getErrorInfo</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>af2f71b09787fb114107fafcb45f2ed25</anchor>
      <arglist>(int N)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>m_error_message</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>a358b8ca3782e323f6078989924fe320a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyOptions</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>aa2e91deeafb2a335905517594bc82303</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>void *</type>
      <name>m_linsol</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>a30a55de05660ccb755510cdfaedf21a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>void *</type>
      <name>m_linsol_matrix</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>ae7a872920212f9d841e95d6f26f2f56b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>m_time</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>a433017f86ae7754cbf9ef71bb138aca9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_sens_ok</name>
      <anchorfile>classCantera_1_1CVodesIntegrator.html</anchorfile>
      <anchor>a4493ca9044d61b2fee2a294c77c09b31</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::DAE_Solver</name>
    <filename>classCantera_1_1DAE__Solver.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTolerances</name>
      <anchorfile>classCantera_1_1DAE__Solver.html</anchorfile>
      <anchor>a433408c5c4b4da654c35be411ed75357</anchor>
      <arglist>(doublereal reltol, doublereal *abstol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTolerances</name>
      <anchorfile>classCantera_1_1DAE__Solver.html</anchorfile>
      <anchor>a0919eb17bc6992624bc5fe016ebc54e1</anchor>
      <arglist>(doublereal reltol, doublereal abstol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJacobian</name>
      <anchorfile>classCantera_1_1DAE__Solver.html</anchorfile>
      <anchor>ae908cc7fcab5d03cea846ed9e067bb77</anchor>
      <arglist>(Jacobian &amp;jac)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>correctInitial_Y_given_Yp</name>
      <anchorfile>classCantera_1_1DAE__Solver.html</anchorfile>
      <anchor>a401576b26e126cbf0fb6dfa9e88f9f04</anchor>
      <arglist>(doublereal *y, doublereal *yp, doublereal tout)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>correctInitial_YaYp_given_Yd</name>
      <anchorfile>classCantera_1_1DAE__Solver.html</anchorfile>
      <anchor>aef9c26c525777267bc172a826e893e8f</anchor>
      <arglist>(doublereal *y, doublereal *yp, doublereal tout)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve</name>
      <anchorfile>classCantera_1_1DAE__Solver.html</anchorfile>
      <anchor>a8cffcd0033346dde4221a2cffe736ce4</anchor>
      <arglist>(doublereal tout)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>step</name>
      <anchorfile>classCantera_1_1DAE__Solver.html</anchorfile>
      <anchor>a0024a91cbc94eba5c635597d9e0b28d7</anchor>
      <arglist>(doublereal tout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nEquations</name>
      <anchorfile>classCantera_1_1DAE__Solver.html</anchorfile>
      <anchor>a453750169345df044faeca9e5cf16ae9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1DAE__Solver.html</anchorfile>
      <anchor>a0c4f669a7991a88d923d6aee89c71dc1</anchor>
      <arglist>(doublereal t0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setInputParameter</name>
      <anchorfile>classCantera_1_1DAE__Solver.html</anchorfile>
      <anchor>abba1e444f8bc969e499ff8c77f733611</anchor>
      <arglist>(int flag, doublereal value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>getOutputParameter</name>
      <anchorfile>classCantera_1_1DAE__Solver.html</anchorfile>
      <anchor>af3b415a1630f7fbbc456e258ab4bfa5a</anchor>
      <arglist>(int flag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>solution</name>
      <anchorfile>classCantera_1_1DAE__Solver.html</anchorfile>
      <anchor>aa962c478814f6871498b606553540531</anchor>
      <arglist>(int k) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>derivative</name>
      <anchorfile>classCantera_1_1DAE__Solver.html</anchorfile>
      <anchor>a03d9ca0dd8ee45cccda61216033776a1</anchor>
      <arglist>(int k) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>integer</type>
      <name>m_neq</name>
      <anchorfile>classCantera_1_1DAE__Solver.html</anchorfile>
      <anchor>a625f04e9a6f2b4a917a95dbbbce838ad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::DebyeHuckel</name>
    <filename>classCantera_1_1DebyeHuckel.html</filename>
    <base>Cantera::MolalityVPSSTP</base>
    <member kind="function">
      <type></type>
      <name>DebyeHuckel</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a2c3c9b0008eb4a0f640270f79c3b6ad9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DebyeHuckel</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a2e281bb9092523337d9928442ab09aef</anchor>
      <arglist>(const std::string &amp;inputFile, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DebyeHuckel</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a2c7cf2401e5c1e71947692e04d95a818</anchor>
      <arglist>(XML_Node &amp;phaseRef, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>A_Debye_TP</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>af9c7a3a39fc1b40ab8d5ccbddcfafe55</anchor>
      <arglist>(double temperature=-1.0, double pressure=-1.0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>dA_DebyedT_TP</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>abb0fd35fea263954733422c3f7d800c0</anchor>
      <arglist>(double temperature=-1.0, double pressure=-1.0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>d2A_DebyedT2_TP</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a164b227111b2087164344d179169ff3e</anchor>
      <arglist>(double temperature=-1.0, double pressure=-1.0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>dA_DebyedP_TP</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>afa5cc41b9fa54f49ce2193aa8251cfc3</anchor>
      <arglist>(double temperature=-1.0, double pressure=-1.0) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>AionicRadius</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a512a99251b7dde8e44cf003eefee84c7</anchor>
      <arglist>(int k=0) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDebyeHuckelModel</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a78663c3466bb64d2e418f782e8813c86</anchor>
      <arglist>(const std::string &amp;form)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>formDH</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a3f1481d9ed728ccffcfe64a7d64af11c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setA_Debye</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a7c384353ca238db0c9c64b0dc3d4b290</anchor>
      <arglist>(double A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultIonicRadius</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>acb0c4233810f132a7085d52e56d98026</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBeta</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a69c20c1f2f2673c9a96c23d25395edbe</anchor>
      <arglist>(const std::string &amp;sp1, const std::string &amp;sp2, double value)</arglist>
    </member>
    <member kind="function">
      <type>Array2D &amp;</type>
      <name>get_Beta_ij</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a3dd176a1c318709b3b2df4c6b9042126</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>aaf04e92fc17efaa2c07df42c06c0d563</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivities</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>aeb478e46bb453a06465f89e93bc07531</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMolalityActivityCoefficients</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a3b087f2354f955fa780995964f973fca</anchor>
      <arglist>(doublereal *acMolality) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_useHelgesonFixedForm</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a34b8f9c24cad9eed5247ad05c40505ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>m_form_A_Debye</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a3224c65548a2445ad0972f09ec459ebe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_formDH</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a0f530fe831a4fea5c937c929ac83bf81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_int</type>
      <name>m_electrolyteSpeciesType</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a83de6e964ef5fe08a9ce19f7a974a694</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_Aionic</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>ab730ff7c2a88c7b89df4e24f77aa9d9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_IionicMolality</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a20a30b0b2b8ace17725760555a455c0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_maxIionicStrength</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>aac66ccbb8197621d53beb2e739f58479</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_IionicMolalityStoich</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>ae0fc80b185f5c4a0a36ec8ec91d30323</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_A_Debye</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a141c33b8b9d1e38b01ce2f7f6bfeb3e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_B_Debye</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a44dfb2a59608a51cce530e59dccbe34c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_B_Dot</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>aa6975944111215f7651dcbe92e8b6090</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PDSS_Water *</type>
      <name>m_waterSS</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>adaed9742eb9c4cf8d52085ea25ae8f86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_densWaterSS</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a283d2b1d262605cd798b69f876b55b4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; WaterProps &gt;</type>
      <name>m_waterProps</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>ae6148f027114f2615ba7e9806b03f66c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_tmpV</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>aeeda95f871688922796bc3c0e6ecb444</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_speciesCharge_Stoich</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a2e37afb7489ff29e70ecdc67146704ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Array2D</type>
      <name>m_Beta_ij</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a09167922e019a1683e49cdee3ef65169</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_lnActCoeffMolal</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>af2ff15779016abc2167e7c0f0a38bf94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_dlnActCoeffMolaldT</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a7cf03f2684f7b8880b3c5dc5144336c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_d2lnActCoeffMolaldT2</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a1f45a8b0c847a5b54ce88eb181c7fa2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_dlnActCoeffMolaldP</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a7560ff4791bfc8d5a6214c5288ceb9bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>_osmoticCoeffHelgesonFixedForm</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a26f42d66f41545468964e8de6b295cf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>_lnactivityWaterHelgesonFixedForm</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>ab4baf1e93d2283ba1460b655c5d11965</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_lnMolalityActCoeff</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a5eb381891e49699076160f0d90a7f178</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnMolalityActCoeff_dT</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a5da64b7bff68193ba206ce048cfbc082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_d2lnMolalityActCoeff_dT2</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a2cfd4818927a81e20c9b5300d37f3bfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnMolalityActCoeff_dP</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>ad7a98ee31b98efa3ded472247eaabdfd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static double</type>
      <name>_nonpolarActCoeff</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a35007a3b1d3d90d4f13d319812051a0f</anchor>
      <arglist>(double IionicMolality)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>aaf04e92fc17efaa2c07df42c06c0d563</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDensity</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a7eb43922f97cdfb4e0df8e9710353770</anchor>
      <arglist>(const doublereal rho)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMolarDensity</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a75643547a93f48096438a1ea8ac9e74e</anchor>
      <arglist>(const doublereal conc)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>calcDensity</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>afac1b45437d49cc161e7ca2d5c00906a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivities</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>aeb478e46bb453a06465f89e93bc07531</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMolalityActivityCoefficients</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a3b087f2354f955fa780995964f973fca</anchor>
      <arglist>(doublereal *acMolality) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1DebyeHuckel.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::DenseMatrix</name>
    <filename>classCantera_1_1DenseMatrix.html</filename>
    <base>Cantera::Array2D</base>
    <member kind="function">
      <type></type>
      <name>DenseMatrix</name>
      <anchorfile>classCantera_1_1DenseMatrix.html</anchorfile>
      <anchor>ab51013f69c709092eb884f0759dfcbd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DenseMatrix</name>
      <anchorfile>classCantera_1_1DenseMatrix.html</anchorfile>
      <anchor>ab83d532ee845dbd1c52defa6ae2707a0</anchor>
      <arglist>(size_t n, size_t m, doublereal v=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classCantera_1_1DenseMatrix.html</anchorfile>
      <anchor>a0722dec1df1abd8f6526070749a23fd7</anchor>
      <arglist>(size_t n, size_t m, doublereal v=0.0)</arglist>
    </member>
    <member kind="function">
      <type>const doublereal *const  *</type>
      <name>const_colPts</name>
      <anchorfile>classCantera_1_1DenseMatrix.html</anchorfile>
      <anchor>a68514cb2c73d92dc46d6d8c0d716b8b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>mult</name>
      <anchorfile>classCantera_1_1DenseMatrix.html</anchorfile>
      <anchor>a3d10948184890f16eb832bec01d1f772</anchor>
      <arglist>(const DenseMatrix &amp;b, DenseMatrix &amp;prod) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>leftMult</name>
      <anchorfile>classCantera_1_1DenseMatrix.html</anchorfile>
      <anchor>a0473375cf71671176c59870ce765ea92</anchor>
      <arglist>(const double *const b, double *const prod) const</arglist>
    </member>
    <member kind="function">
      <type>vector_int &amp;</type>
      <name>ipiv</name>
      <anchorfile>classCantera_1_1DenseMatrix.html</anchorfile>
      <anchor>af33d247dc71aded981a6067f64b473b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const vector_int &amp;</type>
      <name>ipiv</name>
      <anchorfile>classCantera_1_1DenseMatrix.html</anchorfile>
      <anchor>ab8279ebb5b74fa5c65cf72984dc81480</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>m_useReturnErrorCode</name>
      <anchorfile>classCantera_1_1DenseMatrix.html</anchorfile>
      <anchor>a3884c5d9b6c25554b633e1fb3dd5be34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>m_printLevel</name>
      <anchorfile>classCantera_1_1DenseMatrix.html</anchorfile>
      <anchor>a352c6a13d37e5c4e909c0af1d94b5a3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_int</type>
      <name>m_ipiv</name>
      <anchorfile>classCantera_1_1DenseMatrix.html</anchorfile>
      <anchor>a5d415389d71b97707776d96238611223</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; doublereal * &gt;</type>
      <name>m_colPts</name>
      <anchorfile>classCantera_1_1DenseMatrix.html</anchorfile>
      <anchor>a0e41a691aeb89f7a83b2646909a04a56</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend int</type>
      <name>solve</name>
      <anchorfile>classCantera_1_1DenseMatrix.html</anchorfile>
      <anchor>ae58d9e03d0e7da2d94207fc838b2412c</anchor>
      <arglist>(DenseMatrix &amp;A, double *b, size_t nrhs, size_t ldb)</arglist>
    </member>
    <member kind="friend">
      <type>friend int</type>
      <name>solve</name>
      <anchorfile>classCantera_1_1DenseMatrix.html</anchorfile>
      <anchor>a6a9ec6d9fe6d17c419aa1da099ffa446</anchor>
      <arglist>(DenseMatrix &amp;A, DenseMatrix &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Diff1</name>
    <filename>classCantera_1_1Diff1.html</filename>
    <base>Cantera::Func1</base>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1Diff1.html</anchorfile>
      <anchor>acd39f99891dcb367c57588ec8c79b0c6</anchor>
      <arglist>(doublereal t) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>duplicate</name>
      <anchorfile>classCantera_1_1Diff1.html</anchorfile>
      <anchor>a4aa86693947c32c642a3d6ee556a8eed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>derivative</name>
      <anchorfile>classCantera_1_1Diff1.html</anchorfile>
      <anchor>a79b93814a3999ee82ef932b9b861d9b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>order</name>
      <anchorfile>classCantera_1_1Diff1.html</anchorfile>
      <anchor>a177cd31efbfb81626a24dea53fcabfe8</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Domain1D</name>
    <filename>classCantera_1_1Domain1D.html</filename>
    <member kind="function">
      <type></type>
      <name>Domain1D</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>adfa47d57b23ef17209ea1f6f8c18136e</anchor>
      <arglist>(size_t nv=1, size_t points=1, double time=0.0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>domainType</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>aca30fda33b46da11fbd31bbb3848e192</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>domainIndex</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a0a453421b3205d8b3d61645c349ecad1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnector</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a740bddf126e1d15818eb52b54a909e98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const OneDim &amp;</type>
      <name>container</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a671bbba657c65ebf4de7327bd4430dfc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContainer</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a561574b374436c6435cb028a239cea40</anchor>
      <arglist>(OneDim *c, size_t index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBandwidth</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>aa9f8013f578bbba07b6529903dc76843</anchor>
      <arglist>(int bw=-1)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>bandwidth</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a19562d979a98c60bdea1b47d48fcf940</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a9339772ec5ac9fa929938109207f2863</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetBadValues</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a021b416c4b36e5f739aca87782e63870</anchor>
      <arglist>(double *xg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a70e4e580a18e9483f3ceb7db3ffa656d</anchor>
      <arglist>(size_t nv, size_t np)</arglist>
    </member>
    <member kind="function">
      <type>Refiner &amp;</type>
      <name>refiner</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>aaab41cb8886a7e5318001345ff7e6e8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nComponents</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a172c46353df9ec1992ccf39fdece086c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkComponentIndex</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a66d2a5b4022e55fa721995161f68d0e8</anchor>
      <arglist>(size_t n) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkComponentArraySize</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>ae2a2537eb39a7153308f9efe7464bb5d</anchor>
      <arglist>(size_t nn) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nPoints</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a56b5f3e9e598ce98d8980e6bdafa1e8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkPointIndex</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>ace48555bb4fa5d6d3588ab3514df540a</anchor>
      <arglist>(size_t n) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkPointArraySize</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a09af9cb79adea5070b4f1d383ebcbf53</anchor>
      <arglist>(size_t nn) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>componentName</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a628e3e3fac037dc0c6b13626d2c01264</anchor>
      <arglist>(size_t n) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>componentIndex</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>aed143cce9427c2418634ab43c57cc05b</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransientTolerances</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>afce73097cd7e000ba27655ea6c379c7f</anchor>
      <arglist>(doublereal rtol, doublereal atol, size_t n=npos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSteadyTolerances</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a62df8f437424c734d012bc2d05209eb2</anchor>
      <arglist>(doublereal rtol, doublereal atol, size_t n=npos)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>rtol</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>ae6b7bdc196ddca3878073dfd5d9554d2</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>atol</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a373fe970a3909bc76becde303693a517</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>steady_rtol</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>aac058019e7fdfe648e57aed57efb3fc5</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>steady_atol</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a88bef515134ca86434f9c0fdb2761377</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>transient_rtol</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>ae9c23f27e36e5c349cd140aa1fb289ac</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>transient_atol</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a8d6628183ec9451a923a7f96f5b13f05</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>upperBound</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a81ea6de80f14e74febe18e8ef000b146</anchor>
      <arglist>(size_t n) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>lowerBound</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a91f92d83c49955f250ab533332f4a63d</anchor>
      <arglist>(size_t n) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initTimeInteg</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a7bc77930ee5e5b07288ef812b3cd8eff</anchor>
      <arglist>(doublereal dt, const doublereal *x0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSteadyMode</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>ac99bf1a345ec7a1e81ef492dda51fa51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>steady</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>aa5fc2187e23c4c0d858d52b9f81b60b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transient</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a1182cb0dd995a3c8a419e8887615a85c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>needJacUpdate</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>ad8d1805dff19c025c39c1564695908ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a96aa4b7e4839c1eaa76ecb1193b464cd</anchor>
      <arglist>(size_t j, doublereal *x, doublereal *r, integer *mask, doublereal rdt=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual XML_Node &amp;</type>
      <name>save</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a6f2845e1dc389d2366e58c34e3a53a19</anchor>
      <arglist>(XML_Node &amp;o, const doublereal *const sol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>restore</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a7f87adb9173d936c9f741a204b94d69c</anchor>
      <arglist>(const XML_Node &amp;dom, doublereal *soln, int loglevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>locate</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>af2f4ae87f03750cb9cca117d0cfcf2fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>loc</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>aed71a9fc62bd5656499e454f693e02db</anchor>
      <arglist>(size_t j=0) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>firstPoint</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>ad16c14966e47a7728a180572ad89ca20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>lastPoint</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a04dbf1f02a8b122efd8521ba2e8a6d2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linkLeft</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a6bcaed91102e69c5d3fd24d5291de9c4</anchor>
      <arglist>(Domain1D *left)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linkRight</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>adbc68d144eb1ed063afd613737c164a1</anchor>
      <arglist>(Domain1D *right)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>ac711add424ec4882f0f1163b6c807be5</anchor>
      <arglist>(Domain1D *right)</arglist>
    </member>
    <member kind="function">
      <type>Domain1D *</type>
      <name>left</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a33b0fb37348d9bedb9416e7f582050d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Domain1D *</type>
      <name>right</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a47fdb69476f68ca4528a3489a2f5894d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>prevSoln</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>ad03bb4fdff24cce41adc01455d43b821</anchor>
      <arglist>(size_t n, size_t j) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setID</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>acdc3144561a492585be9d0fe448f486f</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showSolution</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a222f24b70509e9f2ec32f8fb3a8bf194</anchor>
      <arglist>(const doublereal *x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupGrid</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>ae4b0c92ba45efb6445ec209ab9944c20</anchor>
      <arglist>(size_t n, const doublereal *z)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>_getInitialSoln</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>aa9726933f20478f3775d92b73a18c7be</anchor>
      <arglist>(doublereal *x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>initialValue</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a1a31b59cb5780a9c34ec29fef07cf829</anchor>
      <arglist>(size_t n, size_t j)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>_finalize</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a55f842b28fbd6c8287dc8aec065dfaef</anchor>
      <arglist>(const doublereal *x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forceFullUpdate</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a9c39ff12a574407840312b684e1eff1e</anchor>
      <arglist>(bool update)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_iloc</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a090566cd91917c1870ac39dcf13d7a7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>m_id</name>
      <anchorfile>classCantera_1_1Domain1D.html</anchorfile>
      <anchor>a4afdd8caeac322bdb1def6148948417b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::DustyGasTransport</name>
    <filename>classCantera_1_1DustyGasTransport.html</filename>
    <base>Cantera::Transport</base>
    <member kind="function">
      <type></type>
      <name>DustyGasTransport</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a3366a2ee999cf8bded2a6b81a95c65e8</anchor>
      <arglist>(thermo_t *thermo=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThermo</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>aeb4a46210d4688a2b0e1b9290c867c40</anchor>
      <arglist>(thermo_t &amp;thermo)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>transportType</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>aaa616493275cb1d7fb3ba980ec3cd467</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMultiDiffCoeffs</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a2d2a4efadfdf1d2489f992e92589fc8c</anchor>
      <arglist>(const size_t ld, doublereal *const d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMolarFluxes</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a46b10f34a9e7a98b84528730dff53774</anchor>
      <arglist>(const doublereal *const state1, const doublereal *const state2, const doublereal delta, doublereal *const fluxes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPorosity</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>abcf21a296b1731a84d13d6e86dae9b10</anchor>
      <arglist>(doublereal porosity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTortuosity</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a5f89d5893277b1a40ca5ac1039052359</anchor>
      <arglist>(doublereal tort)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMeanPoreRadius</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a0365ad28e92276cea42600d75c999598</anchor>
      <arglist>(doublereal rbar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMeanParticleDiameter</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>afe6d04caf8fd09268597bcd06621ea59</anchor>
      <arglist>(doublereal dbar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPermeability</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a4d6e5ad6964582d75a11cf2c21ccf05e</anchor>
      <arglist>(doublereal B)</arglist>
    </member>
    <member kind="function">
      <type>Transport &amp;</type>
      <name>gasTransport</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a9e800e5017543a539ae7e4edcac2bddf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a502df1fcc2045ebfaddd692e604ea565</anchor>
      <arglist>(ThermoPhase *phase, Transport *gastr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateTransport_T</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a4f4d1fb025cd29bde9b41bdbecd40de1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateTransport_C</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a7654c61d2baf5dfa446fdc25a9f7d2cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateBinaryDiffCoeffs</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a597becc999cd55140101e5588e6997e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateMultiDiffCoeffs</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a7b3f9fbadec1662f477ff01503990ee2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateKnudsenDiffCoeffs</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a83b3a40a13f640a4d6c60d6f7784815d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>eval_H_matrix</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a707fcfc0c13750b3696a67ddc75da60f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_mw</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a090dee67d018151c78cc56fe95ae4757</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DenseMatrix</type>
      <name>m_d</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>aee4d0c9a47220a276c7ad97c2745a259</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_x</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a235e43d360bbe2f315ff6156d60c7207</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_dk</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>ade51e85b62eb04e688a8379d098466da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_temp</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a4d64276995e8b70bb4a09b47c20547f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DenseMatrix</type>
      <name>m_multidiff</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a20a2eaa0a7d87fb0f708fc85036bfb7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_spwork</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>ae06300fb9d5a56b3ef36780110841a5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_spwork2</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a2a916997c1c7fcfc550511ca5dacec22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_gradP</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a60c22bbcb6ce024726e262d9f01abcc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_knudsen_ok</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a4feab1de6443ceb0c318e47c758aa161</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_bulk_ok</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a22c965853532e5a0e81eef77456f68bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_porosity</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a927ef16d349afa61ba20e36e276273af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_tortuosity</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a7f66d9360534525242e7e8b5b5137502</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_pore_radius</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>ab012d0efda4494e8449745a327945e8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_diam</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a9f451a4315ae1c1a4293f539f51c7247</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_perm</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a348ad4bea78393f23b487d9ec5d59ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unique_ptr&lt; Transport &gt;</type>
      <name>m_gastran</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>a2a926a5d87a4a0a5cf9b000c244f136c</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TransportFactory</name>
      <anchorfile>classCantera_1_1DustyGasTransport.html</anchorfile>
      <anchor>ac8fc1e667d16a9a1fc90bbcf1a772077</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Edge</name>
    <filename>classCantera_1_1Edge.html</filename>
    <base>Cantera::EdgePhase</base>
    <base>Cantera::EdgeKinetics</base>
    <member kind="function">
      <type>bool</type>
      <name>ready</name>
      <anchorfile>classCantera_1_1Edge.html</anchorfile>
      <anchor>ae0659ce466366fc566dc1425c658a019</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::EdgeKinetics</name>
    <filename>classCantera_1_1EdgeKinetics.html</filename>
    <base>Cantera::InterfaceKinetics</base>
    <member kind="function">
      <type></type>
      <name>EdgeKinetics</name>
      <anchorfile>classCantera_1_1EdgeKinetics.html</anchorfile>
      <anchor>aaf4907a44a5a205ce1dbd95bd8c210bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>kineticsType</name>
      <anchorfile>classCantera_1_1EdgeKinetics.html</anchorfile>
      <anchor>ad7dcd09d4e43dec6cdbd70a4412edf2e</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::EdgePhase</name>
    <filename>classCantera_1_1EdgePhase.html</filename>
    <base>Cantera::SurfPhase</base>
    <member kind="function">
      <type></type>
      <name>EdgePhase</name>
      <anchorfile>classCantera_1_1EdgePhase.html</anchorfile>
      <anchor>a5dbab4f69049f2a5f52e67976e220fe8</anchor>
      <arglist>(doublereal n0=1.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1EdgePhase.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1EdgePhase.html</anchorfile>
      <anchor>a5a19cfdf838f5e46546aaff1e039cc97</anchor>
      <arglist>(const XML_Node &amp;thermoData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ElectrochemicalReaction</name>
    <filename>classCantera_1_1ElectrochemicalReaction.html</filename>
    <base>Cantera::InterfaceReaction</base>
    <member kind="variable">
      <type>doublereal</type>
      <name>film_resistivity</name>
      <anchorfile>classCantera_1_1ElectrochemicalReaction.html</anchorfile>
      <anchor>a525c65154f3e4559689ba2007df10225</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>doublereal</type>
      <name>beta</name>
      <anchorfile>classCantera_1_1ElectrochemicalReaction.html</anchorfile>
      <anchor>a0f4d8a67bb39acc583704de120c23b36</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ElementaryReaction</name>
    <filename>classCantera_1_1ElementaryReaction.html</filename>
    <base>Cantera::Reaction</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>validate</name>
      <anchorfile>classCantera_1_1ElementaryReaction.html</anchorfile>
      <anchor>a41d45236c37b75848f4b1667a11fb50e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Empty1D</name>
    <filename>classCantera_1_1Empty1D.html</filename>
    <base>Cantera::Bdry1D</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showSolution</name>
      <anchorfile>classCantera_1_1Empty1D.html</anchorfile>
      <anchor>aa8a7e620eca862f4cf1cd4ca2c91dcc3</anchor>
      <arglist>(const doublereal *x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1Empty1D.html</anchorfile>
      <anchor>a02fd73d861ef2e4aabb38c0c9ff82947</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1Empty1D.html</anchorfile>
      <anchor>aa62f69dbb402c9c9de00311a7f5193ad</anchor>
      <arglist>(size_t jg, doublereal *xg, doublereal *rg, integer *diagg, doublereal rdt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual XML_Node &amp;</type>
      <name>save</name>
      <anchorfile>classCantera_1_1Empty1D.html</anchorfile>
      <anchor>ac2ec60b9aa9b81c157997c4c10594883</anchor>
      <arglist>(XML_Node &amp;o, const doublereal *const soln)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>restore</name>
      <anchorfile>classCantera_1_1Empty1D.html</anchorfile>
      <anchor>a7f87adb9173d936c9f741a204b94d69c</anchor>
      <arglist>(const XML_Node &amp;dom, doublereal *soln, int loglevel)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::EquilOpt</name>
    <filename>classCantera_1_1EquilOpt.html</filename>
    <member kind="variable">
      <type>doublereal</type>
      <name>relTolerance</name>
      <anchorfile>classCantera_1_1EquilOpt.html</anchorfile>
      <anchor>a75c9c267339526b2c1eede3cdcc68ed9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>doublereal</type>
      <name>absElemTol</name>
      <anchorfile>classCantera_1_1EquilOpt.html</anchorfile>
      <anchor>adf838190d03789a01f3afc2b2b5ab85c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxIterations</name>
      <anchorfile>classCantera_1_1EquilOpt.html</anchorfile>
      <anchor>adfed55b92ded4adea8686fe2014f85cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iterations</name>
      <anchorfile>classCantera_1_1EquilOpt.html</anchorfile>
      <anchor>a1d10e252e778731e59f0f71afd7e727e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>doublereal</type>
      <name>maxStepSize</name>
      <anchorfile>classCantera_1_1EquilOpt.html</anchorfile>
      <anchor>a6ad36a0de734a8c75e6a2b5509a83dad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>propertyPair</name>
      <anchorfile>classCantera_1_1EquilOpt.html</anchorfile>
      <anchor>aecbf8e4565d448d1eab1975a9fab3123</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>contin</name>
      <anchorfile>classCantera_1_1EquilOpt.html</anchorfile>
      <anchor>afbe89afbcf133cf604b56eba574817a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Exp1</name>
    <filename>classCantera_1_1Exp1.html</filename>
    <base>Cantera::Func1</base>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>duplicate</name>
      <anchorfile>classCantera_1_1Exp1.html</anchorfile>
      <anchor>a4aa86693947c32c642a3d6ee556a8eed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1Exp1.html</anchorfile>
      <anchor>acd39f99891dcb367c57588ec8c79b0c6</anchor>
      <arglist>(doublereal t) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>derivative</name>
      <anchorfile>classCantera_1_1Exp1.html</anchorfile>
      <anchor>add413b6d193ee81507d1b6c2e6a7077e</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Factory</name>
    <filename>classCantera_1_1Factory.html</filename>
    <templarg>T</templarg>
    <templarg>Args</templarg>
    <base>Cantera::FactoryBase</base>
    <member kind="function">
      <type>T *</type>
      <name>create</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>a9f3c908b8d496b742a65916e2c5acdb6</anchor>
      <arglist>(std::string name, Args... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reg</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>af3f7e5331288e181ad2ab1cae35ed309</anchor>
      <arglist>(const std::string &amp;name, std::function&lt; T *(Args...)&gt; f)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>m_synonyms</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>a904980653acc57d9159103c69563ad33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>m_deprecated_names</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>a70208c307e16f746227c63f6b8451239</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::FactoryBase</name>
    <filename>classCantera_1_1FactoryBase.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FactoryBase</name>
      <anchorfile>classCantera_1_1FactoryBase.html</anchorfile>
      <anchor>a47c984f07dd2116c9d2b64ef615fbe23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deleteFactories</name>
      <anchorfile>classCantera_1_1FactoryBase.html</anchorfile>
      <anchor>adc78e2a6a1f8ef2c1ad682e5fa824495</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FactoryBase</name>
      <anchorfile>classCantera_1_1FactoryBase.html</anchorfile>
      <anchor>a97b227fda1685b210a5cbf58b6b40ae6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>deleteFactory</name>
      <anchorfile>classCantera_1_1FactoryBase.html</anchorfile>
      <anchor>a15663fcccb836c3ab790211d63aa2917</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::vector&lt; FactoryBase * &gt;</type>
      <name>s_vFactoryRegistry</name>
      <anchorfile>classCantera_1_1FactoryBase.html</anchorfile>
      <anchor>a2ba72223c9d995d920728b05d1bf3c2a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Falloff</name>
    <filename>classCantera_1_1Falloff.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1Falloff.html</anchorfile>
      <anchor>a7ac06e6a12e196d182caea2dcd6b9963</anchor>
      <arglist>(const vector_fp &amp;c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTemp</name>
      <anchorfile>classCantera_1_1Falloff.html</anchorfile>
      <anchor>a3aff7ba38caea67658847a04a174add3</anchor>
      <arglist>(doublereal T, doublereal *work) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>F</name>
      <anchorfile>classCantera_1_1Falloff.html</anchorfile>
      <anchor>a77024fa3cc86b70a0e9b65bc91f5966c</anchor>
      <arglist>(doublereal pr, const doublereal *work) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>workSize</name>
      <anchorfile>classCantera_1_1Falloff.html</anchorfile>
      <anchor>acc2e7aaf281139ac48852aa6a59ab1d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getType</name>
      <anchorfile>classCantera_1_1Falloff.html</anchorfile>
      <anchor>a9f9971257c55cdbf47dedf35a6cb2695</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>nParameters</name>
      <anchorfile>classCantera_1_1Falloff.html</anchorfile>
      <anchor>a1b106ba0179505313ae594098e405868</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getParameters</name>
      <anchorfile>classCantera_1_1Falloff.html</anchorfile>
      <anchor>a569ef0b20d2d8df0909ec630de8be6ee</anchor>
      <arglist>(double *params) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::FalloffFactory</name>
    <filename>classCantera_1_1FalloffFactory.html</filename>
    <base>Factory&lt; Falloff &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deleteFactory</name>
      <anchorfile>classCantera_1_1FalloffFactory.html</anchorfile>
      <anchor>ad6285cea657558e041f040555a4d1c2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Falloff *</type>
      <name>newFalloff</name>
      <anchorfile>classCantera_1_1FalloffFactory.html</anchorfile>
      <anchor>aa64fd4b2876335142337e42c8dcd43c1</anchor>
      <arglist>(int type, const vector_fp &amp;c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FalloffFactory *</type>
      <name>factory</name>
      <anchorfile>classCantera_1_1FalloffFactory.html</anchorfile>
      <anchor>a505642fdca2348fd3b63670f98f85429</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>FalloffFactory</name>
      <anchorfile>classCantera_1_1FalloffFactory.html</anchorfile>
      <anchor>ac76f4760af62b2fab687df7a6a0ef50f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static FalloffFactory *</type>
      <name>s_factory</name>
      <anchorfile>classCantera_1_1FalloffFactory.html</anchorfile>
      <anchor>a9bef34322756a9e6372b08ac4d2d79fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::mutex</type>
      <name>falloff_mutex</name>
      <anchorfile>classCantera_1_1FalloffFactory.html</anchorfile>
      <anchor>a9c7013a35c24999e44da2955e6a947da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::FalloffMgr</name>
    <filename>classCantera_1_1FalloffMgr.html</filename>
    <member kind="function">
      <type></type>
      <name>FalloffMgr</name>
      <anchorfile>classCantera_1_1FalloffMgr.html</anchorfile>
      <anchor>aa5a8205bab662bb0d2a914cd09c4fa36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>install</name>
      <anchorfile>classCantera_1_1FalloffMgr.html</anchorfile>
      <anchor>acb6c1d289b17f74787a76b4333c01db7</anchor>
      <arglist>(size_t rxn, int reactionType, shared_ptr&lt; Falloff &gt; f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replace</name>
      <anchorfile>classCantera_1_1FalloffMgr.html</anchorfile>
      <anchor>aedb7f25a4faf80c7da187b137873b63d</anchor>
      <arglist>(size_t rxn, shared_ptr&lt; Falloff &gt; f)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>workSize</name>
      <anchorfile>classCantera_1_1FalloffMgr.html</anchorfile>
      <anchor>a2019b834bc70b25e77d5f29fafe74495</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateTemp</name>
      <anchorfile>classCantera_1_1FalloffMgr.html</anchorfile>
      <anchor>af4bd3c7eb0fbfc36a3927a7c01014c2a</anchor>
      <arglist>(doublereal t, doublereal *work)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pr_to_falloff</name>
      <anchorfile>classCantera_1_1FalloffMgr.html</anchorfile>
      <anchor>a808d16cfffdefac0da6cfe53959c5e6a</anchor>
      <arglist>(doublereal *values, const doublereal *work)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_int</type>
      <name>m_reactionType</name>
      <anchorfile>classCantera_1_1FalloffMgr.html</anchorfile>
      <anchor>af70ebd0ee978d6f00b703730397e0b1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; size_t, size_t &gt;</type>
      <name>m_indices</name>
      <anchorfile>classCantera_1_1FalloffMgr.html</anchorfile>
      <anchor>a623c3ac2ad3e16e78ddfc91de68ff2a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::FalloffReaction</name>
    <filename>classCantera_1_1FalloffReaction.html</filename>
    <base>Cantera::Reaction</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>reactantString</name>
      <anchorfile>classCantera_1_1FalloffReaction.html</anchorfile>
      <anchor>a27cd9a34920a63f5e32b432aa406d85a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>productString</name>
      <anchorfile>classCantera_1_1FalloffReaction.html</anchorfile>
      <anchor>a788c295af7341bdb50e6b88d6970dab8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>validate</name>
      <anchorfile>classCantera_1_1FalloffReaction.html</anchorfile>
      <anchor>a41d45236c37b75848f4b1667a11fb50e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Arrhenius</type>
      <name>low_rate</name>
      <anchorfile>classCantera_1_1FalloffReaction.html</anchorfile>
      <anchor>aaba5615b28dc2c64edcc294ff436d07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Arrhenius</type>
      <name>high_rate</name>
      <anchorfile>classCantera_1_1FalloffReaction.html</anchorfile>
      <anchor>af10f69daa202da192cb9cf34ba613568</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ThirdBody</type>
      <name>third_body</name>
      <anchorfile>classCantera_1_1FalloffReaction.html</anchorfile>
      <anchor>a9f6436ba65cfccb3a6eda66ba088a5b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>shared_ptr&lt; Falloff &gt;</type>
      <name>falloff</name>
      <anchorfile>classCantera_1_1FalloffReaction.html</anchorfile>
      <anchor>af77f9d9a9c6d67915334e96f7ff2e030</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::FixedChemPotSSTP</name>
    <filename>classCantera_1_1FixedChemPotSSTP.html</filename>
    <base>Cantera::SingleSpeciesTP</base>
    <member kind="function">
      <type></type>
      <name>FixedChemPotSSTP</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a39d754b2ed96e18f684a245a3622068c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FixedChemPotSSTP</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>af5448f9a5ac71891b01692e354658a8b</anchor>
      <arglist>(const std::string &amp;infile, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FixedChemPotSSTP</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a1d5b4913f631a4e89734334bebd70090</anchor>
      <arglist>(XML_Node &amp;phaseRef, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FixedChemPotSSTP</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>ab7ea29cccd5bcbe3e9a2014eaa667ef1</anchor>
      <arglist>(const std::string &amp;Ename, doublereal chemPot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParameters</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>ada0ba2f6093d3df4d86c0f1018005544</anchor>
      <arglist>(int n, doublereal *const c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getParameters</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>af41cd836506ec09138b0c9c327acf1d3</anchor>
      <arglist>(int &amp;n, doublereal *const c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>abe11f2065246742c73c778c5de62f5b7</anchor>
      <arglist>(const XML_Node &amp;eosdata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChemicalPotential</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a860542714c5f32131f5226ed3d9800cc</anchor>
      <arglist>(doublereal chemPot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>isothermalCompressibility</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>afbf834ae5cd73373fa5681bbdc329f1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalExpansionCoeff</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a661ba8332a19cb48e3e03136c1bce6a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>logStandardConc</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a478bb3efbdc8679b9c922d022c317b0d</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a6b4cdc30b480b92ed405f95e1f660687</anchor>
      <arglist>(doublereal *mu0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a2ee9dfc481fbf2c9e915c1e15794d238</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a6736e153cc33a62e77d8b5bc594cb7c3</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>aadbf5eb5c20c2db5ea363947e883b6be</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>ac0892d9c5b503b830fd46afa40f14763</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT_ref</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>aa84157ca9a671bea6e55ad961fb3156d</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>af9328613fd7ac31d213f4fd284d8ad63</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT_ref</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a15142ba0b60259900efafd8026b51c96</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_ref</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>ae4ec4c8979d7a4b5deb6faf52697a068</anchor>
      <arglist>(doublereal *g) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R_ref</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a9d67a94aa582d60860f4658ea11e1aa3</anchor>
      <arglist>(doublereal *er) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R_ref</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>ab511be0c8fe8538e41b1b74d5bc4f7df</anchor>
      <arglist>(doublereal *cprt) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>chemPot_</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>ae35aab7afcd7c8dd5d7b264560a34f9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>isothermalCompressibility</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>afbf834ae5cd73373fa5681bbdc329f1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalExpansionCoeff</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a661ba8332a19cb48e3e03136c1bce6a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>logStandardConc</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a478bb3efbdc8679b9c922d022c317b0d</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a6b4cdc30b480b92ed405f95e1f660687</anchor>
      <arglist>(doublereal *mu0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a2ee9dfc481fbf2c9e915c1e15794d238</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a6736e153cc33a62e77d8b5bc594cb7c3</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>aadbf5eb5c20c2db5ea363947e883b6be</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>ac0892d9c5b503b830fd46afa40f14763</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT_ref</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>aa84157ca9a671bea6e55ad961fb3156d</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>af9328613fd7ac31d213f4fd284d8ad63</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT_ref</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a15142ba0b60259900efafd8026b51c96</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_ref</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>ae4ec4c8979d7a4b5deb6faf52697a068</anchor>
      <arglist>(doublereal *g) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R_ref</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>a9d67a94aa582d60860f4658ea11e1aa3</anchor>
      <arglist>(doublereal *er) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R_ref</name>
      <anchorfile>classCantera_1_1FixedChemPotSSTP.html</anchorfile>
      <anchor>ab511be0c8fe8538e41b1b74d5bc4f7df</anchor>
      <arglist>(doublereal *cprt) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::FlowDevice</name>
    <filename>classCantera_1_1FlowDevice.html</filename>
    <member kind="function">
      <type>int</type>
      <name>type</name>
      <anchorfile>classCantera_1_1FlowDevice.html</anchorfile>
      <anchor>ae3775081dae5d62a47eee5c62fa49995</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>massFlowRate</name>
      <anchorfile>classCantera_1_1FlowDevice.html</anchorfile>
      <anchor>a9ccbfe8bf503f397aed1800834def823</anchor>
      <arglist>(double time=-999.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateMassFlowRate</name>
      <anchorfile>classCantera_1_1FlowDevice.html</anchorfile>
      <anchor>a3aad33ef5dfee5e6b1de346b4c3ad2ca</anchor>
      <arglist>(doublereal time)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>outletSpeciesMassFlowRate</name>
      <anchorfile>classCantera_1_1FlowDevice.html</anchorfile>
      <anchor>a1f00faa40d74eda98656082f40a77db3</anchor>
      <arglist>(size_t k)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>enthalpy_mass</name>
      <anchorfile>classCantera_1_1FlowDevice.html</anchorfile>
      <anchor>a9c852b9ec6aeb34586c1343f95253bdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>install</name>
      <anchorfile>classCantera_1_1FlowDevice.html</anchorfile>
      <anchor>a1ccbd3ba908b8b72d1358dca9ae879b9</anchor>
      <arglist>(ReactorBase &amp;in, ReactorBase &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>ReactorBase &amp;</type>
      <name>in</name>
      <anchorfile>classCantera_1_1FlowDevice.html</anchorfile>
      <anchor>acca003c10c0041dc8733d34a1f880962</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ReactorBase &amp;</type>
      <name>out</name>
      <anchorfile>classCantera_1_1FlowDevice.html</anchorfile>
      <anchor>aea7342b76fab2428fd492826cb85e86f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParameters</name>
      <anchorfile>classCantera_1_1FlowDevice.html</anchorfile>
      <anchor>a6d656eacdc750986148e7049ff9157cb</anchor>
      <arglist>(int n, const double *coeffs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFunction</name>
      <anchorfile>classCantera_1_1FlowDevice.html</anchorfile>
      <anchor>a5ed163fcc7d18a0e9026bbc9c31cf5f9</anchor>
      <arglist>(Func1 *f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMassFlowRate</name>
      <anchorfile>classCantera_1_1FlowDevice.html</anchorfile>
      <anchor>aad9535d3c003e6435c4fa2ac0cba1327</anchor>
      <arglist>(doublereal mdot)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::FlowReactor</name>
    <filename>classCantera_1_1FlowReactor.html</filename>
    <base>Cantera::Reactor</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>type</name>
      <anchorfile>classCantera_1_1FlowReactor.html</anchorfile>
      <anchor>a67b824a3d6f5f8dc7b9f435353c62676</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getState</name>
      <anchorfile>classCantera_1_1FlowReactor.html</anchorfile>
      <anchor>a62334bd67a22db256d39b9e673e6a7d3</anchor>
      <arglist>(doublereal *y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classCantera_1_1FlowReactor.html</anchorfile>
      <anchor>ab2df902e719cd522b0df4d234b016c26</anchor>
      <arglist>(doublereal t0=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evalEqs</name>
      <anchorfile>classCantera_1_1FlowReactor.html</anchorfile>
      <anchor>ab56bbca2717dd3f4851029f65728f745</anchor>
      <arglist>(doublereal t, doublereal *y, doublereal *ydot, doublereal *params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateState</name>
      <anchorfile>classCantera_1_1FlowReactor.html</anchorfile>
      <anchor>a0ff521286d89a1422948c0497385cb28</anchor>
      <arglist>(doublereal *y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>componentIndex</name>
      <anchorfile>classCantera_1_1FlowReactor.html</anchorfile>
      <anchor>a00653754ecb40ea0445540af4d9cf353</anchor>
      <arglist>(const std::string &amp;nm) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Fourier1</name>
    <filename>classCantera_1_1Fourier1.html</filename>
    <base>Cantera::Func1</base>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>duplicate</name>
      <anchorfile>classCantera_1_1Fourier1.html</anchorfile>
      <anchor>a4aa86693947c32c642a3d6ee556a8eed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1Fourier1.html</anchorfile>
      <anchor>acd39f99891dcb367c57588ec8c79b0c6</anchor>
      <arglist>(doublereal t) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::FreeFlame</name>
    <filename>classCantera_1_1FreeFlame.html</filename>
    <base>Cantera::StFlow</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evalRightBoundary</name>
      <anchorfile>classCantera_1_1FreeFlame.html</anchorfile>
      <anchor>a17c99fdcaaf133d493fe4a7a0e41bfa4</anchor>
      <arglist>(doublereal *x, doublereal *res, integer *diag, doublereal rdt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evalContinuity</name>
      <anchorfile>classCantera_1_1FreeFlame.html</anchorfile>
      <anchor>a94d658fe430f8a3c4144c08f0810857d</anchor>
      <arglist>(size_t j, doublereal *x, doublereal *r, integer *diag, doublereal rdt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>_finalize</name>
      <anchorfile>classCantera_1_1FreeFlame.html</anchorfile>
      <anchor>a8850703927b0e31590d988ad9420a411</anchor>
      <arglist>(const doublereal *x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>restore</name>
      <anchorfile>classCantera_1_1FreeFlame.html</anchorfile>
      <anchor>a7f87adb9173d936c9f741a204b94d69c</anchor>
      <arglist>(const XML_Node &amp;dom, doublereal *soln, int loglevel)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual XML_Node &amp;</type>
      <name>save</name>
      <anchorfile>classCantera_1_1FreeFlame.html</anchorfile>
      <anchor>a6f2845e1dc389d2366e58c34e3a53a19</anchor>
      <arglist>(XML_Node &amp;o, const doublereal *const sol)</arglist>
    </member>
    <member kind="variable">
      <type>doublereal</type>
      <name>m_zfixed</name>
      <anchorfile>classCantera_1_1FreeFlame.html</anchorfile>
      <anchor>a6a6b873bc586b6a9e98832e0bf8285d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>doublereal</type>
      <name>m_tfixed</name>
      <anchorfile>classCantera_1_1FreeFlame.html</anchorfile>
      <anchor>abf38c3ab14c3bccd3fd2624a8009026b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Func1</name>
    <filename>classCantera_1_1Func1.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>duplicate</name>
      <anchorfile>classCantera_1_1Func1.html</anchorfile>
      <anchor>ad26a36abcf05f4ed5cd96ecafd52312a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>operator()</name>
      <anchorfile>classCantera_1_1Func1.html</anchorfile>
      <anchor>ad09938d5c5ebc8cd1c79d80fc679c449</anchor>
      <arglist>(doublereal t) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1Func1.html</anchorfile>
      <anchor>a1efa2d2ca0e2cd0b2befb6607336d5a1</anchor>
      <arglist>(doublereal t) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>derivative</name>
      <anchorfile>classCantera_1_1Func1.html</anchorfile>
      <anchor>add413b6d193ee81507d1b6c2e6a7077e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdentical</name>
      <anchorfile>classCantera_1_1Func1.html</anchorfile>
      <anchor>ac1cd39e099cddbd6819a2bcb91379526</anchor>
      <arglist>(Func1 &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>c</name>
      <anchorfile>classCantera_1_1Func1.html</anchorfile>
      <anchor>ae46b43a5c5b4c2ed0c43167c3f22d1d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setC</name>
      <anchorfile>classCantera_1_1Func1.html</anchorfile>
      <anchor>a1dd3e061c239c716044b51f6a6b24d7a</anchor>
      <arglist>(doublereal c)</arglist>
    </member>
    <member kind="function">
      <type>Func1 &amp;</type>
      <name>func1</name>
      <anchorfile>classCantera_1_1Func1.html</anchorfile>
      <anchor>ab5c41c96a61991929e54942ea9868a22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Func1 &amp;</type>
      <name>func2</name>
      <anchorfile>classCantera_1_1Func1.html</anchorfile>
      <anchor>a9093a855da17ae6b8a3dccc3c97b2bec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>order</name>
      <anchorfile>classCantera_1_1Func1.html</anchorfile>
      <anchor>abcc41a4e499b9ebcdc71c5e213c7c22f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::FuncEval</name>
    <filename>classCantera_1_1FuncEval.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1FuncEval.html</anchorfile>
      <anchor>a0ae9e2ce5488d3af0a53b9706081578d</anchor>
      <arglist>(double t, double *y, double *ydot, double *p)=0</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>eval_nothrow</name>
      <anchorfile>classCantera_1_1FuncEval.html</anchorfile>
      <anchor>aba39988ae0f108d3326f45c957533089</anchor>
      <arglist>(double t, double *y, double *ydot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getState</name>
      <anchorfile>classCantera_1_1FuncEval.html</anchorfile>
      <anchor>aeef511576b5c09dc71220eb62b34b36e</anchor>
      <arglist>(double *y)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>neq</name>
      <anchorfile>classCantera_1_1FuncEval.html</anchorfile>
      <anchor>a986ca83cf379527a37c67639d4cc41c7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>nparams</name>
      <anchorfile>classCantera_1_1FuncEval.html</anchorfile>
      <anchor>a0ef15bb07fef73a94d1f06eb499dcba6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>suppressErrors</name>
      <anchorfile>classCantera_1_1FuncEval.html</anchorfile>
      <anchor>a0e35850a16283720570fcb42bdb2c89a</anchor>
      <arglist>(bool suppress)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>suppressErrors</name>
      <anchorfile>classCantera_1_1FuncEval.html</anchorfile>
      <anchor>a90f758c6bdc5e935134668ed5751f0f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getErrors</name>
      <anchorfile>classCantera_1_1FuncEval.html</anchorfile>
      <anchor>aa56cb77e00e4559262f63a45ac51f82d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearErrors</name>
      <anchorfile>classCantera_1_1FuncEval.html</anchorfile>
      <anchor>a5a1056d4e9d26a692f621e83be8cd8d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_sens_params</name>
      <anchorfile>classCantera_1_1FuncEval.html</anchorfile>
      <anchor>a4f8edd2163751d1bbca9220c719b93c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_paramScales</name>
      <anchorfile>classCantera_1_1FuncEval.html</anchorfile>
      <anchor>abbbc581f45b92062f4e5a100e14b72d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_errors</name>
      <anchorfile>classCantera_1_1FuncEval.html</anchorfile>
      <anchor>a749254be7ca5f903ef839ac88e5a8ea9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::GasKinetics</name>
    <filename>classCantera_1_1GasKinetics.html</filename>
    <base>Cantera::BulkKinetics</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>update_rates_T</name>
      <anchorfile>classCantera_1_1GasKinetics.html</anchorfile>
      <anchor>aa8202f3f977b95c57e9bdcdd0c98cbc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>update_rates_C</name>
      <anchorfile>classCantera_1_1GasKinetics.html</anchorfile>
      <anchor>aa4596471c3c800d1c157b4a409cc91bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GasKinetics</name>
      <anchorfile>classCantera_1_1GasKinetics.html</anchorfile>
      <anchor>a6c894805861c0a2d45951d3bed77bd90</anchor>
      <arglist>(thermo_t *thermo=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>kineticsType</name>
      <anchorfile>classCantera_1_1GasKinetics.html</anchorfile>
      <anchor>ad7dcd09d4e43dec6cdbd70a4412edf2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEquilibriumConstants</name>
      <anchorfile>classCantera_1_1GasKinetics.html</anchorfile>
      <anchor>ab8d2c41ec01bc6203df648a0b9cd806c</anchor>
      <arglist>(doublereal *kc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFwdRateConstants</name>
      <anchorfile>classCantera_1_1GasKinetics.html</anchorfile>
      <anchor>a5afbb7ec62ac028568d70322883439fe</anchor>
      <arglist>(doublereal *kfwd)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1GasKinetics.html</anchorfile>
      <anchor>a02fd73d861ef2e4aabb38c0c9ff82947</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addReaction</name>
      <anchorfile>classCantera_1_1GasKinetics.html</anchorfile>
      <anchor>a83c9a822d0a2627b291dcb2361769e1a</anchor>
      <arglist>(shared_ptr&lt; Reaction &gt; r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>modifyReaction</name>
      <anchorfile>classCantera_1_1GasKinetics.html</anchorfile>
      <anchor>a9f54370d32ba34fe3e68248ca22cd613</anchor>
      <arglist>(size_t i, shared_ptr&lt; Reaction &gt; rNew)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateKc</name>
      <anchorfile>classCantera_1_1GasKinetics.html</anchorfile>
      <anchor>a8931461bd97d7de25974a3d1c10138cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_fallindx</name>
      <anchorfile>classCantera_1_1GasKinetics.html</anchorfile>
      <anchor>ab5e5837d4237ef0ba4352d82f6961ddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; size_t, size_t &gt;</type>
      <name>m_rfallindx</name>
      <anchorfile>classCantera_1_1GasKinetics.html</anchorfile>
      <anchor>a10588f9fe3fefd60eee9e266bc8e1678</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Rate1&lt; Arrhenius &gt;</type>
      <name>m_falloff_low_rates</name>
      <anchorfile>classCantera_1_1GasKinetics.html</anchorfile>
      <anchor>ab774dba0f443332b22b92e32abae85f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Rate1&lt; Arrhenius &gt;</type>
      <name>m_falloff_high_rates</name>
      <anchorfile>classCantera_1_1GasKinetics.html</anchorfile>
      <anchor>a408736670ba9fceb8885500a14e93b78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_pres</name>
      <anchorfile>classCantera_1_1GasKinetics.html</anchorfile>
      <anchor>a36c945dff57b7e72f745474aba7c6d33</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GasKinetics</name>
      <anchorfile>classCantera_1_1GasKinetics.html</anchorfile>
      <anchor>a6c894805861c0a2d45951d3bed77bd90</anchor>
      <arglist>(thermo_t *thermo=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>kineticsType</name>
      <anchorfile>classCantera_1_1GasKinetics.html</anchorfile>
      <anchor>ad7dcd09d4e43dec6cdbd70a4412edf2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEquilibriumConstants</name>
      <anchorfile>classCantera_1_1GasKinetics.html</anchorfile>
      <anchor>ab8d2c41ec01bc6203df648a0b9cd806c</anchor>
      <arglist>(doublereal *kc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFwdRateConstants</name>
      <anchorfile>classCantera_1_1GasKinetics.html</anchorfile>
      <anchor>a5afbb7ec62ac028568d70322883439fe</anchor>
      <arglist>(doublereal *kfwd)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1GasKinetics.html</anchorfile>
      <anchor>a02fd73d861ef2e4aabb38c0c9ff82947</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addReaction</name>
      <anchorfile>classCantera_1_1GasKinetics.html</anchorfile>
      <anchor>a83c9a822d0a2627b291dcb2361769e1a</anchor>
      <arglist>(shared_ptr&lt; Reaction &gt; r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>modifyReaction</name>
      <anchorfile>classCantera_1_1GasKinetics.html</anchorfile>
      <anchor>a9f54370d32ba34fe3e68248ca22cd613</anchor>
      <arglist>(size_t i, shared_ptr&lt; Reaction &gt; rNew)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_pres</name>
      <anchorfile>classCantera_1_1GasKinetics.html</anchorfile>
      <anchor>a36c945dff57b7e72f745474aba7c6d33</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::GasTransport</name>
    <filename>classCantera_1_1GasTransport.html</filename>
    <base>Cantera::Transport</base>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>viscosity</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>ad8dadb8c432b45ddc85f81e5a863cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesViscosities</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>ab9b5169b554e676608b84f5a236422e0</anchor>
      <arglist>(doublereal *const visc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getBinaryDiffCoeffs</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a450f94e1a146e7bb44e24d153678609b</anchor>
      <arglist>(const size_t ld, doublereal *const d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMixDiffCoeffs</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a699001499937e42f790551f01bce4424</anchor>
      <arglist>(doublereal *const d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMixDiffCoeffsMole</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a65869dbf3a518df753ee7483bbb562af</anchor>
      <arglist>(doublereal *const d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMixDiffCoeffsMass</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a31782a433b5a03a822a3903ca67f37d0</anchor>
      <arglist>(doublereal *const d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a6ce9b4b2b46f174a507085af66fec1cf</anchor>
      <arglist>(thermo_t *thermo, int mode=0, int log_level=0)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateViscosity_T</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a63ac7f8d6ccfecb0a7aac8580e1640e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateSpeciesViscosities</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a6f7cb5b1ada724ec628d97fd61d5b32c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateDiff_T</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a413dd59dcbc0b8d0a0b4b87424bac936</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setupCollisionParameters</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a073dd5d766f5b8c9a0b8f2757d7d25d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setupCollisionIntegral</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>ad6f82a385b64fedb37b81a00c4ed7559</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getTransportData</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a066ec8262888d0141f4b882501a8608f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>makePolarCorrections</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a53364f5a6ebd1c91663fc0f939a4eb67</anchor>
      <arglist>(size_t i, size_t j, doublereal &amp;f_eps, doublereal &amp;f_sigma)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>fitCollisionIntegrals</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a63596d9283bcd529d0f7cca7043ec803</anchor>
      <arglist>(MMCollisionInt &amp;integrals)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>fitProperties</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a267d20cdea7486fe84e722ee82d84b20</anchor>
      <arglist>(MMCollisionInt &amp;integrals)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>fitDiffCoeffs</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a384e3fa8d986dff5c70492d5be1a1d62</anchor>
      <arglist>(MMCollisionInt &amp;integrals)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getBinDiffCorrection</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a58a721fcba2dce1965f0c53a4a4ff333</anchor>
      <arglist>(doublereal t, MMCollisionInt &amp;integrals, size_t k, size_t j, doublereal xk, doublereal xj, doublereal &amp;fkj, doublereal &amp;fjk)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_molefracs</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a12c50f38c6cb71d8535bf8beae6bcb0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_viscmix</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>adb781f17290f2cdd6ebac13511fa3b2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_visc_ok</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a27880824c16cfd89814b507c333b9162</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_viscwt_ok</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>acad698fafd23907553672f085a836d8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_spvisc_ok</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a6e51d934109d995e9fa6ad751773f149</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_bindiff_ok</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a43bf403122fcb29ccda22fd52fe225a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_mode</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a5704ba84c8aca7f4ff7477d9445d2bae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DenseMatrix</type>
      <name>m_phi</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>ad51c50b5be3689fce04d45414f7b840b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_spwork</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>ae06300fb9d5a56b3ef36780110841a5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_visc</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a8920228ae78dc5b3eaffb16c1e06b985</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; vector_fp &gt;</type>
      <name>m_visccoeffs</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>ac9ced27ac25f7d03eed3badd9e115d2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_mw</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a090dee67d018151c78cc56fe95ae4757</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DenseMatrix</type>
      <name>m_wratjk</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a4270693f6e4536591d94dc4e866cb8c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DenseMatrix</type>
      <name>m_wratkj1</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a29d28ae59386a30f3011a966ca751b41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_sqvisc</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a135c6e3f05f2bbd37ba5280991b687ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_polytempvec</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a19ecc6ad9a677ab1d4d0daf7f2f10748</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_temp</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a4d64276995e8b70bb4a09b47c20547f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_kbt</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a4234894ebd07579dfe55990f78950c90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_sqrt_kbt</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>ae0964895d176924509e2f8b92e584eae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_sqrt_t</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>afd2ad1121f5b814f053eefdea4883fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_logt</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a04cda98631983d5947b8da86840008c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_t14</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a4ea3732a49c1827e83d2b381d68dd4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_t32</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a591b836d7a82b7f945bcbb008c7e905a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; vector_fp &gt;</type>
      <name>m_diffcoeffs</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>aa9826363abe62816a76fb513d17af914</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DenseMatrix</type>
      <name>m_bdiff</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a7ce68336304abe3f1270fb30d0f1a9f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; vector_fp &gt;</type>
      <name>m_condcoeffs</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a18cec976a48a25154ec0a01a3ca91985</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; vector_int &gt;</type>
      <name>m_poly</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a76da7eeab4509aa47608f71e9baeb974</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; vector_fp &gt;</type>
      <name>m_omega22_poly</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a1cee517c872d5f4590db7d7a2740f5d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; vector_fp &gt;</type>
      <name>m_astar_poly</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>aa6372169df5ffc4c8933d282261821e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; vector_fp &gt;</type>
      <name>m_bstar_poly</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a560c9319deeaf433020684bb0ae938f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; vector_fp &gt;</type>
      <name>m_cstar_poly</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a39980238b4c85ef01c16de6fc5199278</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_zrot</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a971b8a79caf5877d5d7567fb84877faa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_crot</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>abfff7849bce3d6f4af931312c7045c92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; bool &gt;</type>
      <name>m_polar</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a0852c927e2124e99683a51aa043e3571</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_alpha</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>abc607935395a4df89ee3834153024a38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_eps</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>aaa14a6057c726f67d664ae84c9b22b41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_sigma</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a57ec84cd6fc220211be528f8fcdc7563</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DenseMatrix</type>
      <name>m_reducedMass</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>aa6f67054d2a2268c63be13162da49b89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DenseMatrix</type>
      <name>m_diam</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a4ea149fe7c709d3c854c04b904f86598</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DenseMatrix</type>
      <name>m_epsilon</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a494a0bab50ef930d6bb043c1c66ed320</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DenseMatrix</type>
      <name>m_dipole</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a8b607e574fb365d0e65126f74a82964e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DenseMatrix</type>
      <name>m_delta</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>ad159fd60c0deb71b17bc56e79857b93e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_w_ac</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>ad39ab8f1fc9434fb03bea494655e631e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_disp</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a4e20930928f74756b35d870e480d1a61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_quad_polar</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>adbbf82f298c9f8701f721bdd1b68ccf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_log_level</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>aa761ed036fdc29514c835a459adba878</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setupCollisionParameters</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a073dd5d766f5b8c9a0b8f2757d7d25d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setupCollisionIntegral</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>ad6f82a385b64fedb37b81a00c4ed7559</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getTransportData</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a066ec8262888d0141f4b882501a8608f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>makePolarCorrections</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a53364f5a6ebd1c91663fc0f939a4eb67</anchor>
      <arglist>(size_t i, size_t j, doublereal &amp;f_eps, doublereal &amp;f_sigma)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>fitCollisionIntegrals</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a63596d9283bcd529d0f7cca7043ec803</anchor>
      <arglist>(MMCollisionInt &amp;integrals)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>fitProperties</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a267d20cdea7486fe84e722ee82d84b20</anchor>
      <arglist>(MMCollisionInt &amp;integrals)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>fitDiffCoeffs</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a384e3fa8d986dff5c70492d5be1a1d62</anchor>
      <arglist>(MMCollisionInt &amp;integrals)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getBinDiffCorrection</name>
      <anchorfile>classCantera_1_1GasTransport.html</anchorfile>
      <anchor>a58a721fcba2dce1965f0c53a4a4ff333</anchor>
      <arglist>(doublereal t, MMCollisionInt &amp;integrals, size_t k, size_t j, doublereal xk, doublereal xj, doublereal &amp;fkj, doublereal &amp;fjk)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::GasTransportData</name>
    <filename>classCantera_1_1GasTransportData.html</filename>
    <base>Cantera::TransportData</base>
    <member kind="function">
      <type></type>
      <name>GasTransportData</name>
      <anchorfile>classCantera_1_1GasTransportData.html</anchorfile>
      <anchor>afe2a2372de98dd35d4d1efc5f7cfbdd5</anchor>
      <arglist>(const std::string &amp;geometry, double diameter, double well_depth, double dipole=0.0, double polarizability=0.0, double rot_relax=0.0, double acentric=0.0, double dispersion=0.0, double quad_polar=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCustomaryUnits</name>
      <anchorfile>classCantera_1_1GasTransportData.html</anchorfile>
      <anchor>a2634bfed698216c7fd4a236fb6e0e3bf</anchor>
      <arglist>(const std::string &amp;geometry, double diameter, double well_depth, double dipole=0.0, double polarizability=0.0, double rot_relax=0.0, double acentric=0.0, double dispersion=0.0, double quad_polar=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>validate</name>
      <anchorfile>classCantera_1_1GasTransportData.html</anchorfile>
      <anchor>ad0bd387b88f724503ee3647819452239</anchor>
      <arglist>(const Species &amp;species)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>geometry</name>
      <anchorfile>classCantera_1_1GasTransportData.html</anchorfile>
      <anchor>a04c49d6dd600c55c8ff2759aa9339146</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>diameter</name>
      <anchorfile>classCantera_1_1GasTransportData.html</anchorfile>
      <anchor>a2242a375bebbd1a1d1cf02a80d2715a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>well_depth</name>
      <anchorfile>classCantera_1_1GasTransportData.html</anchorfile>
      <anchor>a8ea5de7008a6dfe3ac0d18e6e0f7cb75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dipole</name>
      <anchorfile>classCantera_1_1GasTransportData.html</anchorfile>
      <anchor>a8456e63896665d293d486fd59b14aeaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>polarizability</name>
      <anchorfile>classCantera_1_1GasTransportData.html</anchorfile>
      <anchor>a037666c1c45976cf0fc8f9a07e2225e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rotational_relaxation</name>
      <anchorfile>classCantera_1_1GasTransportData.html</anchorfile>
      <anchor>a52df1275c6ac17e2aac4a32fc797855c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>acentric_factor</name>
      <anchorfile>classCantera_1_1GasTransportData.html</anchorfile>
      <anchor>a4d68ee0d00664a58e6ccaa7cadfc5307</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dispersion_coefficient</name>
      <anchorfile>classCantera_1_1GasTransportData.html</anchorfile>
      <anchor>a82c372da2b3d0c1f88d80a5b8470f695</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>quadrupole_polarizability</name>
      <anchorfile>classCantera_1_1GasTransportData.html</anchorfile>
      <anchor>a50ff32ff9d9fcae403ce83c8bd3a83d0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Gaussian</name>
    <filename>classCantera_1_1Gaussian.html</filename>
    <base>Cantera::Func1</base>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>duplicate</name>
      <anchorfile>classCantera_1_1Gaussian.html</anchorfile>
      <anchor>a4aa86693947c32c642a3d6ee556a8eed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1Gaussian.html</anchorfile>
      <anchor>acd39f99891dcb367c57588ec8c79b0c6</anchor>
      <arglist>(doublereal t) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::GeneralMatrix</name>
    <filename>classCantera_1_1GeneralMatrix.html</filename>
    <member kind="function">
      <type></type>
      <name>GeneralMatrix</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>ac74775046a692b6ef3a4437a2ad9f9bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>zero</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>adc97ef01b93ab09f32bf9a3bd07e6342</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>mult</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>ae6db456e2ef9738c2629c96873a3241c</anchor>
      <arglist>(const doublereal *b, doublereal *prod) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>leftMult</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>afd4f2d5121df72ea0b10e7aae3ddb622</anchor>
      <arglist>(const doublereal *const b, doublereal *const prod) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>factor</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>a39f67be3c7feeebbc0327db429f6ec8f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>factorQR</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>a81db57f6f1016cf29600569e0043c00d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>rcondQR</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>a43a5e3ef84911276200615a6239eac9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual doublereal</type>
      <name>rcond</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>a25b48ec089ba4c9e5c6f0438a520ce1d</anchor>
      <arglist>(doublereal a1norm)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>useFactorAlgorithm</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>ae3b4f049253093c36b74fe8d7166ecd3</anchor>
      <arglist>(int fAlgorithm)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>factorAlgorithm</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>a8d0eb4006117833b938310862aac3fb7</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual doublereal</type>
      <name>oneNorm</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>a96885af739233744f8fe1545d6b2aaf4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>nRows</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>ab6bf3d7e7e05dda9a29fd61994712717</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearFactorFlag</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>a43deefd36585d28649f065c058355d4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>solve</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>a732f1f7fc3da4f68f5fe687a2844ff14</anchor>
      <arglist>(doublereal *b, size_t nrhs=1, size_t ldb=0)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>factored</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>afc97a755b833332e0c8867bb7c7f0182</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual doublereal *</type>
      <name>ptrColumn</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>a3730c98ca1c4b0a7433f8a32c11028fb</anchor>
      <arglist>(size_t j)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual doublereal &amp;</type>
      <name>operator()</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>ae58be4c2679cecc22e59af4f199fc5bd</anchor>
      <arglist>(size_t i, size_t j)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual doublereal</type>
      <name>operator()</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>ad7dbb629965713541f9abb17bd6f449a</anchor>
      <arglist>(size_t i, size_t j) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual vector_fp::iterator</type>
      <name>begin</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>a83bae2c83598316d140e1f84c243ef13</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual vector_fp::const_iterator</type>
      <name>begin</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>a30c66d56f14a4d6174074d91e2a4102a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual doublereal *const  *</type>
      <name>colPts</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>adf8b3a593751faf5aaa0f35d46f7be11</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>checkRows</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>ad6caa0f851ac7317b12c3f5d3bc25c07</anchor>
      <arglist>(doublereal &amp;valueSmall) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>checkColumns</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>abbb40c674b3d03d31383f30e23813f31</anchor>
      <arglist>(doublereal &amp;valueSmall) const =0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_factored</name>
      <anchorfile>classCantera_1_1GeneralMatrix.html</anchorfile>
      <anchor>ae15e2697ab2c1ea64fb492f8a14ab080</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::GibbsExcessVPSSTP</name>
    <filename>classCantera_1_1GibbsExcessVPSSTP.html</filename>
    <base>Cantera::VPStandardStateTP</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>logStandardConc</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>a478bb3efbdc8679b9c922d022c317b0d</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivities</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>aeb478e46bb453a06465f89e93bc07531</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>a20b3c290780f2f094b028e19b63b8e6e</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdT</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>adb5878df004bf1c16a3b296e81002933</anchor>
      <arglist>(doublereal *dlnActCoeffdT) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>a1a168c02a8113ecd5a51d3f0a2b66c0d</anchor>
      <arglist>(const size_t ld, doublereal *const dlnActCoeffdlnN)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnX</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>a152c63b6c8a8c48856b9f9ed059efde8</anchor>
      <arglist>(doublereal *dlnActCoeffdlnX) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>calcDensity</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>afac1b45437d49cc161e7ca2d5c00906a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>calcDensity</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>afac1b45437d49cc161e7ca2d5c00906a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>logStandardConc</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>a478bb3efbdc8679b9c922d022c317b0d</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivities</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>aeb478e46bb453a06465f89e93bc07531</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>a20b3c290780f2f094b028e19b63b8e6e</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdT</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>adb5878df004bf1c16a3b296e81002933</anchor>
      <arglist>(doublereal *dlnActCoeffdT) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>a1a168c02a8113ecd5a51d3f0a2b66c0d</anchor>
      <arglist>(const size_t ld, doublereal *const dlnActCoeffdlnN)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnX</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>a152c63b6c8a8c48856b9f9ed059efde8</anchor>
      <arglist>(doublereal *dlnActCoeffdlnX) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>moleFractions_</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>ab89db7a7582fe8ccceeb7dbd1e68475f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>lnActCoeff_Scaled_</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>a6e2300fc65c0dea315baef5fc5c8e93a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>dlnActCoeffdT_Scaled_</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>af824dee1cb7462a4ae19f05219858849</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>d2lnActCoeffdT2_Scaled_</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>a9fd84a83a65a08b1a51ccfb8a7a6e041</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>dlnActCoeffdlnN_diag_</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>ac310cbab5790ce22113e0c0d461dccad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>dlnActCoeffdlnX_diag_</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>a662f7435667cca85445f93b9acd92390</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Array2D</type>
      <name>dlnActCoeffdlnN_</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>a1a29919ad2caac88f25773303cfea39f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>compositionChanged</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>ac901f42e1d2a9513f06eacccf09e11a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>checkMFSum</name>
      <anchorfile>classCantera_1_1GibbsExcessVPSSTP.html</anchorfile>
      <anchor>af3a2826ea722f45e6a8ffee39f7ff75b</anchor>
      <arglist>(const doublereal *const x) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Group</name>
    <filename>classCantera_1_1Group.html</filename>
    <member kind="function">
      <type>void</type>
      <name>operator-=</name>
      <anchorfile>classCantera_1_1Group.html</anchorfile>
      <anchor>abaa6e5bd223525b26eeb69fba3a0d9ec</anchor>
      <arglist>(const Group &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classCantera_1_1Group.html</anchorfile>
      <anchor>a41d45236c37b75848f4b1667a11fb50e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>classCantera_1_1Group.html</anchorfile>
      <anchor>a315419f26d3c59fa143b49b90a019049</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nAtoms</name>
      <anchorfile>classCantera_1_1Group.html</anchorfile>
      <anchor>a952c6ed88a3e70c11f66a81f974ec351</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nAtoms</name>
      <anchorfile>classCantera_1_1Group.html</anchorfile>
      <anchor>acf6cfe6c6b693fbf127a41e1e728e00b</anchor>
      <arglist>(size_t m) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::HighPressureGasTransport</name>
    <filename>classCantera_1_1HighPressureGasTransport.html</filename>
    <base>Cantera::MultiTransport</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>transportType</name>
      <anchorfile>classCantera_1_1HighPressureGasTransport.html</anchorfile>
      <anchor>aaa616493275cb1d7fb3ba980ec3cd467</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getThermalDiffCoeffs</name>
      <anchorfile>classCantera_1_1HighPressureGasTransport.html</anchorfile>
      <anchor>a0242eeac6a86b61e2d2d613ad7a4fb0d</anchor>
      <arglist>(doublereal *const dt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>thermalConductivity</name>
      <anchorfile>classCantera_1_1HighPressureGasTransport.html</anchorfile>
      <anchor>ab60feb8706d6c36f556985eaf9447052</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getBinaryDiffCoeffs</name>
      <anchorfile>classCantera_1_1HighPressureGasTransport.html</anchorfile>
      <anchor>a450f94e1a146e7bb44e24d153678609b</anchor>
      <arglist>(const size_t ld, doublereal *const d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMultiDiffCoeffs</name>
      <anchorfile>classCantera_1_1HighPressureGasTransport.html</anchorfile>
      <anchor>a2d2a4efadfdf1d2489f992e92589fc8c</anchor>
      <arglist>(const size_t ld, doublereal *const d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>viscosity</name>
      <anchorfile>classCantera_1_1HighPressureGasTransport.html</anchorfile>
      <anchor>ad8dadb8c432b45ddc85f81e5a863cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>HighPressureGasTransport</name>
      <anchorfile>classCantera_1_1HighPressureGasTransport.html</anchorfile>
      <anchor>ad9ff522a55fd5353eadd809ade3989c5</anchor>
      <arglist>(thermo_t *thermo=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::HMWSoln</name>
    <filename>classCantera_1_1HMWSoln.html</filename>
    <base>Cantera::MolalityVPSSTP</base>
    <member kind="function">
      <type></type>
      <name>HMWSoln</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a7629f8dd872001481b0d46842a147b76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HMWSoln</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a5ec842d7548895893d7a4e41be762da5</anchor>
      <arglist>(const std::string &amp;inputFile, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HMWSoln</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a4b75cbabb5727a2f28aa5bfa18c8134d</anchor>
      <arglist>(XML_Node &amp;phaseRef, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>satPressure</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ae3fc47f48b0df5655050c8b662a94646</anchor>
      <arglist>(doublereal T)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setA_Debye</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a7c384353ca238db0c9c64b0dc3d4b290</anchor>
      <arglist>(double A)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>A_Debye_TP</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>af9c7a3a39fc1b40ab8d5ccbddcfafe55</anchor>
      <arglist>(double temperature=-1.0, double pressure=-1.0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>dA_DebyedT_TP</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>abb0fd35fea263954733422c3f7d800c0</anchor>
      <arglist>(double temperature=-1.0, double pressure=-1.0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>dA_DebyedP_TP</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>afa5cc41b9fa54f49ce2193aa8251cfc3</anchor>
      <arglist>(double temperature=-1.0, double pressure=-1.0) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ADebye_L</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a96ee5e6054dd28c531da5b479e4b721d</anchor>
      <arglist>(double temperature=-1.0, double pressure=-1.0) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ADebye_J</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>af1bdfac58c9941e25511532ad11b39c9</anchor>
      <arglist>(double temperature=-1.0, double pressure=-1.0) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ADebye_V</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a62ac8be7d3c5510dffbc690140832cb8</anchor>
      <arglist>(double temperature=-1.0, double pressure=-1.0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>d2A_DebyedT2_TP</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a164b227111b2087164344d179169ff3e</anchor>
      <arglist>(double temperature=-1.0, double pressure=-1.0) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printCoeffs</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a548634d08debf68945b22160f27cc551</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getUnscaledMolalityActivityCoefficients</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a32bd1bca16dd9dc624db6dfd51138642</anchor>
      <arglist>(doublereal *acMolality) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>relative_enthalpy</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>abbdf70c3bfc8c1ccadcc08b0b32ae55c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>relative_molal_enthalpy</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>aa97b823fdf7d239a86a79c258824baa8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>aaf04e92fc17efaa2c07df42c06c0d563</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivities</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>aeb478e46bb453a06465f89e93bc07531</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>m_form_A_Debye</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a3224c65548a2445ad0972f09ec459ebe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_updateScaling_pHScaling</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>af72ad42b16890afa14f660e39718b49c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_updateScaling_pHScaling_dT</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a1eabfaceeaa886249e4b02e7c4b5fdf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_updateScaling_pHScaling_dT2</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>af22f97475238ffa5658e49d7f3e0f82b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_updateScaling_pHScaling_dP</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a5389f80ba5ee1de198866b00df735109</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>doublereal</type>
      <name>s_NBS_CLM_lnMolalityActCoeff</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>af3eeaee3e49edeb71c9cd3410d09df26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>doublereal</type>
      <name>s_NBS_CLM_dlnMolalityActCoeff_dT</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a4e34829fb0dc0af9889dd97e6a273b9a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>doublereal</type>
      <name>s_NBS_CLM_d2lnMolalityActCoeff_dT2</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a87c43e509a5cc87a9131acb0b4463f0c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>doublereal</type>
      <name>s_NBS_CLM_dlnMolalityActCoeff_dP</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a3c6c5dacde08249e8e96e13185f3b8ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>initLengths</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>acbd8d9f6e3bcaf6f2115a657e7ce12cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>applyphScale</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a0ecf2139ec8e0c61bdcb8b16e12e6e99</anchor>
      <arglist>(doublereal *acMolality) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnMolalityActCoeff_dT</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a5da64b7bff68193ba206ce048cfbc082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_d2lnMolalityActCoeff_dT2</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a2cfd4818927a81e20c9b5300d37f3bfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnMolalityActCoeff_dP</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ad7a98ee31b98efa3ded472247eaabdfd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_updateIMS_lnMolalityActCoeff</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ae990f6515a6e429cdc2a40990867f00d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_updatePitzer_lnMolalityActCoeff</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ab624d8c1466c71c0a6aff4b3e1fafa87</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_updatePitzer_dlnMolalityActCoeff_dT</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ab57b37cb03556d626db0561f917ae384</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_updatePitzer_d2lnMolalityActCoeff_dT2</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ac6731594936d897b4025ce2b816c72ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_updatePitzer_dlnMolalityActCoeff_dP</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a8aec587d08c2e6141bbe2135a7f6e477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_updatePitzer_CoeffWRTemp</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a853fc7f2bbecfe02cb74750d9cadfe4f</anchor>
      <arglist>(int doDerivs=2) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>calc_lambdas</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>aa275ae7f1232f2ea451bb1aee241d03a</anchor>
      <arglist>(double is) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>calc_thetas</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a92e9441720d232002ee42d3d1f384383</anchor>
      <arglist>(int z1, int z2, double *etheta, double *etheta_prime) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>counterIJ_setup</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a6c068b30abe6de10eed5ec3228c18a25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>calcMolalitiesCropped</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>aea6fa5a82c7cc3ad94f3b0d8eae87360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>readXMLBinarySalt</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ae3f3ac9e02d05b8b1d1b7d0c7333c0ee</anchor>
      <arglist>(XML_Node &amp;BinSalt)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>readXMLTheta</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ac7096ad6758c23f53e5bd91bc5a1c1a6</anchor>
      <arglist>(XML_Node &amp;BinSalt)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>readXMLPsi</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a7a1fb80623849f25e59e583a7f03f240</anchor>
      <arglist>(XML_Node &amp;BinSalt)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>readXMLLambdaNeutral</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a15225d6b49bf47dd7b04b1604a3b4e5c</anchor>
      <arglist>(XML_Node &amp;BinSalt)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>readXMLMunnnNeutral</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ab7f7a80ae8fb2a015499a268106a35d1</anchor>
      <arglist>(XML_Node &amp;BinSalt)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>readXMLZetaCation</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a764324eafa410429a8b425889aac3deb</anchor>
      <arglist>(const XML_Node &amp;BinSalt)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>calcIMSCutoffParams_</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a02f5c10aba895e7d28929177a7e57b1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>calcMCCutoffParams_</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a2614ea511a35a8e8433226de9c03055c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_formPitzerTemp</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a7e8ad5811bd75ba2ca62c5eb4bdffd4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>m_IionicMolality</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a20a30b0b2b8ace17725760555a455c0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>m_maxIionicStrength</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>aac66ccbb8197621d53beb2e739f58479</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>m_TempPitzerRef</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>adb110fffee3ae865842ca49369326f10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>m_A_Debye</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a141c33b8b9d1e38b01ce2f7f6bfeb3e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PDSS *</type>
      <name>m_waterSS</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a9f60b7c0a0b0646c9ca0aa575efcaf20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unique_ptr&lt; WaterProps &gt;</type>
      <name>m_waterProps</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ae6148f027114f2615ba7e9806b03f66c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_tmpV</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>aeeda95f871688922796bc3c0e6ecb444</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Beta0MX_ij</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>acc43ea98af7b8a5fc3399e9008cd8efa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Beta0MX_ij_L</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a6636a7fa34a081f83457424a07e99a59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Beta0MX_ij_LL</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ad3d535ed29d7791c0d91a2c64d6c3d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Beta0MX_ij_P</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a1c45b91565ad6f740ea0a7951caab713</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array2D</type>
      <name>m_Beta0MX_ij_coeff</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a0ed4e2441b252489e5e3705dbad1dbe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Beta1MX_ij</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a3e4b77de0abcf7bf8b353cf1d8960686</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Beta1MX_ij_L</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ae3c9da54a65e7c6cfded79584a63e234</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Beta1MX_ij_LL</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a72d81d7ce819c4750458cb69c3250efa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Beta1MX_ij_P</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ac159b0ce95e6936c476dce1aad8444ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array2D</type>
      <name>m_Beta1MX_ij_coeff</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>af2c5bc1a83ee1aa89cb7b8430a17c00f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Beta2MX_ij</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a8daad4714ac885c7e5fc916e7fade8bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Beta2MX_ij_L</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a789f6c0deda8cfbfeb2ed327f06de972</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Beta2MX_ij_LL</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a9409b76c4885542aab5b7a313a13da1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Beta2MX_ij_P</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a8c13217a3fd829d33a6f9ba09043b3ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array2D</type>
      <name>m_Beta2MX_ij_coeff</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a275d4754bb4a8291b4876b71c1769add</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Alpha2MX_ij</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a47dd8d03b5f4d6b64a3a0ba2276f60e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_CphiMX_ij</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a5e8ecacb4cf4e38cb34992e574d61a0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_CphiMX_ij_L</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a5f6ba82ca40a305a84aa60e7e27738f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_CphiMX_ij_LL</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a77432080c359409de41058992cdcac22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_CphiMX_ij_P</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>aeb73d083b27a8583868ce34b79f070ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array2D</type>
      <name>m_CphiMX_ij_coeff</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>af9253f03857f347acc1405683e3b29ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Theta_ij</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>acb8315b7f00c891aa589b79a8ee9de41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Theta_ij_L</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a117034067bacc57d8dc16abc9fda4228</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Theta_ij_LL</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>aabe74b7e63a343164495d7fdfb15ed80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Theta_ij_P</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a714ce4dc4af2e093f2ee2b6516536ab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array2D</type>
      <name>m_Theta_ij_coeff</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a045e8fe79bc43153a66ce4146b0a2952</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Psi_ijk</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ab7b3fdcfbeae61cd1707d9d90e664ac8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Psi_ijk_L</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a37a8d5ff1b066331476992bbb668b8e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Psi_ijk_LL</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a861e7aa4e518be3e76fe696f4dafab48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Psi_ijk_P</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a4990bcba6fd6fc6c4bb9eedd4b9c8c8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array2D</type>
      <name>m_Psi_ijk_coeff</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a74bea6fb85a392a870347aad25f96297</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array2D</type>
      <name>m_Lambda_nj</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a8d5f879f23a8167d478582f641e4c62c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array2D</type>
      <name>m_Lambda_nj_L</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a42c824e1cb4ce850f001273d179bede6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array2D</type>
      <name>m_Lambda_nj_LL</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ac290fd4034c5e5448982e0a67feb3d12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array2D</type>
      <name>m_Lambda_nj_P</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a1d159603adf980b2bb0d0f4c61d0aa8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array2D</type>
      <name>m_Lambda_nj_coeff</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ac998af805b87caf87c515c4034449da1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Mu_nnn</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a73438923cf000715ae1f85660a9f742a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Mu_nnn_L</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ac1e37dbad43677704ff0de0c67509801</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Mu_nnn_LL</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a80078cf559c08d8c45e3cb60a23a35b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Mu_nnn_P</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a99c8c2c46f854b400d6d700769cc8728</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array2D</type>
      <name>m_Mu_nnn_coeff</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a945f0ed240e88b3403f571aa244a6694</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_lnActCoeffMolal_Scaled</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>afbca9456c01a28b742608f9a95ddce3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_lnActCoeffMolal_Unscaled</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a42b3e2e293a524e589f3fd408c5cf3f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_dlnActCoeffMolaldT_Scaled</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a2684ee3c745cc3d26283c68181f9012e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_dlnActCoeffMolaldT_Unscaled</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a4bc9daf3d9d6cf9c3add2305172f4c8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_d2lnActCoeffMolaldT2_Scaled</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a73b7437645abc6daab1c62079ff34840</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_d2lnActCoeffMolaldT2_Unscaled</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a9409c6cfb50fb79678719ad20082ed55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_dlnActCoeffMolaldP_Scaled</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>afb173cc47d0855cac4ed4a78132332b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_dlnActCoeffMolaldP_Unscaled</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>aaf96188a50c7a9136ed1dad843334f8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_molalitiesCropped</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a85dd60c19d4b971ffe9da401bf8e824f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_molalitiesAreCropped</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>afc1e6bc9962bc59b3998976d6b1849fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_int</type>
      <name>m_CounterIJ</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>afb61b83499b357e1608fedce91d2caa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>elambda</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ae4b9cd86c3fb40cf00970b3d9eb677d7</anchor>
      <arglist>[17]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>elambda1</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>aa3b9da1eecb57f9106aae5f74315b793</anchor>
      <arglist>[17]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_gfunc_IJ</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ad41fffee7dfaa403d2a47ff7e4a074c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_g2func_IJ</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>af9b0c0bbb847fd6e6169df6e5a804e67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_hfunc_IJ</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a712afbcd4ee676aaa1f6cae4325303ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_h2func_IJ</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a47113a4ba70b17858d15a4e025ca400e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_BMX_IJ</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ace05af3ba2e997b055011b069bdac6be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_BMX_IJ_L</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a13044ea09758b09ad4b038e42ee0e50c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_BMX_IJ_LL</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a82a8bfb6a44e86e1cd20162e79dce1b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_BMX_IJ_P</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a14009906e07736443e34f7d2d7bd06d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_BprimeMX_IJ</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ae6f186793585f28e17a9a164ae3a4d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_BprimeMX_IJ_L</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a8f678e6762ab139f0dca81d8b6703cf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_BprimeMX_IJ_LL</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ab41de37b3304278478f3e77bb406f941</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_BprimeMX_IJ_P</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a451188c631f7978ee24c7e0cc7f6e945</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_BphiMX_IJ</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a58441e5acd2ba6cefd30f02233788ea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_BphiMX_IJ_L</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>aaea46706708ec3697816408098f80140</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_BphiMX_IJ_LL</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a292fbbd0d775a8518acbb9cfcbc2b87c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_BphiMX_IJ_P</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a064f36e557b658e5b644aa2484d22187</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Phi_IJ</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a8d66827492c349f0feb996f5f52ce9cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Phi_IJ_L</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>aabd861bff4f305de45d19f775e2b32ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Phi_IJ_LL</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a184d68ac982763d7010192021522ee6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Phi_IJ_P</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a6b07340ba5d46dd42320d727fabc5ee5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Phiprime_IJ</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a3c45bcc12aea91162339a7e58eae25cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_PhiPhi_IJ</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a0f24041554f5e4e0fbcbc2b3e119ae48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_PhiPhi_IJ_L</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a21a9c6e430933c018349ca3d7ba9021c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_PhiPhi_IJ_LL</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a51f9687d01facfe2370881d0d280f1cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_PhiPhi_IJ_P</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a903fb0e9a7bf67bcc96edd928f5a52da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_CMX_IJ</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a9ce0b6a9ef689ef3b537656d8da13cf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_CMX_IJ_L</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a52a3326d4ef83ec077045d6c1ef513a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_CMX_IJ_LL</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ab6267e9a4fad988aac967756e3ffa0c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_CMX_IJ_P</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a00c2ae474e55f5121ea772bfb3844364</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_gamma_tmp</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ab740011d91b3ca38117bb7b6ea805437</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>IMS_lnActCoeffMolal_</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ab5572e769ee5bc5fbf80a42a1de79968</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>IMS_X_o_cutoff_</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a498a312fe0d1aa127fd7110e2d6d072f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>IMS_cCut_</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a2d4c9b2754e10a8847cd5b17c2c87aa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>IMS_slopegCut_</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a31de059e520f6097146963f8248c1cb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>MC_X_o_cutoff_</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a0a793ef282c8056dda5a495f56707595</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_int</type>
      <name>CROP_speciesCropped_</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a34f7f149a5db2156bf0c0556bc0a135f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>relative_enthalpy</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>abbdf70c3bfc8c1ccadcc08b0b32ae55c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>relative_molal_enthalpy</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>aa97b823fdf7d239a86a79c258824baa8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>aaf04e92fc17efaa2c07df42c06c0d563</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDensity</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a7eb43922f97cdfb4e0df8e9710353770</anchor>
      <arglist>(const doublereal rho)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMolarDensity</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a75643547a93f48096438a1ea8ac9e74e</anchor>
      <arglist>(const doublereal conc)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>calcDensity</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>afac1b45437d49cc161e7ca2d5c00906a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivities</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>aeb478e46bb453a06465f89e93bc07531</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_int</type>
      <name>CROP_speciesCropped_</name>
      <anchorfile>classCantera_1_1HMWSoln.html</anchorfile>
      <anchor>a34f7f149a5db2156bf0c0556bc0a135f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::IDA_Solver</name>
    <filename>classCantera_1_1IDA__Solver.html</filename>
    <base>Cantera::DAE_Solver</base>
    <member kind="function">
      <type></type>
      <name>IDA_Solver</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a52d2ddc9b57ad70dade3cb5a71c93563</anchor>
      <arglist>(ResidJacEval &amp;f)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTolerances</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a79fbcf551ae596c7b5a45aef60e577bf</anchor>
      <arglist>(doublereal reltol, doublereal *abstol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTolerances</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>aa9ac81a99b469d52cb7c212e2cb519b5</anchor>
      <arglist>(doublereal reltol, doublereal abstol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDenseLinearSolver</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a6716399c37159b9e23b9a3279745c078</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setBandedLinearSolver</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a146e8dcadf81636c6d9b9884b48e971e</anchor>
      <arglist>(int m_upper, int m_lower)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaxNumSteps</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a0e5592acb8bc1edb3791832552e5feb9</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setInitialStepSize</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a347c380760de98e227feac07405b4059</anchor>
      <arglist>(doublereal h0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStopTime</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a03b141a1a21a78442abe48db2c3eed66</anchor>
      <arglist>(doublereal tstop)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getCurrentStepFromIDA</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>adecd5223683e629cf89f06f990620a40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setJacobianType</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a2e0ffbf9964d1db977b6c73d5c3dd78f</anchor>
      <arglist>(int formJac)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaxNonlinIterations</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a8346ff65e1d44f732bb6e3ed2bf3cdf9</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaxNonlinConvFailures</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>adc76b7a22b880d5877b7a227b47fbae3</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>getOutputParameter</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a9bcfa9126f11da6ede3b0400bc731c73</anchor>
      <arglist>(int flag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>correctInitial_Y_given_Yp</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a0bd9eb985892d1f223e69ad1a56fdb66</anchor>
      <arglist>(doublereal *y, doublereal *yp, doublereal tout)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>correctInitial_YaYp_given_Yd</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a2e3114aff141233301a6b90f03c25c01</anchor>
      <arglist>(doublereal *y, doublereal *yp, doublereal tout)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solve</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a37f2db2dc7da298a81633a1de11e25e2</anchor>
      <arglist>(doublereal tout)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>step</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a00231900d05e8854c76b50b37a4ca8bd</anchor>
      <arglist>(doublereal tout)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>aa9e152d2310b45d8adfbbda239732ae3</anchor>
      <arglist>(doublereal t0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>solution</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a18c4c93908ca1af90f019c2a7f184350</anchor>
      <arglist>(int k) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>derivative</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>ae2c7e0067c86f4ea78d77df79a7d9d44</anchor>
      <arglist>(int k) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>void *</type>
      <name>m_ida_mem</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>afb1d71021fa538fb49583445d7b81d26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>void *</type>
      <name>m_linsol</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a30a55de05660ccb755510cdfaedf21a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>void *</type>
      <name>m_linsol_matrix</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>ae7a872920212f9d841e95d6f26f2f56b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_t0</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>aed25322525aa3a2c5447526ce80fa55a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>N_Vector</type>
      <name>m_y</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a20d90060c20fd256083c9fba901ba71e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>N_Vector</type>
      <name>m_ydot</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>ae9e5e5ec5d286ef48e9a1b7b8ed52551</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_hmax</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>acc3b4951516f2b4b51f5d0abeef2c0b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_hmin</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>ac0460a5f08e425a6770969f7b9f08a22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_h0</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>ae72d66ec8484651c59316551f6e5d9d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_maxsteps</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>af22f7a8ad29583a4658bb0961929f212</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_maxord</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a9192655fd7176453147ff59cfcce21b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_formJac</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>ab713c0842ff8f23913a289bb7913c525</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_tstop</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>af33324d05c8988102f05f53476d2116c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_told_old</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>ace3593ca8170bc4b8e074ebf03095e68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_told</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a53c0d4f5be031ebd7c364c685c38f601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_tcurrent</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a85979e1e9273ee654da9be1130f24461</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_deltat</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a6dd579c684702c3af822823c33d36f5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_maxErrTestFails</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a6e33b332df55a047dcfb27f7ad7efc7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_maxNonlinIters</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a44649ec0c6edfc9f80d6bdbaf6cf6810</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_maxNonlinConvFails</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>a32af93690d1ca7431f657a422d48346a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_setSuppressAlg</name>
      <anchorfile>classCantera_1_1IDA__Solver.html</anchorfile>
      <anchor>af51fb9f37c6529dc5563f7c53f6e2a3c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::IdealGasConstPressureReactor</name>
    <filename>classCantera_1_1IdealGasConstPressureReactor.html</filename>
    <base>Cantera::ConstPressureReactor</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>type</name>
      <anchorfile>classCantera_1_1IdealGasConstPressureReactor.html</anchorfile>
      <anchor>a67b824a3d6f5f8dc7b9f435353c62676</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThermoMgr</name>
      <anchorfile>classCantera_1_1IdealGasConstPressureReactor.html</anchorfile>
      <anchor>ac1eadd4fed4f49eae8968359a521a3e3</anchor>
      <arglist>(ThermoPhase &amp;thermo)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getState</name>
      <anchorfile>classCantera_1_1IdealGasConstPressureReactor.html</anchorfile>
      <anchor>a62334bd67a22db256d39b9e673e6a7d3</anchor>
      <arglist>(doublereal *y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classCantera_1_1IdealGasConstPressureReactor.html</anchorfile>
      <anchor>ab2df902e719cd522b0df4d234b016c26</anchor>
      <arglist>(doublereal t0=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evalEqs</name>
      <anchorfile>classCantera_1_1IdealGasConstPressureReactor.html</anchorfile>
      <anchor>ab56bbca2717dd3f4851029f65728f745</anchor>
      <arglist>(doublereal t, doublereal *y, doublereal *ydot, doublereal *params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateState</name>
      <anchorfile>classCantera_1_1IdealGasConstPressureReactor.html</anchorfile>
      <anchor>a0ff521286d89a1422948c0497385cb28</anchor>
      <arglist>(doublereal *y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>componentIndex</name>
      <anchorfile>classCantera_1_1IdealGasConstPressureReactor.html</anchorfile>
      <anchor>a00653754ecb40ea0445540af4d9cf353</anchor>
      <arglist>(const std::string &amp;nm) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>componentName</name>
      <anchorfile>classCantera_1_1IdealGasConstPressureReactor.html</anchorfile>
      <anchor>a88152e299410846a224a41e71e2f1151</anchor>
      <arglist>(size_t k)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_hk</name>
      <anchorfile>classCantera_1_1IdealGasConstPressureReactor.html</anchorfile>
      <anchor>af74587a1db889375bb863f540824a12e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::IdealGasMix</name>
    <filename>classCantera_1_1IdealGasMix.html</filename>
    <base>Cantera::IdealGasPhase</base>
    <base>Cantera::GasKinetics</base>
    <member kind="function">
      <type>bool</type>
      <name>ready</name>
      <anchorfile>classCantera_1_1IdealGasMix.html</anchorfile>
      <anchor>ae0659ce466366fc566dc1425c658a019</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::IdealGasPhase</name>
    <filename>classCantera_1_1IdealGasPhase.html</filename>
    <base>Cantera::ThermoPhase</base>
    <member kind="function">
      <type></type>
      <name>IdealGasPhase</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a997186fc1b06eb02815fcf942d0c886e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IdealGasPhase</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>af91ac027acbbeeaa73388800ccdacf5b</anchor>
      <arglist>(const std::string &amp;inputFile, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IdealGasPhase</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a93a44200578bc37e519aee1895429759</anchor>
      <arglist>(XML_Node &amp;phaseRef, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setToEquilState</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a02da43a545df400427d067e2b07b8a08</anchor>
      <arglist>(const doublereal *lambda_RT)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>ad1f748debfb3ad9694cbe10567607041</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>ab3949a6b2b2cb9e039ff336f7d08cb98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>af51924111b2d115777e94fc71bcc86dd</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_RP</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>aacc071b92537ab52a0fbd3d4cb7aaa6e</anchor>
      <arglist>(doublereal rho, doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>isothermalCompressibility</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a27c5e3d9b78a7fdc117ec185415ca5dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalExpansionCoeff</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>ad287adaf5f93ebe3278fe62f69efbd01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a83539a75df88ff87f95ca3a60a830dc8</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a20b3c290780f2f094b028e19b63b8e6e</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarIntEnergies</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a36c63d1f3f4faa1f29300b30358536e5</anchor>
      <arglist>(doublereal *ubar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>ac2dc95575420c5c767a7fe4e6161e892</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a2ee9dfc481fbf2c9e915c1e15794d238</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPureGibbs</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>aeb7a9744545e2854ced11ea7634dfe49</anchor>
      <arglist>(doublereal *gpure) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>aadbf5eb5c20c2db5ea363947e883b6be</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a6736e153cc33a62e77d8b5bc594cb7c3</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a4eedbc0d1542fc11b951588856220254</anchor>
      <arglist>(doublereal *vol) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>af9328613fd7ac31d213f4fd284d8ad63</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT_ref</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a15142ba0b60259900efafd8026b51c96</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_ref</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>ae4ec4c8979d7a4b5deb6faf52697a068</anchor>
      <arglist>(doublereal *g) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R_ref</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a9d67a94aa582d60860f4658ea11e1aa3</anchor>
      <arglist>(doublereal *er) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT_ref</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>aa84157ca9a671bea6e55ad961fb3156d</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R_ref</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>ab511be0c8fe8538e41b1b74d5bc4f7df</anchor>
      <arglist>(doublereal *cprt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes_ref</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>ac3f1e890abfc6656dc6d0534f7516453</anchor>
      <arglist>(doublereal *vol) const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>enthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a3bb0443d53fddb494b03a0d319317896</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>gibbs_RT_ref</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a5adc65935f329c0188fe04c6e0dba10a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>entropy_R_ref</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a83c463455d2b30e504f411e11c39a1f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>cp_R_ref</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>ae3cb2170a29c2a22ed29c98ad7bd1ec0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_p0</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>abdd15cd78af8bfd2a1ae1424e1010af9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_h0_RT</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a3c5e8d8c0d3a1e74b657da7f4e9014bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_cp0_R</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a0f99f8895cc2109fd4dcebb729d615fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_g0_RT</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a0b34289ccbc27c3af431627fd7a3a4fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_s0_R</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a56e8ca74ece671716ff2cb73967e1576</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_pp</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a4c2fe18cac13b980b541398c872e4849</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>_updateThermo</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>adc787a3ca8a5489e2763cc7e712685bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>ad1f748debfb3ad9694cbe10567607041</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>ab3949a6b2b2cb9e039ff336f7d08cb98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>af51924111b2d115777e94fc71bcc86dd</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_RP</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>aacc071b92537ab52a0fbd3d4cb7aaa6e</anchor>
      <arglist>(doublereal rho, doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>isothermalCompressibility</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a27c5e3d9b78a7fdc117ec185415ca5dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalExpansionCoeff</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>ad287adaf5f93ebe3278fe62f69efbd01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a83539a75df88ff87f95ca3a60a830dc8</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a20b3c290780f2f094b028e19b63b8e6e</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarIntEnergies</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a36c63d1f3f4faa1f29300b30358536e5</anchor>
      <arglist>(doublereal *ubar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>ac2dc95575420c5c767a7fe4e6161e892</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a2ee9dfc481fbf2c9e915c1e15794d238</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPureGibbs</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>aeb7a9744545e2854ced11ea7634dfe49</anchor>
      <arglist>(doublereal *gpure) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>aadbf5eb5c20c2db5ea363947e883b6be</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a6736e153cc33a62e77d8b5bc594cb7c3</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a4eedbc0d1542fc11b951588856220254</anchor>
      <arglist>(doublereal *vol) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>af9328613fd7ac31d213f4fd284d8ad63</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT_ref</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a15142ba0b60259900efafd8026b51c96</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_ref</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>ae4ec4c8979d7a4b5deb6faf52697a068</anchor>
      <arglist>(doublereal *g) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R_ref</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a9d67a94aa582d60860f4658ea11e1aa3</anchor>
      <arglist>(doublereal *er) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT_ref</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>aa84157ca9a671bea6e55ad961fb3156d</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R_ref</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>ab511be0c8fe8538e41b1b74d5bc4f7df</anchor>
      <arglist>(doublereal *cprt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes_ref</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>ac3f1e890abfc6656dc6d0534f7516453</anchor>
      <arglist>(doublereal *vol) const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>enthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a3bb0443d53fddb494b03a0d319317896</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>gibbs_RT_ref</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a5adc65935f329c0188fe04c6e0dba10a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>entropy_R_ref</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>a83c463455d2b30e504f411e11c39a1f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>cp_R_ref</name>
      <anchorfile>classCantera_1_1IdealGasPhase.html</anchorfile>
      <anchor>ae3cb2170a29c2a22ed29c98ad7bd1ec0</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::IdealGasReactor</name>
    <filename>classCantera_1_1IdealGasReactor.html</filename>
    <base>Cantera::Reactor</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>type</name>
      <anchorfile>classCantera_1_1IdealGasReactor.html</anchorfile>
      <anchor>a67b824a3d6f5f8dc7b9f435353c62676</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThermoMgr</name>
      <anchorfile>classCantera_1_1IdealGasReactor.html</anchorfile>
      <anchor>ac1eadd4fed4f49eae8968359a521a3e3</anchor>
      <arglist>(ThermoPhase &amp;thermo)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getState</name>
      <anchorfile>classCantera_1_1IdealGasReactor.html</anchorfile>
      <anchor>a62334bd67a22db256d39b9e673e6a7d3</anchor>
      <arglist>(doublereal *y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classCantera_1_1IdealGasReactor.html</anchorfile>
      <anchor>ab2df902e719cd522b0df4d234b016c26</anchor>
      <arglist>(doublereal t0=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evalEqs</name>
      <anchorfile>classCantera_1_1IdealGasReactor.html</anchorfile>
      <anchor>ab56bbca2717dd3f4851029f65728f745</anchor>
      <arglist>(doublereal t, doublereal *y, doublereal *ydot, doublereal *params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateState</name>
      <anchorfile>classCantera_1_1IdealGasReactor.html</anchorfile>
      <anchor>a0ff521286d89a1422948c0497385cb28</anchor>
      <arglist>(doublereal *y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>componentIndex</name>
      <anchorfile>classCantera_1_1IdealGasReactor.html</anchorfile>
      <anchor>a00653754ecb40ea0445540af4d9cf353</anchor>
      <arglist>(const std::string &amp;nm) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>componentName</name>
      <anchorfile>classCantera_1_1IdealGasReactor.html</anchorfile>
      <anchor>a88152e299410846a224a41e71e2f1151</anchor>
      <arglist>(size_t k)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_uk</name>
      <anchorfile>classCantera_1_1IdealGasReactor.html</anchorfile>
      <anchor>af7dd637d7a7279532697899e09d06796</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::IdealMolalSoln</name>
    <filename>classCantera_1_1IdealMolalSoln.html</filename>
    <base>Cantera::MolalityVPSSTP</base>
    <member kind="function">
      <type></type>
      <name>IdealMolalSoln</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a7d10d821b2270dc731eb72c1ca548cff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IdealMolalSoln</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a6c6814b3539019cc21f79aa529b9f372</anchor>
      <arglist>(const std::string &amp;inputFile, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IdealMolalSoln</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>affb44bf35fe55758ba68f7bb4ad183d5</anchor>
      <arglist>(XML_Node &amp;phaseRef, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>ae83c4d4384c39c81c39b4f3d6dd5f841</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStandardConcentrationModel</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>ad03e98d63f9d8d1cea342d0d2308cda9</anchor>
      <arglist>(const std::string &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCutoffModel</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a060c4afbc5f65a1de2bd40d719aea042</anchor>
      <arglist>(const std::string &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>speciesMolarVolume</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a3caa8db1fb5a7cb170db9890c71693e6</anchor>
      <arglist>(int k) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSpeciesMolarVolumes</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a58418f7b0377a80582a3d6d95f51cb9e</anchor>
      <arglist>(double *smv) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>af3b7fb6d3a5817a1fb3edff83294a1d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>aaf04e92fc17efaa2c07df42c06c0d563</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivities</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>aeb478e46bb453a06465f89e93bc07531</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMolalityActivityCoefficients</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a3b087f2354f955fa780995964f973fca</anchor>
      <arglist>(doublereal *acMolality) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="variable">
      <type>doublereal</type>
      <name>IMS_X_o_cutoff_</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a498a312fe0d1aa127fd7110e2d6d072f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>doublereal</type>
      <name>IMS_gamma_o_min_</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a987da666c1e5ba802cfc3cd8b9b5a380</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>doublereal</type>
      <name>IMS_gamma_k_min_</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>ac4af0e5adc5129c5a0ab55f2abb74694</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>doublereal</type>
      <name>IMS_slopefCut_</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a444d29ee20198440bb6be6a7aaa7fb2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>doublereal</type>
      <name>IMS_slopegCut_</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a31de059e520f6097146963f8248c1cb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_speciesMolarVolume</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a7eec4e736ec2b5030428f669f8c62724</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_formGC</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>aa5ee526b8a0ae3ca0d87cb36baf7a8be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>IMS_typeCutoff_</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a37aaf8e7135a606de8e443b2e11d61c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_updateIMS_lnMolalityActCoeff</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>ae990f6515a6e429cdc2a40990867f00d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>calcIMSCutoffParams_</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a02f5c10aba895e7d28929177a7e57b1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_tmpV</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>aeeda95f871688922796bc3c0e6ecb444</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>IMS_lnActCoeffMolal_</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>ab5572e769ee5bc5fbf80a42a1de79968</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>af3b7fb6d3a5817a1fb3edff83294a1d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>aaf04e92fc17efaa2c07df42c06c0d563</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDensity</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a7eb43922f97cdfb4e0df8e9710353770</anchor>
      <arglist>(const doublereal rho)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMolarDensity</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>ae385d2bbefae3c5e03fc3421bb97f635</anchor>
      <arglist>(const doublereal rho)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>isothermalCompressibility</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>afbf834ae5cd73373fa5681bbdc329f1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalExpansionCoeff</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a661ba8332a19cb48e3e03136c1bce6a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>calcDensity</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>afac1b45437d49cc161e7ca2d5c00906a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivities</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>aeb478e46bb453a06465f89e93bc07531</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMolalityActivityCoefficients</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a3b087f2354f955fa780995964f973fca</anchor>
      <arglist>(doublereal *acMolality) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1IdealMolalSoln.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::IdealSolidSolnPhase</name>
    <filename>classCantera_1_1IdealSolidSolnPhase.html</filename>
    <base>Cantera::ThermoPhase</base>
    <member kind="function">
      <type></type>
      <name>IdealSolidSolnPhase</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>aa74884d40c79f3dc810f76d8e17f4010</anchor>
      <arglist>(int formCG=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IdealSolidSolnPhase</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>ac0ffbbc45d097cd4718197a08e7c6a85</anchor>
      <arglist>(const std::string &amp;infile, const std::string &amp;id=&quot;&quot;, int formCG=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IdealSolidSolnPhase</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a67f162e2184914b5e07c82aa4f420d66</anchor>
      <arglist>(XML_Node &amp;root, const std::string &amp;id=&quot;&quot;, int formCG=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>aaf04e92fc17efaa2c07df42c06c0d563</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a7b8866c933747ea9c38fddc95a53eb0a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>ab3949a6b2b2cb9e039ff336f7d08cb98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calcDensity</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>afac1b45437d49cc161e7ca2d5c00906a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDensity</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a7eb43922f97cdfb4e0df8e9710353770</anchor>
      <arglist>(const doublereal rho)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMolarDensity</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>ae385d2bbefae3c5e03fc3421bb97f635</anchor>
      <arglist>(const doublereal rho)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a939fd319d552668a961fc99f15f2eeab</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a20b3c290780f2f094b028e19b63b8e6e</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials_RT</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>acf1ae24d0fbef55963df3598f134d699</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a681f9f13612b09143d548f78a7c5f782</anchor>
      <arglist>(doublereal *mu0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a2ee9dfc481fbf2c9e915c1e15794d238</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPureGibbs</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>aeb7a9744545e2854ced11ea7634dfe49</anchor>
      <arglist>(doublereal *gpure) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>aadbf5eb5c20c2db5ea363947e883b6be</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a6736e153cc33a62e77d8b5bc594cb7c3</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a4eedbc0d1542fc11b951588856220254</anchor>
      <arglist>(doublereal *vol) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>af9328613fd7ac31d213f4fd284d8ad63</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT_ref</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a15142ba0b60259900efafd8026b51c96</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_ref</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>ae4ec4c8979d7a4b5deb6faf52697a068</anchor>
      <arglist>(doublereal *g) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R_ref</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a9d67a94aa582d60860f4658ea11e1aa3</anchor>
      <arglist>(doublereal *er) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT_ref</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>aa84157ca9a671bea6e55ad961fb3156d</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R_ref</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>ab511be0c8fe8538e41b1b74d5bc4f7df</anchor>
      <arglist>(doublereal *cprt) const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>enthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a71a4df968c2fe7162bbde8f43d960740</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>gibbs_RT_ref</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a5adc65935f329c0188fe04c6e0dba10a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>entropy_R_ref</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a866d2b81807e774e86834a326af57e53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>cp_R_ref</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>ae3cb2170a29c2a22ed29c98ad7bd1ec0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>compositionChanged</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>ac901f42e1d2a9513f06eacccf09e11a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_formGC</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>aa5ee526b8a0ae3ca0d87cb36baf7a8be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_Pref</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>ae6416ed4db67e617a45e94e2c4c20dc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_Pcurrent</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>ab231cf2f611695594303229d552c6c27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_speciesMolarVolume</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a7eec4e736ec2b5030428f669f8c62724</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_h0_RT</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a3c5e8d8c0d3a1e74b657da7f4e9014bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_cp0_R</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a0f99f8895cc2109fd4dcebb729d615fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_g0_RT</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a0b34289ccbc27c3af431627fd7a3a4fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_s0_R</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a56e8ca74ece671716ff2cb73967e1576</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_expg0_RT</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a2b5c6650ca0feeb29a0bd4429c2eb221</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_pe</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>ab73bdac199efdf81aea6ee87b75b3032</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_pp</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a4c2fe18cac13b980b541398c872e4849</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>aaf04e92fc17efaa2c07df42c06c0d563</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a7b8866c933747ea9c38fddc95a53eb0a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>ab3949a6b2b2cb9e039ff336f7d08cb98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calcDensity</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>afac1b45437d49cc161e7ca2d5c00906a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDensity</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a7eb43922f97cdfb4e0df8e9710353770</anchor>
      <arglist>(const doublereal rho)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMolarDensity</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>ae385d2bbefae3c5e03fc3421bb97f635</anchor>
      <arglist>(const doublereal rho)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a939fd319d552668a961fc99f15f2eeab</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a20b3c290780f2f094b028e19b63b8e6e</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials_RT</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>acf1ae24d0fbef55963df3598f134d699</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a681f9f13612b09143d548f78a7c5f782</anchor>
      <arglist>(doublereal *mu0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a2ee9dfc481fbf2c9e915c1e15794d238</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPureGibbs</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>aeb7a9744545e2854ced11ea7634dfe49</anchor>
      <arglist>(doublereal *gpure) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>aadbf5eb5c20c2db5ea363947e883b6be</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a6736e153cc33a62e77d8b5bc594cb7c3</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a4eedbc0d1542fc11b951588856220254</anchor>
      <arglist>(doublereal *vol) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>af9328613fd7ac31d213f4fd284d8ad63</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT_ref</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a15142ba0b60259900efafd8026b51c96</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_ref</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>ae4ec4c8979d7a4b5deb6faf52697a068</anchor>
      <arglist>(doublereal *g) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R_ref</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a9d67a94aa582d60860f4658ea11e1aa3</anchor>
      <arglist>(doublereal *er) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT_ref</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>aa84157ca9a671bea6e55ad961fb3156d</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R_ref</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>ab511be0c8fe8538e41b1b74d5bc4f7df</anchor>
      <arglist>(doublereal *cprt) const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>enthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a71a4df968c2fe7162bbde8f43d960740</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>gibbs_RT_ref</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a5adc65935f329c0188fe04c6e0dba10a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>entropy_R_ref</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a866d2b81807e774e86834a326af57e53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>cp_R_ref</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>ae3cb2170a29c2a22ed29c98ad7bd1ec0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setToEquilState</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a02da43a545df400427d067e2b07b8a08</anchor>
      <arglist>(const doublereal *lambda_RT)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStandardConcentrationModel</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>ad03e98d63f9d8d1cea342d0d2308cda9</anchor>
      <arglist>(const std::string &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>speciesMolarVolume</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a3caa8db1fb5a7cb170db9890c71693e6</anchor>
      <arglist>(int k) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSpeciesMolarVolumes</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>a7188e1d1ef2e85735db4bf22231b7f08</anchor>
      <arglist>(doublereal *smv) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>_updateThermo</name>
      <anchorfile>classCantera_1_1IdealSolidSolnPhase.html</anchorfile>
      <anchor>adc787a3ca8a5489e2763cc7e712685bc</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::IdealSolnGasVPSS</name>
    <filename>classCantera_1_1IdealSolnGasVPSS.html</filename>
    <base>Cantera::VPStandardStateTP</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a20b3c290780f2f094b028e19b63b8e6e</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IdealSolnGasVPSS</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a75be30d51fdf839f1d848f6222326803</anchor>
      <arglist>(const std::string &amp;infile, std::string id=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGasMode</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a43d5c00b137baec343d7732959bd0914</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSolnMode</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a8d994878653c709ceb8dcb9c6214a12f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStandardConcentrationModel</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>ad03e98d63f9d8d1cea342d0d2308cda9</anchor>
      <arglist>(const std::string &amp;model)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarIntEnergies</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a36c63d1f3f4faa1f29300b30358536e5</anchor>
      <arglist>(doublereal *ubar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>af85cf0eab4dfda8ff1897ee7e251d5f5</anchor>
      <arglist>(const XML_Node &amp;thermoNode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setToEquilState</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a02da43a545df400427d067e2b07b8a08</anchor>
      <arglist>(const doublereal *lambda_RT)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_idealGas</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>afc18fc799aec977ae9b277f5570c82ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_formGC</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>aa5ee526b8a0ae3ca0d87cb36baf7a8be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_pp</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a4c2fe18cac13b980b541398c872e4849</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IdealSolnGasVPSS</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a75be30d51fdf839f1d848f6222326803</anchor>
      <arglist>(const std::string &amp;infile, std::string id=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGasMode</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a43d5c00b137baec343d7732959bd0914</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSolnMode</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a8d994878653c709ceb8dcb9c6214a12f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStandardConcentrationModel</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>ad03e98d63f9d8d1cea342d0d2308cda9</anchor>
      <arglist>(const std::string &amp;model)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>isothermalCompressibility</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>afbf834ae5cd73373fa5681bbdc329f1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>calcDensity</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>afac1b45437d49cc161e7ca2d5c00906a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarIntEnergies</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a36c63d1f3f4faa1f29300b30358536e5</anchor>
      <arglist>(doublereal *ubar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>af85cf0eab4dfda8ff1897ee7e251d5f5</anchor>
      <arglist>(const XML_Node &amp;thermoNode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setToEquilState</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a02da43a545df400427d067e2b07b8a08</anchor>
      <arglist>(const doublereal *lambda_RT)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1IdealSolnGasVPSS.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ImplicitSurfChem</name>
    <filename>classCantera_1_1ImplicitSurfChem.html</filename>
    <base>Cantera::FuncEval</base>
    <member kind="function">
      <type></type>
      <name>ImplicitSurfChem</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>a2b521d1c9a3a0a82ae3cc45308876080</anchor>
      <arglist>(std::vector&lt; InterfaceKinetics *&gt; k)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>ab2df902e719cd522b0df4d234b016c26</anchor>
      <arglist>(doublereal t0=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>a08afa22084a017264e923fae10065a3e</anchor>
      <arglist>(doublereal t0, doublereal t1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate0</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>a05695b1cebe92f5e838be4d8c592d86e</anchor>
      <arglist>(doublereal t0, doublereal t1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solvePseudoSteadyStateProblem</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>abe8887047d27740e9e2dc8f85863fcc2</anchor>
      <arglist>(int ifuncOverride=-1, doublereal timeScaleOverride=1.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>neq</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>a627b491f11b9ed84f1f7ca7f63d4f536</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>aeb7106d9e7ebea0aeaeada1335835ba2</anchor>
      <arglist>(doublereal t, doublereal *y, doublereal *ydot, doublereal *p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getState</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>a62334bd67a22db256d39b9e673e6a7d3</anchor>
      <arglist>(doublereal *y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getConcSpecies</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>aa8aa95ef05ad989cd5b0fdf8095f86cc</anchor>
      <arglist>(doublereal *const vecConcSpecies) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConcSpecies</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>a3acf525709f36fa0ebc573a2a3acce83</anchor>
      <arglist>(const doublereal *const vecConcSpecies)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommonState_TP</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>ade688892f854ba20de5db2a9430b7574</anchor>
      <arglist>(doublereal TKelvin, doublereal PresPa)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; InterfaceKinetics * &gt; &amp;</type>
      <name>getObjects</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>a6af2d255c89592425d0d3cd83bff2d79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateState</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>a0ff521286d89a1422948c0497385cb28</anchor>
      <arglist>(doublereal *y)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; SurfPhase * &gt;</type>
      <name>m_surf</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>a9478a992b902723e5e543e86cffa816d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; ThermoPhase * &gt;</type>
      <name>m_bulkPhases</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>a16c445ae7a84966a9c25f35a06bc03c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; InterfaceKinetics * &gt;</type>
      <name>m_vecKinPtrs</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>afe16042a20c223cae7554f25b7fea985</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_nsp</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>ad80929e6dee0a9e0f020471c38ea7d6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_surfindex</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>a78b6da57d1b8719c9578318275cf6d0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_nv</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>a5254fe66e91c73ca89c5bcfc261e8297</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; Integrator &gt;</type>
      <name>m_integ</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>af4111ce8bf27b957769b5f4a3b31397b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_maxstep</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>a5355ef6cd918be18187dc92b8f0c6f3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_concSpecies</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>a9bddd8847187199805fac2d11a1b8e62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_mediumSpeciesStart</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>a0d43cf389a67c39723cc3d1d00a2752d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_bulkSpeciesStart</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>a0a42025ab8ca2f08ca352a02b6345a59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_surfSpeciesStart</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>ac0b363086f3ac85063cb869a29d5367e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; solveSP &gt;</type>
      <name>m_surfSolver</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>a7836c5dd938b9a4cd91d8c22bae93031</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_commonTempPressForPhases</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>a7c88733dc591736ce9bd1a421c18a745</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_ioFlag</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>a55d1329ec273e629842c3b0ab067da7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>solveSS</name>
      <anchorfile>classCantera_1_1ImplicitSurfChem.html</anchorfile>
      <anchor>a7e83f14f92d3a99dfb4eb20f0a2bc99e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::IncompressibleSolid</name>
    <filename>classCantera_1_1IncompressibleSolid.html</filename>
    <base>Cantera::ConstDensityThermo</base>
    <member kind="function">
      <type>bool</type>
      <name>ready</name>
      <anchorfile>classCantera_1_1IncompressibleSolid.html</anchorfile>
      <anchor>ae0659ce466366fc566dc1425c658a019</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::IndexError</name>
    <filename>classCantera_1_1IndexError.html</filename>
    <base>Cantera::CanteraError</base>
    <member kind="function">
      <type></type>
      <name>IndexError</name>
      <anchorfile>classCantera_1_1IndexError.html</anchorfile>
      <anchor>ac5635a76eee6e69810c9999853137bff</anchor>
      <arglist>(const std::string &amp;func, const std::string &amp;arrayName, size_t m, size_t mmax)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getMessage</name>
      <anchorfile>classCantera_1_1IndexError.html</anchorfile>
      <anchor>a1c1cc72e6e4257dbd29ff04a23973008</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getClass</name>
      <anchorfile>classCantera_1_1IndexError.html</anchorfile>
      <anchor>a31a0154bd4d18f1bcd78a507b91056be</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Inlet1D</name>
    <filename>classCantera_1_1Inlet1D.html</filename>
    <base>Cantera::Bdry1D</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSpreadRate</name>
      <anchorfile>classCantera_1_1Inlet1D.html</anchorfile>
      <anchor>a0a9c170c5024edc5dd27bbbc0d8cb428</anchor>
      <arglist>(doublereal V0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>spreadRate</name>
      <anchorfile>classCantera_1_1Inlet1D.html</anchorfile>
      <anchor>aff1a8f68c38bbec4e15dff12b03e589f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showSolution</name>
      <anchorfile>classCantera_1_1Inlet1D.html</anchorfile>
      <anchor>abb85ec79a3cff2516ff942471df6e1f0</anchor>
      <arglist>(const double *x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMoleFractions</name>
      <anchorfile>classCantera_1_1Inlet1D.html</anchorfile>
      <anchor>a11b1b6be37418afbebf4942dfca92aeb</anchor>
      <arglist>(const std::string &amp;xin)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMoleFractions</name>
      <anchorfile>classCantera_1_1Inlet1D.html</anchorfile>
      <anchor>ae97aee02d86f1bc2cc4cf21de06e97a8</anchor>
      <arglist>(const doublereal *xin)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>massFraction</name>
      <anchorfile>classCantera_1_1Inlet1D.html</anchorfile>
      <anchor>a7941da009269934eb6319d4747f23cbe</anchor>
      <arglist>(size_t k)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1Inlet1D.html</anchorfile>
      <anchor>a02fd73d861ef2e4aabb38c0c9ff82947</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1Inlet1D.html</anchorfile>
      <anchor>aa62f69dbb402c9c9de00311a7f5193ad</anchor>
      <arglist>(size_t jg, doublereal *xg, doublereal *rg, integer *diagg, doublereal rdt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual XML_Node &amp;</type>
      <name>save</name>
      <anchorfile>classCantera_1_1Inlet1D.html</anchorfile>
      <anchor>ac2ec60b9aa9b81c157997c4c10594883</anchor>
      <arglist>(XML_Node &amp;o, const doublereal *const soln)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>restore</name>
      <anchorfile>classCantera_1_1Inlet1D.html</anchorfile>
      <anchor>a7f87adb9173d936c9f741a204b94d69c</anchor>
      <arglist>(const XML_Node &amp;dom, doublereal *soln, int loglevel)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Integrator</name>
    <filename>classCantera_1_1Integrator.html</filename>
    <member kind="function">
      <type></type>
      <name>Integrator</name>
      <anchorfile>classCantera_1_1Integrator.html</anchorfile>
      <anchor>a47ae0ee235d7bbc752c2da101751a9b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Integrator</name>
      <anchorfile>classCantera_1_1Integrator.html</anchorfile>
      <anchor>ac13ff1f4b36510ac4bcd076d4c1773ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTolerances</name>
      <anchorfile>classCantera_1_1Integrator.html</anchorfile>
      <anchor>a595b3eb43aaceb3056d01ffe11e648c1</anchor>
      <arglist>(doublereal reltol, size_t n, doublereal *abstol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTolerances</name>
      <anchorfile>classCantera_1_1Integrator.html</anchorfile>
      <anchor>a0919eb17bc6992624bc5fe016ebc54e1</anchor>
      <arglist>(doublereal reltol, doublereal abstol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSensitivityTolerances</name>
      <anchorfile>classCantera_1_1Integrator.html</anchorfile>
      <anchor>aaff33ab3c2ee1bd5f93de96831648d70</anchor>
      <arglist>(doublereal reltol, doublereal abstol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setProblemType</name>
      <anchorfile>classCantera_1_1Integrator.html</anchorfile>
      <anchor>a1ba4cb9c5d591080485121aaec78169b</anchor>
      <arglist>(int probtype)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classCantera_1_1Integrator.html</anchorfile>
      <anchor>a6c9fbc46d44fdb4d226363ec213f7b60</anchor>
      <arglist>(doublereal t0, FuncEval &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>integrate</name>
      <anchorfile>classCantera_1_1Integrator.html</anchorfile>
      <anchor>a901f1d5b83d2ea03bc661f06972a808c</anchor>
      <arglist>(doublereal tout)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>step</name>
      <anchorfile>classCantera_1_1Integrator.html</anchorfile>
      <anchor>a0024a91cbc94eba5c635597d9e0b28d7</anchor>
      <arglist>(doublereal tout)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal &amp;</type>
      <name>solution</name>
      <anchorfile>classCantera_1_1Integrator.html</anchorfile>
      <anchor>ac55c92f00cebf68d9fbad6ab61c703f1</anchor>
      <arglist>(size_t k)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal *</type>
      <name>solution</name>
      <anchorfile>classCantera_1_1Integrator.html</anchorfile>
      <anchor>a083b176d8d044206aabc3e71ab9b6be9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>nEquations</name>
      <anchorfile>classCantera_1_1Integrator.html</anchorfile>
      <anchor>aad2946dfd16fdcc5955d48240bcd2c0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>nEvals</name>
      <anchorfile>classCantera_1_1Integrator.html</anchorfile>
      <anchor>aaae873a2f5326dcbbeb37a1f0fd9547b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaxOrder</name>
      <anchorfile>classCantera_1_1Integrator.html</anchorfile>
      <anchor>affb48850ed1203145dcef72fef940bfd</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMethod</name>
      <anchorfile>classCantera_1_1Integrator.html</anchorfile>
      <anchor>ad31dffd6e145e9e29c79e347d5e4e665</anchor>
      <arglist>(MethodType t)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setIterator</name>
      <anchorfile>classCantera_1_1Integrator.html</anchorfile>
      <anchor>aa63261cd5c5f0bfae33bc5285cac3d2b</anchor>
      <arglist>(IterType t)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaxStepSize</name>
      <anchorfile>classCantera_1_1Integrator.html</anchorfile>
      <anchor>a0c134025adafa2a281fde4f8c81cc509</anchor>
      <arglist>(double hmax)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMinStepSize</name>
      <anchorfile>classCantera_1_1Integrator.html</anchorfile>
      <anchor>a830689d54a1310e1533a92559e6bef8f</anchor>
      <arglist>(double hmin)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaxErrTestFails</name>
      <anchorfile>classCantera_1_1Integrator.html</anchorfile>
      <anchor>a534004ab923afc471f65ac50a7d866b1</anchor>
      <arglist>(int n)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Interface</name>
    <filename>classCantera_1_1Interface.html</filename>
    <base>Cantera::SurfPhase</base>
    <base>Cantera::InterfaceKinetics</base>
    <member kind="function">
      <type></type>
      <name>Interface</name>
      <anchorfile>classCantera_1_1Interface.html</anchorfile>
      <anchor>a68f5144b154076419b11e4f3dabbf3b2</anchor>
      <arglist>(const std::string &amp;infile, std::string id, std::vector&lt; ThermoPhase *&gt; otherPhases)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classCantera_1_1Interface.html</anchorfile>
      <anchor>acc67790b71a4b793f60cb9b4c56e7355</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ready</name>
      <anchorfile>classCantera_1_1Interface.html</anchorfile>
      <anchor>ae0659ce466366fc566dc1425c658a019</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_ok</name>
      <anchorfile>classCantera_1_1Interface.html</anchorfile>
      <anchor>a944c2db67eb16e4aafdacec0a3cbd277</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>XML_Node *</type>
      <name>m_r</name>
      <anchorfile>classCantera_1_1Interface.html</anchorfile>
      <anchor>a2e6789f373a37fdb77bb3b992b1ff540</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::InterfaceKinetics</name>
    <filename>classCantera_1_1InterfaceKinetics.html</filename>
    <base>Cantera::Kinetics</base>
    <class kind="struct">Cantera::InterfaceKinetics::StickData</class>
    <member kind="function">
      <type></type>
      <name>InterfaceKinetics</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a592e79568de246d5a72722331e74e3cb</anchor>
      <arglist>(thermo_t *thermo=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>kineticsType</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>ad7dcd09d4e43dec6cdbd70a4412edf2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setElectricPotential</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a81558406e80192333c44ba4ac3074c81</anchor>
      <arglist>(int n, doublereal V)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateROP</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>ac344bfd504d945321ace03f6ff8055fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_update_rates_T</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>abe95ef0be10a79e36d8ec231d9c73835</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_update_rates_phi</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a4bb075f81cf3c2e5565f449dc8db4668</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_update_rates_C</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a9aa3a6a8a02deda0179d2f2d8335dd34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>advanceCoverages</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a1fda5188ca42134f19bfa80917c50e0b</anchor>
      <arglist>(doublereal tstep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solvePseudoSteadyStateProblem</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>abe8887047d27740e9e2dc8f85863fcc2</anchor>
      <arglist>(int ifuncOverride=-1, doublereal timeScaleOverride=1.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateMu0</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>acb3fd2a22b4eda2a1e48def63b187f9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateKc</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a8931461bd97d7de25974a3d1c10138cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyVoltageKfwdCorrection</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a191c17a4646867d570dd6002fd04e6ca</anchor>
      <arglist>(doublereal *const kfwd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertExchangeCurrentDensityFormulation</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a45eb8d36c7c7f309cca1a1a0293db194</anchor>
      <arglist>(doublereal *const kfwd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPhaseExistence</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a89f13769517928ab9e957e7752844ef8</anchor>
      <arglist>(const size_t iphase, const int exists)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPhaseStability</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a25d42b5f0d25599533408695b867c423</anchor>
      <arglist>(const size_t iphase, const int isStable)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>phaseExistence</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a06394724c41d33464ce27704256bff3c</anchor>
      <arglist>(const size_t iphase) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>phaseStability</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>ab4a3d589ee6041cbf22b02ea44f60ba9</anchor>
      <arglist>(const size_t iphase) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEquilibriumConstants</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>ab8d2c41ec01bc6203df648a0b9cd806c</anchor>
      <arglist>(doublereal *kc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateExchangeCurrentQuantities</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>ad2ba0fb22c7f856392077d7c56af57c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaGibbs</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>ad69631cac287378c283168df8dafef0d</anchor>
      <arglist>(doublereal *deltaG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaElectrochemPotentials</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a418edc372abe2e962b54ca14cc8680c9</anchor>
      <arglist>(doublereal *deltaM)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaEnthalpy</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a57554eb16f3aa3df2dabf3a66ffbb41e</anchor>
      <arglist>(doublereal *deltaH)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaEntropy</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>abbd5b9f71b85c78d0f413ed82b68a404</anchor>
      <arglist>(doublereal *deltaS)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaSSGibbs</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a06012cfe067d3753ad8edf4789dde1cc</anchor>
      <arglist>(doublereal *deltaG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaSSEnthalpy</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>ac729c926583379f4bb6e30f386ffca7b</anchor>
      <arglist>(doublereal *deltaH)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaSSEntropy</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>ab9dc371171918cd45813b24d4354dd83</anchor>
      <arglist>(doublereal *deltaS)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a9446b276a061f65e31176618320daa20</anchor>
      <arglist>(doublereal *const conc)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>electrochem_beta</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>ae5fdd8d62deb588ee06bf2b08ed24aeb</anchor>
      <arglist>(size_t irxn) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isReversible</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a201b4f71fc6f5903a4baa07e803e98d1</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFwdRateConstants</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a5afbb7ec62ac028568d70322883439fe</anchor>
      <arglist>(doublereal *kfwd)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getRevRateConstants</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a0d99321a45302aed6f3e89cd1b54cec6</anchor>
      <arglist>(doublereal *krev, bool doIrreversible=false)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>effectivePreExponentialFactor</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>abfc1ee2c922be69da429b0e66871db44</anchor>
      <arglist>(size_t irxn)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>effectiveActivationEnergy_R</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>aa846c6353dee42f09fb6a1ee4c5356aa</anchor>
      <arglist>(size_t irxn)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>effectiveTemperatureExponent</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a13313dd31d169a480a60162fc3f2c5f4</anchor>
      <arglist>(size_t irxn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addPhase</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>af98cbd85a6c56db3274b8396cc0d6724</anchor>
      <arglist>(thermo_t &amp;thermo)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a02fd73d861ef2e4aabb38c0c9ff82947</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resizeSpecies</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>aed2e3dc2792f0b83801e711fbcd18200</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addReaction</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a83c9a822d0a2627b291dcb2361769e1a</anchor>
      <arglist>(shared_ptr&lt; Reaction &gt; r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>modifyReaction</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a9f54370d32ba34fe3e68248ca22cd613</anchor>
      <arglist>(size_t i, shared_ptr&lt; Reaction &gt; rNew)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>SurfaceArrhenius</type>
      <name>buildSurfaceArrhenius</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a931b479e8bdf7979006296d515556e62</anchor>
      <arglist>(size_t i, InterfaceReaction &amp;r, bool replace)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_grt</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>aa5b90d59311f341471ef83b26cc9fb68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_revindex</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a0622186ebe5a6793c53be58fb185c371</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Rate1&lt; SurfaceArrhenius &gt;</type>
      <name>m_rates</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>af65690966130dbbbef60db27abe932bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_irrev</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a8e7251e19598df7416da759bbf56ae15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_conc</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a87f88859c1b4012f11fd640c74808071</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_actConc</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a808fa98adc46de3914b64beabb053ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_mu0</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a9147a615ac19dd5da1e43f0545759aa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_mu</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>aa375e2256b2c6340eb2aa527eda1bca6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_mu0_Kc</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>ad142521d2ade74214ed65fdddd609ab7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_phi</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a381624bdbc575bc6fa35da47f430817e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_pot</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a980c86c2527ff0ff4fcf471c05eb0436</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>deltaElectricEnergy_</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>aab34b4519834a2541fdb85a9259e58ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SurfPhase *</type>
      <name>m_surf</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a0bafe9ab95a6bd0a3db5599bed4ce0cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ImplicitSurfChem *</type>
      <name>m_integrator</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>ab8a3e00a3ec0ee8e4cc7d48be0ac5448</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_beta</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a0bcb7573ce7c700a247dde1a1d7c023d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_ctrxn</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a6a56df4f62e68de8fab902f0cd5b0f46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_ctrxn_BVform</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>aa1033e4849e5aef2ab0de47b422aa8c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_int</type>
      <name>m_ctrxn_ecdf</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a84c443efecc2bf73b8dedb6a0b76a6a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_StandardConc</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a312d5210e9d77613bc00a139a5bbdf88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_deltaG0</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a2483d75538c79c9d78a01fbb804e7091</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_deltaG</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a34f6b5575caa2a5da19c4aba3813146c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_ProdStanConcReac</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>ade59d815f0af4d435f306119716ecd76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_temp</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a4d64276995e8b70bb4a09b47c20547f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_logtemp</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>aaca77bd1e5a78b02e3799abbc20cf95c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_has_coverage_dependence</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>aca88f4b1ee548eaa28a154df90e593c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_has_electrochem_rxns</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a5980805439210283620c473ba11187ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_has_exchange_current_density_formulation</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>ae6108b8812b886a14543f0d6ca908512</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_phaseExistsCheck</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>ad892875947c0fa3b589acd1a7c56dc1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; bool &gt;</type>
      <name>m_phaseExists</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>ad42de44edcbd9f9c2cfe0630ce71f68e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_int</type>
      <name>m_phaseIsStable</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>ad2ab10d3382599a623b0e4bd2104010e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::vector&lt; bool &gt; &gt;</type>
      <name>m_rxnPhaseIsReactant</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a5626460425d345ea493afcbe65fc78b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::vector&lt; bool &gt; &gt;</type>
      <name>m_rxnPhaseIsProduct</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>ad043650f8480ca37c389f3d3c2b4a29e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; StickData &gt;</type>
      <name>m_stickingData</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a72d31b2c28d9262aee8a26ff390ff43f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_nDim</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a1b133a38f0f12c50a56555bc170d3157</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEquilibriumConstants</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>ab8d2c41ec01bc6203df648a0b9cd806c</anchor>
      <arglist>(doublereal *kc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateExchangeCurrentQuantities</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>ad2ba0fb22c7f856392077d7c56af57c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaGibbs</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>ad69631cac287378c283168df8dafef0d</anchor>
      <arglist>(doublereal *deltaG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaElectrochemPotentials</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a418edc372abe2e962b54ca14cc8680c9</anchor>
      <arglist>(doublereal *deltaM)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaEnthalpy</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a57554eb16f3aa3df2dabf3a66ffbb41e</anchor>
      <arglist>(doublereal *deltaH)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaEntropy</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>abbd5b9f71b85c78d0f413ed82b68a404</anchor>
      <arglist>(doublereal *deltaS)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaSSGibbs</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a06012cfe067d3753ad8edf4789dde1cc</anchor>
      <arglist>(doublereal *deltaG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaSSEnthalpy</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>ac729c926583379f4bb6e30f386ffca7b</anchor>
      <arglist>(doublereal *deltaH)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaSSEntropy</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>ab9dc371171918cd45813b24d4354dd83</anchor>
      <arglist>(doublereal *deltaS)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a9446b276a061f65e31176618320daa20</anchor>
      <arglist>(doublereal *const conc)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>electrochem_beta</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>ae5fdd8d62deb588ee06bf2b08ed24aeb</anchor>
      <arglist>(size_t irxn) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isReversible</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a201b4f71fc6f5903a4baa07e803e98d1</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFwdRateConstants</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a5afbb7ec62ac028568d70322883439fe</anchor>
      <arglist>(doublereal *kfwd)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getRevRateConstants</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a0d99321a45302aed6f3e89cd1b54cec6</anchor>
      <arglist>(doublereal *krev, bool doIrreversible=false)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>effectivePreExponentialFactor</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>abfc1ee2c922be69da429b0e66871db44</anchor>
      <arglist>(size_t irxn)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>effectiveActivationEnergy_R</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>aa846c6353dee42f09fb6a1ee4c5356aa</anchor>
      <arglist>(size_t irxn)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>effectiveTemperatureExponent</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a13313dd31d169a480a60162fc3f2c5f4</anchor>
      <arglist>(size_t irxn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addPhase</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>af98cbd85a6c56db3274b8396cc0d6724</anchor>
      <arglist>(thermo_t &amp;thermo)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a02fd73d861ef2e4aabb38c0c9ff82947</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resizeSpecies</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>aed2e3dc2792f0b83801e711fbcd18200</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addReaction</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a83c9a822d0a2627b291dcb2361769e1a</anchor>
      <arglist>(shared_ptr&lt; Reaction &gt; r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>modifyReaction</name>
      <anchorfile>classCantera_1_1InterfaceKinetics.html</anchorfile>
      <anchor>a9f54370d32ba34fe3e68248ca22cd613</anchor>
      <arglist>(size_t i, shared_ptr&lt; Reaction &gt; rNew)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cantera::InterfaceKinetics::StickData</name>
    <filename>structCantera_1_1InterfaceKinetics_1_1StickData.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>index</name>
      <anchorfile>structCantera_1_1InterfaceKinetics_1_1StickData.html</anchorfile>
      <anchor>a3f42f10d93f6edb91d7d3f6edad25921</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>order</name>
      <anchorfile>structCantera_1_1InterfaceKinetics_1_1StickData.html</anchorfile>
      <anchor>a9a43ca8bf56c24206588609677165693</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>multiplier</name>
      <anchorfile>structCantera_1_1InterfaceKinetics_1_1StickData.html</anchorfile>
      <anchor>aaf220f69923619c408dc9b249a240fa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>use_motz_wise</name>
      <anchorfile>structCantera_1_1InterfaceKinetics_1_1StickData.html</anchorfile>
      <anchor>a78eede6abfab6dae3454060295ea7306</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::InterfaceReaction</name>
    <filename>classCantera_1_1InterfaceReaction.html</filename>
    <base>Cantera::ElementaryReaction</base>
    <member kind="variable">
      <type>std::map&lt; std::string, CoverageDependency &gt;</type>
      <name>coverage_deps</name>
      <anchorfile>classCantera_1_1InterfaceReaction.html</anchorfile>
      <anchor>a29b0b6469149bb4bb461e3df7ea37baf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_sticking_coefficient</name>
      <anchorfile>classCantera_1_1InterfaceReaction.html</anchorfile>
      <anchor>a1790205ccc8d405e8abb98e486c2af7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>use_motz_wise_correction</name>
      <anchorfile>classCantera_1_1InterfaceReaction.html</anchorfile>
      <anchor>aa7c1265465cf6d0c57c6d686c4eb5b46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>sticking_species</name>
      <anchorfile>classCantera_1_1InterfaceReaction.html</anchorfile>
      <anchor>a91428ee0317a3a95c45cbf2ccb1a4f6b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::IonFlow</name>
    <filename>classCantera_1_1IonFlow.html</filename>
    <base>Cantera::FreeFlame</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSolvingStage</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>a217801df07b6d76bfb67bb2af4b360e1</anchor>
      <arglist>(const size_t phase)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setElectricPotential</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>ad7a88e080f18ba63b70ba55ef350f7fd</anchor>
      <arglist>(const double v1, const double v2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>a999a32b06357990eb208a5fc86e0380c</anchor>
      <arglist>(size_t components, size_t points)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>_finalize</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>a5297b311c06b461a63f2b200710068ba</anchor>
      <arglist>(const double *x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solvePoissonEqn</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>a119e94dc20a3dcc671e267c430caf5ba</anchor>
      <arglist>(size_t j=npos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fixElectricPotential</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>a27f70518816fa4e91ea51036c124debb</anchor>
      <arglist>(size_t j=npos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setElectronTransport</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>af08664a8747c18450412c7fbe7451087</anchor>
      <arglist>(vector_fp &amp;tfix, vector_fp &amp;diff_e, vector_fp &amp;mobi_e)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>evalResidual</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>a0342d59a8b5f652d7730b4fa2fdb0508</anchor>
      <arglist>(double *x, double *rsd, int *diag, double rdt, size_t jmin, size_t jmax)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTransport</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>aec6e2b0085c2362b2d13ee6c61236b57</anchor>
      <arglist>(double *x, size_t j0, size_t j1)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateDiffFluxes</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>ac8a4675d059bb1555cf71e7ea28442e2</anchor>
      <arglist>(const double *x, size_t j0, size_t j1)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>frozenIonMethod</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>a28efbb646eae15418d46eafd9442ac93</anchor>
      <arglist>(const double *x, size_t j0, size_t j1)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>poissonEqnMethod</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>ad6db108fce372f66985a394a43c90a83</anchor>
      <arglist>(const double *x, size_t j0, size_t j1)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>phi_fixed</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>a385bff0a13a94dc5f8e595747b188753</anchor>
      <arglist>(size_t j) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>phi</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>a5da51ecdbbbfc71b03e93c8c38de82f4</anchor>
      <arglist>(const double *x, size_t j) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>E</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>a0d413cc7d95c4f048d5d5fccc5494da7</anchor>
      <arglist>(const double *x, size_t j) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>ND</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>a75562b3663c56a235570d8740fa3a851</anchor>
      <arglist>(const double *x, size_t k, size_t j) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>rho_e</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>a538112d2d5e61b828420b895672aadc6</anchor>
      <arglist>(double *x, size_t j) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; bool &gt;</type>
      <name>m_do_poisson</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>aec1911e2d8bc70b9b0b63137d877df74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_import_electron_transport</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>ac96f9a56295f2c842b99cf06715ddce6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_int</type>
      <name>m_speciesCharge</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>a39956348db3b8aabb0078117c5d4409e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_kCharge</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>ac4a3ffbf9b7d81881e84332bdee153eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_kNeutral</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>ac544b2e8005b0e2fdb7ea03cd3dc252b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_mobi_e_fix</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>a131abf5abaef3cf4c5a71af54ca32b8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_mobility</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>aaa06521e76212889dc17bbc15f4e63eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_stage</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>aae4dcda9c10d70ddf134eca848e53492</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_inletVoltage</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>af05eae298fa3e166d7016dddb72c8c79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_kElectron</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>a23fc51e83331ceb3667acfd7b1b9cade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_fixedElecPoten</name>
      <anchorfile>classCantera_1_1IonFlow.html</anchorfile>
      <anchor>af6fcff9dc21814ebc1237bc0f4b584e1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::IonGasTransport</name>
    <filename>classCantera_1_1IonGasTransport.html</filename>
    <base>Cantera::MixTransport</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>transportType</name>
      <anchorfile>classCantera_1_1IonGasTransport.html</anchorfile>
      <anchor>aaa616493275cb1d7fb3ba980ec3cd467</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1IonGasTransport.html</anchorfile>
      <anchor>ae8da48c173e52002da2ebdaf32550524</anchor>
      <arglist>(thermo_t *thermo, int mode, int log_level)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>viscosity</name>
      <anchorfile>classCantera_1_1IonGasTransport.html</anchorfile>
      <anchor>a8eb903123e17e153c0aeaeb74ec80ec1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>thermalConductivity</name>
      <anchorfile>classCantera_1_1IonGasTransport.html</anchorfile>
      <anchor>ab60feb8706d6c36f556985eaf9447052</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMobilities</name>
      <anchorfile>classCantera_1_1IonGasTransport.html</anchorfile>
      <anchor>a702cbb6f244cfb9f448ac0630def9893</anchor>
      <arglist>(double *const mobi)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMixDiffCoeffs</name>
      <anchorfile>classCantera_1_1IonGasTransport.html</anchorfile>
      <anchor>a431711980258846b25827541b65c2728</anchor>
      <arglist>(double *const d)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setupN64</name>
      <anchorfile>classCantera_1_1IonGasTransport.html</anchorfile>
      <anchor>aa4a7f62cd71f2e36a0e28a4879fde243</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>fitDiffCoeffs</name>
      <anchorfile>classCantera_1_1IonGasTransport.html</anchorfile>
      <anchor>a384e3fa8d986dff5c70492d5be1a1d62</anchor>
      <arglist>(MMCollisionInt &amp;integrals)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>omega11_n64</name>
      <anchorfile>classCantera_1_1IonGasTransport.html</anchorfile>
      <anchor>a69ca50f70c21e518c67968c2c87110a7</anchor>
      <arglist>(const double tstar, const double gamma)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_int</type>
      <name>m_speciesCharge</name>
      <anchorfile>classCantera_1_1IonGasTransport.html</anchorfile>
      <anchor>a39956348db3b8aabb0078117c5d4409e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_kIon</name>
      <anchorfile>classCantera_1_1IonGasTransport.html</anchorfile>
      <anchor>a5db856732f62d49cc40f7a18f2976d71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_kNeutral</name>
      <anchorfile>classCantera_1_1IonGasTransport.html</anchorfile>
      <anchor>ac544b2e8005b0e2fdb7ea03cd3dc252b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_kElectron</name>
      <anchorfile>classCantera_1_1IonGasTransport.html</anchorfile>
      <anchor>a23fc51e83331ceb3667acfd7b1b9cade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DenseMatrix</type>
      <name>m_gamma</name>
      <anchorfile>classCantera_1_1IonGasTransport.html</anchorfile>
      <anchor>a9678d526a1744faea05c5d41e1900f83</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::IonsFromNeutralVPSSTP</name>
    <filename>classCantera_1_1IonsFromNeutralVPSSTP.html</filename>
    <base>Cantera::GibbsExcessVPSSTP</base>
    <member kind="function">
      <type>void</type>
      <name>getDissociationCoeffs</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a7641321dc3163b4707223e9fbb7a71b5</anchor>
      <arglist>(vector_fp &amp;fm_neutralMolec_ions, vector_fp &amp;charges, std::vector&lt; size_t &gt; &amp;neutMolIndex) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNeutralMolecMoleFractions</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>afce6eb7f99482bf103b7d7a727c9421e</anchor>
      <arglist>(vector_fp &amp;neutralMoleculeMoleFractions) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNeutralMoleculeMoleGrads</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a3cb25700d1ca6bc203ac1b3bacd70473</anchor>
      <arglist>(const doublereal *const dx, doublereal *const dy) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getCationList</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>ac203b87f0d30762c2ca1df104e40887f</anchor>
      <arglist>(std::vector&lt; size_t &gt; &amp;cation) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAnionList</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a23de35c926e18048d6a080a5e5795607</anchor>
      <arglist>(std::vector&lt; size_t &gt; &amp;anion) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>af85cf0eab4dfda8ff1897ee7e251d5f5</anchor>
      <arglist>(const XML_Node &amp;thermoNode)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IonsFromNeutralVPSSTP</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a7c3b7440d241b998271e7d0a4e142c39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IonsFromNeutralVPSSTP</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a47e4b686bdf69b315f4278778d2d8c52</anchor>
      <arglist>(const std::string &amp;inputFile, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IonsFromNeutralVPSSTP</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a9cbdbf3853a6214b28dc586d136ab5a2</anchor>
      <arglist>(XML_Node &amp;phaseRoot, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>aaf04e92fc17efaa2c07df42c06c0d563</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a20b3c290780f2f094b028e19b63b8e6e</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffds</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>ac33a2e58cc6eb31260200425bb058ddc</anchor>
      <arglist>(const doublereal dTds, const doublereal *const dXds, doublereal *dlnActCoeffds) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnX_diag</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a57a7fa2f18d1b1635b848748ac679ca2</anchor>
      <arglist>(doublereal *dlnActCoeffdlnX_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN_diag</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>abd4c877b1646e599caf7c87d872c7dc3</anchor>
      <arglist>(doublereal *dlnActCoeffdlnN_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a4a2e93544bb41c14ed880a4595e110cc</anchor>
      <arglist>(const size_t ld, doublereal *const dlnActCoeffdlnN)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>calcDensity</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>afac1b45437d49cc161e7ca2d5c00906a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>calcIonMoleFractions</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a5f315588a0c380f14ac83ef4937473de</anchor>
      <arglist>(doublereal *const mf) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>calcNeutralMoleculeMoleFractions</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a3477e2529d4cd9b00c487ab25444dedf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>compositionChanged</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>ac901f42e1d2a9513f06eacccf09e11a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IonSolnType_enumType</type>
      <name>ionSolnType_</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>aedce3cd6117b28fc3f6931ac2d254745</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>numNeutralMoleculeSpecies_</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>aad73055db4e347a5ef4dcb46365645de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>indexSpecialSpecies_</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a6103febeca79072b4ba8bdd81750294f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>fm_neutralMolec_ions_</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a6fde02cc6801be376fd80557223bb715</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>fm_invert_ionForNeutral</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>ab2e29b46294b05fcc4c4239bdfba70e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>NeutralMolecMoleFractions_</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a6e7942a83bf1325b341b200045319eb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>cationList_</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a856511826beef995288ae3773e7dae36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>anionList_</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>afe243cd7d5d3792ff09349811c9067d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>passThroughList_</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a45332320ee3613802f7adc7f63007910</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>shared_ptr&lt; ThermoPhase &gt;</type>
      <name>neutralMoleculePhase_</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>aa22d476d4dd6ab63b75c539abc9c4536</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_lnActCoeff</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>ace353fd1300f76a737cd21837ca5011c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnActCoeffdT</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>ae5fe5ba43fbce9be743beb97cb132818</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnActCoeff</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>af841a0bfaf80c70ce667fd12e6172b6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnActCoeff_dlnX_diag</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>acdf440da23b10d619f95e8043906f8fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnActCoeff_dlnN_diag</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a47aacd407adbd0eec9c1639b642b005c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnActCoeff_dlnN</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a912b44a90a769f48bbb98805eeb8f3e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>moleFractionsTmp_</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a3d0fc5931b596c6cf5c11bb7f5bdbb57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>muNeutralMolecule_</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a4eac26ecea0cb853e5e68e1419c2d4fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>lnActCoeff_NeutralMolecule_</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a2bc469f36a335014d44d8869de48294d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>dlnActCoeffdT_NeutralMolecule_</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a204f3f7e71910347e7b9df70b858fa36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>dlnActCoeffdlnX_diag_NeutralMolecule_</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>ab38be882d4ff33f799b0eed4e24a50d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>dlnActCoeffdlnN_diag_NeutralMolecule_</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a7a7ed533251973de0130b34a155e7015</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array2D</type>
      <name>dlnActCoeffdlnN_NeutralMolecule_</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a8923f8a8f6acf4d0df1a02eebaf3498f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IonsFromNeutralVPSSTP</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a7c3b7440d241b998271e7d0a4e142c39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IonsFromNeutralVPSSTP</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a47e4b686bdf69b315f4278778d2d8c52</anchor>
      <arglist>(const std::string &amp;inputFile, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IonsFromNeutralVPSSTP</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a9cbdbf3853a6214b28dc586d136ab5a2</anchor>
      <arglist>(XML_Node &amp;phaseRoot, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>aaf04e92fc17efaa2c07df42c06c0d563</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a20b3c290780f2f094b028e19b63b8e6e</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffds</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>ac33a2e58cc6eb31260200425bb058ddc</anchor>
      <arglist>(const doublereal dTds, const doublereal *const dXds, doublereal *dlnActCoeffds) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnX_diag</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a57a7fa2f18d1b1635b848748ac679ca2</anchor>
      <arglist>(doublereal *dlnActCoeffdlnX_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN_diag</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>abd4c877b1646e599caf7c87d872c7dc3</anchor>
      <arglist>(doublereal *dlnActCoeffdlnN_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a4a2e93544bb41c14ed880a4595e110cc</anchor>
      <arglist>(const size_t ld, doublereal *const dlnActCoeffdlnN)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>calcDensity</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>afac1b45437d49cc161e7ca2d5c00906a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>calcIonMoleFractions</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a5f315588a0c380f14ac83ef4937473de</anchor>
      <arglist>(doublereal *const mf) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>calcNeutralMoleculeMoleFractions</name>
      <anchorfile>classCantera_1_1IonsFromNeutralVPSSTP.html</anchorfile>
      <anchor>a3477e2529d4cd9b00c487ab25444dedf</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cantera::isotopeWeightData</name>
    <filename>structCantera_1_1isotopeWeightData.html</filename>
    <member kind="variable">
      <type>string</type>
      <name>symbol</name>
      <anchorfile>structCantera_1_1isotopeWeightData.html</anchorfile>
      <anchor>aa0183fad0a4c5c8a30c8fdc7b81a1279</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>fullName</name>
      <anchorfile>structCantera_1_1isotopeWeightData.html</anchorfile>
      <anchor>a20dc5283470d1946c94e06c741e38f6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>atomicWeight</name>
      <anchorfile>structCantera_1_1isotopeWeightData.html</anchorfile>
      <anchor>ac1b6080dd8f080f305ca80c61702d08f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>atomicNumber</name>
      <anchorfile>structCantera_1_1isotopeWeightData.html</anchorfile>
      <anchor>a14f488916bef2ea8792b8ad4b4a28843</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Kinetics</name>
    <filename>classCantera_1_1Kinetics.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual std::pair&lt; size_t, size_t &gt;</type>
      <name>checkDuplicates</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ad8b549369f6034536f177b441c828b06</anchor>
      <arglist>(bool throw_err=true) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectPhase</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>aa795eecc3044113b9bb4780126d0ade7</anchor>
      <arglist>(const doublereal *data, const thermo_t *phase, doublereal *phase_data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Kinetics</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ae710a0c3e7bc970063f4cd30b0a6a5d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Kinetics</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a10321a1bc6fd096903749fdd5c1225d4</anchor>
      <arglist>(const Kinetics &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>kineticsType</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ad7dcd09d4e43dec6cdbd70a4412edf2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nReactions</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ab571ce07285cc130028df0ab4d103066</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkReactionIndex</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>af7373f8c67a18e8e48ba132bc01909b9</anchor>
      <arglist>(size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkReactionArraySize</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>af0659f080f9fecd5d6b4ed862768d71d</anchor>
      <arglist>(size_t ii) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkSpeciesIndex</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a1b9b39ffa71f92452cc4c8c0f419e3a5</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkSpeciesArraySize</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a06976743f76ea54c17fa11cb99bb7c1e</anchor>
      <arglist>(size_t mm) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nPhases</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a64405435dd8fb04097d842fd3253ad7c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkPhaseIndex</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a068816a509d8f29870c0fca0a56fb0d5</anchor>
      <arglist>(size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkPhaseArraySize</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a5a2b902fcf0cbf4e286d18eade14bfb8</anchor>
      <arglist>(size_t mm) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>phaseIndex</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a9251f38a19f6adec54c63778864ad08a</anchor>
      <arglist>(const std::string &amp;ph)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>surfacePhaseIndex</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a872c61b85000e1ef8595bd022072341d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>reactionPhaseIndex</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a2b5fc3e9a72b2af92017562e4849e17e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>thermo_t &amp;</type>
      <name>thermo</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a42d67e39dbc5f2af13a96f702f5a74f2</anchor>
      <arglist>(size_t n=0)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nTotalSpecies</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>af2ebec76e4eb4a9df751823c190f7cd7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>kineticsSpeciesIndex</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ac913bde6cd13de54c5595be6b12a0940</anchor>
      <arglist>(size_t k, size_t n) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>kineticsSpeciesName</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a8548738d590b39a136ec4473abb8b7fe</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>kineticsSpeciesIndex</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ad5f65edef2132b2ebc546dd756f0c0c2</anchor>
      <arglist>(const std::string &amp;nm) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>kineticsSpeciesIndex</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a8334f904435bd7dc873fdad10f547b92</anchor>
      <arglist>(const std::string &amp;nm, const std::string &amp;ph) const</arglist>
    </member>
    <member kind="function">
      <type>thermo_t &amp;</type>
      <name>speciesPhase</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>aa793a0e2039bc9434396160c27804798</anchor>
      <arglist>(const std::string &amp;nm)</arglist>
    </member>
    <member kind="function">
      <type>thermo_t &amp;</type>
      <name>speciesPhase</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a289654a94f8516ec8ff423daafd016d8</anchor>
      <arglist>(size_t k)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>speciesPhaseIndex</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>aa98e53c788bb6d34fdff287987a723e9</anchor>
      <arglist>(size_t k)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFwdRatesOfProgress</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>acd73bd337b7eb2d90bd59ec39cf5655c</anchor>
      <arglist>(doublereal *fwdROP)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getRevRatesOfProgress</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>afd5254d442034be3c9b14f0b4edf7bb7</anchor>
      <arglist>(doublereal *revROP)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getNetRatesOfProgress</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ae5dfd22979b3d7c9c4b723d20992296b</anchor>
      <arglist>(doublereal *netROP)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEquilibriumConstants</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a0115ce55d0098842313132275e343c33</anchor>
      <arglist>(doublereal *kc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getReactionDelta</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a5e99ed04406f3428b526ae2b42068472</anchor>
      <arglist>(const doublereal *property, doublereal *deltaProperty)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getRevReactionDelta</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a749606e0bf71bbeb194fd900b0bb1d5b</anchor>
      <arglist>(const doublereal *g, doublereal *dg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaGibbs</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a0f6814e0b820f6d3ea101214b6e90685</anchor>
      <arglist>(doublereal *deltaG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaElectrochemPotentials</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a287f9dce8202a860795253590c533686</anchor>
      <arglist>(doublereal *deltaM)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaEnthalpy</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a3e5d1c9c99d9aee1fdfd6ffeda6929ff</anchor>
      <arglist>(doublereal *deltaH)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaEntropy</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a2077636bd1a81fb21736fa9273a0a324</anchor>
      <arglist>(doublereal *deltaS)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaSSGibbs</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ad8a68f8d45fe8b854c9fc1a420ff81ed</anchor>
      <arglist>(doublereal *deltaG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaSSEnthalpy</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>afae1430cab1059a88ab54f909ddede6b</anchor>
      <arglist>(doublereal *deltaH)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaSSEntropy</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a26118dd7df28a64da0370a058b8bab7b</anchor>
      <arglist>(doublereal *deltaS)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCreationRates</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>aeb06f34944e64c6715363bbecd7d15b2</anchor>
      <arglist>(doublereal *cdot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDestructionRates</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ac6fe459b76dea93b9454d452a1bc1f7b</anchor>
      <arglist>(doublereal *ddot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getNetProductionRates</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a9011dfd860806e8ed43b0a539d348fab</anchor>
      <arglist>(doublereal *wdot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>reactantStoichCoeff</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>af4c8a64f41d89f8b5e382a0df60b5cdc</anchor>
      <arglist>(size_t k, size_t i) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>productStoichCoeff</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>aa1c898f9d898e4b56c395cc383fbd979</anchor>
      <arglist>(size_t k, size_t i) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>reactantOrder</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a1b9dfca0a204b1f7966fcc5d9e220356</anchor>
      <arglist>(size_t k, size_t i) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>productOrder</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ad88451cbc3955d5c2ffc2d800ea4abe5</anchor>
      <arglist>(int k, int i) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a22d74a589b890701687964b450e10a7e</anchor>
      <arglist>(doublereal *const conc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>reactionType</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a5710c3aa99cfe4f172be31df0c4bcfcb</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isReversible</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a201b4f71fc6f5903a4baa07e803e98d1</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>reactionString</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ae6ccc7c9d3c11aec1465c726bac62c75</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>reactantString</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ad9509cc70cd90703d4b95be5f2904a41</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>productString</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a65e549e8aab2bca37a83886cfda56652</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFwdRateConstants</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a47165567cf5d1288f33110f833c2d325</anchor>
      <arglist>(doublereal *kfwd)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getRevRateConstants</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a2eb1287d7decbb67cca779fd2928d651</anchor>
      <arglist>(doublereal *krev, bool doIrreversible=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addPhase</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>af98cbd85a6c56db3274b8396cc0d6724</anchor>
      <arglist>(thermo_t &amp;thermo)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a9339772ec5ac9fa929938109207f2863</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resizeSpecies</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>aed2e3dc2792f0b83801e711fbcd18200</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addReaction</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a83c9a822d0a2627b291dcb2361769e1a</anchor>
      <arglist>(shared_ptr&lt; Reaction &gt; r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>modifyReaction</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a9f54370d32ba34fe3e68248ca22cd613</anchor>
      <arglist>(size_t i, shared_ptr&lt; Reaction &gt; rNew)</arglist>
    </member>
    <member kind="function">
      <type>shared_ptr&lt; Reaction &gt;</type>
      <name>reaction</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a23111118ff9b42cc1b8bf4848de411b7</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>skipUndeclaredSpecies</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a84e60a329a5afc956d6957ecc3cf55b4</anchor>
      <arglist>(bool skip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>skipUndeclaredThirdBodies</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>aa1b8fe90b79c07ac502e6f28dec6ad8f</anchor>
      <arglist>(bool skip)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>multiplier</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a562bd1bb719af977b3eb0c35ea482d92</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMultiplier</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a83b281c103913e860a681d782b21e761</anchor>
      <arglist>(size_t i, doublereal f)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>checkDuplicateStoich</name>
      <anchorfile>group__kineticsmgr.html</anchorfile>
      <anchor>ga3000c8f3c00edab5b524e177cfab2390</anchor>
      <arglist>(std::map&lt; int, double &gt; &amp;r1, std::map&lt; int, double &gt; &amp;r2) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkReactionBalance</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ad91d18a3991901b15555ac2e5d0a8f12</anchor>
      <arglist>(const Reaction &amp;R)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ValueCache</type>
      <name>m_cache</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a1e53dfbc10d711d50fdae85bf49423ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_kk</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a44776286c3ba788047554eef4620e6de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_perturb</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a5beb0a30f678e8bb451038e2fb2d3ebe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; shared_ptr&lt; Reaction &gt; &gt;</type>
      <name>m_reactions</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>aef5e1e7166976d3fcf8e0dd87e29dfa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; thermo_t * &gt;</type>
      <name>m_thermo</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a98d9ac0d95b6ee467fdddd2b318f16a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_start</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a1983dc08525faaaa783e9e4c916157ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, size_t &gt;</type>
      <name>m_phaseindex</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>aa4c94a53fe4ffe63d78952b644caa4c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_surfphase</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>acc9a3e66a6a8d9f55ef7be3b686864fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_rxnphase</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a4b3f51055927a4700b96484c15880ab7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_mindim</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>aab8766808f2c335fcfe4b2778a5bac6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_rfn</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ad6ff1e5c3282de5da775ea5ecd07a4a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_rkcn</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a6ba05c2ea049296595516641fc28ed09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_ropf</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a724943939554e5fef60980254a6283dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_ropr</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a7499ff39594cfdf8dd6085e1ab485c37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_ropnet</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a3a86abb7a57066cd6e465887d22e5dd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_skipUndeclaredSpecies</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>aa778e332303794b9e56b387f7d8ab735</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_skipUndeclaredThirdBodies</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a9a453dcc800a1576386e522009ccacde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StoichManagerN</type>
      <name>m_reactantStoich</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ae08b534ed952283901d1907cc7dc5930</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StoichManagerN</type>
      <name>m_revProductStoich</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>aafc60ed3c96afed5ea6c6dd4f786be8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StoichManagerN</type>
      <name>m_irrevProductStoich</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a51b643a2f1e151edb92ba03306a89048</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Kinetics</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ae710a0c3e7bc970063f4cd30b0a6a5d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Kinetics</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a10321a1bc6fd096903749fdd5c1225d4</anchor>
      <arglist>(const Kinetics &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>kineticsType</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ad7dcd09d4e43dec6cdbd70a4412edf2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nReactions</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ab571ce07285cc130028df0ab4d103066</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkReactionIndex</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>af7373f8c67a18e8e48ba132bc01909b9</anchor>
      <arglist>(size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkReactionArraySize</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>af0659f080f9fecd5d6b4ed862768d71d</anchor>
      <arglist>(size_t ii) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkSpeciesIndex</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a1b9b39ffa71f92452cc4c8c0f419e3a5</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkSpeciesArraySize</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a06976743f76ea54c17fa11cb99bb7c1e</anchor>
      <arglist>(size_t mm) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nPhases</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a64405435dd8fb04097d842fd3253ad7c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkPhaseIndex</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a068816a509d8f29870c0fca0a56fb0d5</anchor>
      <arglist>(size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkPhaseArraySize</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a5a2b902fcf0cbf4e286d18eade14bfb8</anchor>
      <arglist>(size_t mm) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>phaseIndex</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a9251f38a19f6adec54c63778864ad08a</anchor>
      <arglist>(const std::string &amp;ph)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>surfacePhaseIndex</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a872c61b85000e1ef8595bd022072341d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>reactionPhaseIndex</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a2b5fc3e9a72b2af92017562e4849e17e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>thermo_t &amp;</type>
      <name>thermo</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a42d67e39dbc5f2af13a96f702f5a74f2</anchor>
      <arglist>(size_t n=0)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nTotalSpecies</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>af2ebec76e4eb4a9df751823c190f7cd7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>kineticsSpeciesIndex</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ac913bde6cd13de54c5595be6b12a0940</anchor>
      <arglist>(size_t k, size_t n) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>kineticsSpeciesName</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a8548738d590b39a136ec4473abb8b7fe</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>kineticsSpeciesIndex</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ad5f65edef2132b2ebc546dd756f0c0c2</anchor>
      <arglist>(const std::string &amp;nm) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>kineticsSpeciesIndex</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a8334f904435bd7dc873fdad10f547b92</anchor>
      <arglist>(const std::string &amp;nm, const std::string &amp;ph) const</arglist>
    </member>
    <member kind="function">
      <type>thermo_t &amp;</type>
      <name>speciesPhase</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>aa793a0e2039bc9434396160c27804798</anchor>
      <arglist>(const std::string &amp;nm)</arglist>
    </member>
    <member kind="function">
      <type>thermo_t &amp;</type>
      <name>speciesPhase</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a289654a94f8516ec8ff423daafd016d8</anchor>
      <arglist>(size_t k)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>speciesPhaseIndex</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>aa98e53c788bb6d34fdff287987a723e9</anchor>
      <arglist>(size_t k)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFwdRatesOfProgress</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>acd73bd337b7eb2d90bd59ec39cf5655c</anchor>
      <arglist>(doublereal *fwdROP)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getRevRatesOfProgress</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>afd5254d442034be3c9b14f0b4edf7bb7</anchor>
      <arglist>(doublereal *revROP)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getNetRatesOfProgress</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ae5dfd22979b3d7c9c4b723d20992296b</anchor>
      <arglist>(doublereal *netROP)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEquilibriumConstants</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a0115ce55d0098842313132275e343c33</anchor>
      <arglist>(doublereal *kc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getReactionDelta</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a5e99ed04406f3428b526ae2b42068472</anchor>
      <arglist>(const doublereal *property, doublereal *deltaProperty)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getRevReactionDelta</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a749606e0bf71bbeb194fd900b0bb1d5b</anchor>
      <arglist>(const doublereal *g, doublereal *dg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaGibbs</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a0f6814e0b820f6d3ea101214b6e90685</anchor>
      <arglist>(doublereal *deltaG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaElectrochemPotentials</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a287f9dce8202a860795253590c533686</anchor>
      <arglist>(doublereal *deltaM)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaEnthalpy</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a3e5d1c9c99d9aee1fdfd6ffeda6929ff</anchor>
      <arglist>(doublereal *deltaH)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaEntropy</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a2077636bd1a81fb21736fa9273a0a324</anchor>
      <arglist>(doublereal *deltaS)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaSSGibbs</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ad8a68f8d45fe8b854c9fc1a420ff81ed</anchor>
      <arglist>(doublereal *deltaG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaSSEnthalpy</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>afae1430cab1059a88ab54f909ddede6b</anchor>
      <arglist>(doublereal *deltaH)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDeltaSSEntropy</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a26118dd7df28a64da0370a058b8bab7b</anchor>
      <arglist>(doublereal *deltaS)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCreationRates</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>aeb06f34944e64c6715363bbecd7d15b2</anchor>
      <arglist>(doublereal *cdot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDestructionRates</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ac6fe459b76dea93b9454d452a1bc1f7b</anchor>
      <arglist>(doublereal *ddot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getNetProductionRates</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a9011dfd860806e8ed43b0a539d348fab</anchor>
      <arglist>(doublereal *wdot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>reactantStoichCoeff</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>af4c8a64f41d89f8b5e382a0df60b5cdc</anchor>
      <arglist>(size_t k, size_t i) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>productStoichCoeff</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>aa1c898f9d898e4b56c395cc383fbd979</anchor>
      <arglist>(size_t k, size_t i) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>reactantOrder</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a1b9dfca0a204b1f7966fcc5d9e220356</anchor>
      <arglist>(size_t k, size_t i) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>productOrder</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ad88451cbc3955d5c2ffc2d800ea4abe5</anchor>
      <arglist>(int k, int i) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a22d74a589b890701687964b450e10a7e</anchor>
      <arglist>(doublereal *const conc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>reactionType</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a5710c3aa99cfe4f172be31df0c4bcfcb</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isReversible</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a201b4f71fc6f5903a4baa07e803e98d1</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>reactionString</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ae6ccc7c9d3c11aec1465c726bac62c75</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>reactantString</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ad9509cc70cd90703d4b95be5f2904a41</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>productString</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a65e549e8aab2bca37a83886cfda56652</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFwdRateConstants</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a47165567cf5d1288f33110f833c2d325</anchor>
      <arglist>(doublereal *kfwd)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getRevRateConstants</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a2eb1287d7decbb67cca779fd2928d651</anchor>
      <arglist>(doublereal *krev, bool doIrreversible=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addPhase</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>af98cbd85a6c56db3274b8396cc0d6724</anchor>
      <arglist>(thermo_t &amp;thermo)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a9339772ec5ac9fa929938109207f2863</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resizeSpecies</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>aed2e3dc2792f0b83801e711fbcd18200</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addReaction</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a83c9a822d0a2627b291dcb2361769e1a</anchor>
      <arglist>(shared_ptr&lt; Reaction &gt; r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>modifyReaction</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a9f54370d32ba34fe3e68248ca22cd613</anchor>
      <arglist>(size_t i, shared_ptr&lt; Reaction &gt; rNew)</arglist>
    </member>
    <member kind="function">
      <type>shared_ptr&lt; Reaction &gt;</type>
      <name>reaction</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a23111118ff9b42cc1b8bf4848de411b7</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>skipUndeclaredSpecies</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a84e60a329a5afc956d6957ecc3cf55b4</anchor>
      <arglist>(bool skip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>skipUndeclaredThirdBodies</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>aa1b8fe90b79c07ac502e6f28dec6ad8f</anchor>
      <arglist>(bool skip)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>multiplier</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a562bd1bb719af977b3eb0c35ea482d92</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMultiplier</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a83b281c103913e860a681d782b21e761</anchor>
      <arglist>(size_t i, doublereal f)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StoichManagerN</type>
      <name>m_reactantStoich</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>ae08b534ed952283901d1907cc7dc5930</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StoichManagerN</type>
      <name>m_revProductStoich</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>aafc60ed3c96afed5ea6c6dd4f786be8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StoichManagerN</type>
      <name>m_irrevProductStoich</name>
      <anchorfile>classCantera_1_1Kinetics.html</anchorfile>
      <anchor>a51b643a2f1e151edb92ba03306a89048</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::KineticsFactory</name>
    <filename>classCantera_1_1KineticsFactory.html</filename>
    <base>Factory&lt; Kinetics &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deleteFactory</name>
      <anchorfile>classCantera_1_1KineticsFactory.html</anchorfile>
      <anchor>ad6285cea657558e041f040555a4d1c2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Kinetics *</type>
      <name>newKinetics</name>
      <anchorfile>classCantera_1_1KineticsFactory.html</anchorfile>
      <anchor>a7f8066c6154143365f4fcc04fd00df4f</anchor>
      <arglist>(XML_Node &amp;phase, std::vector&lt; ThermoPhase *&gt; th)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Kinetics *</type>
      <name>newKinetics</name>
      <anchorfile>classCantera_1_1KineticsFactory.html</anchorfile>
      <anchor>a2a8325f75725ff3db4992154010e4e0a</anchor>
      <arglist>(const std::string &amp;model)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::LatticePhase</name>
    <filename>classCantera_1_1LatticePhase.html</filename>
    <base>Cantera::ThermoPhase</base>
    <member kind="function">
      <type></type>
      <name>LatticePhase</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a6ec1266b31c7bc52dc78ac0ba2923caf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LatticePhase</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a0001b247838eb4988f2b837086295a1d</anchor>
      <arglist>(const std::string &amp;inputFile, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LatticePhase</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a66e156d513c3249c0a2ae86a08d8fd7e</anchor>
      <arglist>(XML_Node &amp;phaseRef, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>ab3949a6b2b2cb9e039ff336f7d08cb98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>calcDensity</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a49e2487b783cbb9b4716940057bc0b86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>logStandardConc</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a478bb3efbdc8679b9c922d022c317b0d</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a20b3c290780f2f094b028e19b63b8e6e</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>ac2dc95575420c5c767a7fe4e6161e892</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPureGibbs</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>aeb7a9744545e2854ced11ea7634dfe49</anchor>
      <arglist>(doublereal *gpure) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a2ee9dfc481fbf2c9e915c1e15794d238</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a6736e153cc33a62e77d8b5bc594cb7c3</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a4eedbc0d1542fc11b951588856220254</anchor>
      <arglist>(doublereal *vol) const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>gibbs_RT_ref</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a94ae6db2b8c3e512599dd414d29377ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT_ref</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a15142ba0b60259900efafd8026b51c96</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_ref</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>ae4ec4c8979d7a4b5deb6faf52697a068</anchor>
      <arglist>(doublereal *g) const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>entropy_R_ref</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a866d2b81807e774e86834a326af57e53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>cp_R_ref</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a5a8a464c5d44183de6b82a882a9c751d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSiteDensity</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>aa2f91000b683ee97108bfad949397169</anchor>
      <arglist>(double sitedens)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParameters</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>ada0ba2f6093d3df4d86c0f1018005544</anchor>
      <arglist>(int n, doublereal *const c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getParameters</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>af41cd836506ec09138b0c9c327acf1d3</anchor>
      <arglist>(int &amp;n, doublereal *const c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>abe11f2065246742c73c778c5de62f5b7</anchor>
      <arglist>(const XML_Node &amp;eosdata)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>compositionChanged</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>ac901f42e1d2a9513f06eacccf09e11a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_Pref</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>ae6416ed4db67e617a45e94e2c4c20dc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_Pcurrent</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>ab231cf2f611695594303229d552c6c27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_h0_RT</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a3c5e8d8c0d3a1e74b657da7f4e9014bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_cp0_R</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a0f99f8895cc2109fd4dcebb729d615fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_g0_RT</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a0b34289ccbc27c3af431627fd7a3a4fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_s0_R</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a56e8ca74ece671716ff2cb73967e1576</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_speciesMolarVolume</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a7eec4e736ec2b5030428f669f8c62724</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_site_density</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>ae7a63994f469865df0c249e61d2ec2ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>_updateThermo</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>adc787a3ca8a5489e2763cc7e712685bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>ab3949a6b2b2cb9e039ff336f7d08cb98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>calcDensity</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a49e2487b783cbb9b4716940057bc0b86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>logStandardConc</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a478bb3efbdc8679b9c922d022c317b0d</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a20b3c290780f2f094b028e19b63b8e6e</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>ac2dc95575420c5c767a7fe4e6161e892</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPureGibbs</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>aeb7a9744545e2854ced11ea7634dfe49</anchor>
      <arglist>(doublereal *gpure) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a2ee9dfc481fbf2c9e915c1e15794d238</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a6736e153cc33a62e77d8b5bc594cb7c3</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a4eedbc0d1542fc11b951588856220254</anchor>
      <arglist>(doublereal *vol) const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>gibbs_RT_ref</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a94ae6db2b8c3e512599dd414d29377ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT_ref</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a15142ba0b60259900efafd8026b51c96</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_ref</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>ae4ec4c8979d7a4b5deb6faf52697a068</anchor>
      <arglist>(doublereal *g) const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>entropy_R_ref</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a866d2b81807e774e86834a326af57e53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>cp_R_ref</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a5a8a464c5d44183de6b82a882a9c751d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSiteDensity</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>aa2f91000b683ee97108bfad949397169</anchor>
      <arglist>(double sitedens)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParameters</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>ada0ba2f6093d3df4d86c0f1018005544</anchor>
      <arglist>(int n, doublereal *const c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getParameters</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>af41cd836506ec09138b0c9c327acf1d3</anchor>
      <arglist>(int &amp;n, doublereal *const c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1LatticePhase.html</anchorfile>
      <anchor>abe11f2065246742c73c778c5de62f5b7</anchor>
      <arglist>(const XML_Node &amp;eosdata)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::LatticeSolidPhase</name>
    <filename>classCantera_1_1LatticeSolidPhase.html</filename>
    <base>Cantera::ThermoPhase</base>
    <member kind="function">
      <type></type>
      <name>LatticeSolidPhase</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a14f966b39c499ab2224dd6257cf790c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>minTemp</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a05045eb63890f5841d91268f8c8f6ac6</anchor>
      <arglist>(size_t k=npos) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>maxTemp</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>ae84e675e13f8de5fbb0e6196dd4cc287</anchor>
      <arglist>(size_t k=npos) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>refPressure</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>aa67bb4f5ad2c7365739f5a96be32dbf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>standardStateConvention</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a18fce2ebd13ebf81125cc332fbf88ffb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>af3b7fb6d3a5817a1fb3edff83294a1d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>aaf04e92fc17efaa2c07df42c06c0d563</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a7b8866c933747ea9c38fddc95a53eb0a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>ab3949a6b2b2cb9e039ff336f7d08cb98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>calcDensity</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a49e2487b783cbb9b4716940057bc0b86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMoleFractions</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a9021a59aefd96f389045818f8513abb3</anchor>
      <arglist>(const doublereal *const x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMoleFractions</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a04eed23312633c3a440512b55f115143</anchor>
      <arglist>(doublereal *const x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMassFractions</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a1469e0717c5fec4e6aa52d12e42d13ef</anchor>
      <arglist>(const doublereal *const y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMassFractions_NoNorm</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a5b18c3fac1327f61a8b1bfcc3fa8b9b0</anchor>
      <arglist>(const doublereal *const y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setConcentrations</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a03cbcbd8e5101fe27556fe6d1ba79a63</anchor>
      <arglist>(const doublereal *const conc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a20b3c290780f2f094b028e19b63b8e6e</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a6b4cdc30b480b92ed405f95e1f660687</anchor>
      <arglist>(doublereal *mu0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>logStandardConc</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a478bb3efbdc8679b9c922d022c317b0d</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_press</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a0edab2fddaaaa5321a40af0cbca697cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_molar_density</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a0523af6574fc2bbaa5d43ea496de0f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; shared_ptr&lt; ThermoPhase &gt; &gt;</type>
      <name>m_lattice</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a284adf0f21be1aee8850d9aa704ec979</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_x</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a235e43d360bbe2f315ff6156d60c7207</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>theta_</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>aae8e838dc61c3fbb5e2a8593a112a627</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>tmpV_</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>ae79b53efd668e14c4fa1365d02043aec</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT_ref</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a15142ba0b60259900efafd8026b51c96</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_ref</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>ae4ec4c8979d7a4b5deb6faf52697a068</anchor>
      <arglist>(doublereal *g) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLattice</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>ad61b0a508532f52262e7b97be3518127</anchor>
      <arglist>(shared_ptr&lt; ThermoPhase &gt; lattice)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLatticeStoichiometry</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>ac84fbbccd17d2cdb9e22ff0ced5966db</anchor>
      <arglist>(const compositionMap &amp;comp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>abe11f2065246742c73c778c5de62f5b7</anchor>
      <arglist>(const XML_Node &amp;eosdata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLatticeMoleFractionsByName</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>a66cc98442cbe38332239c50caabde0c5</anchor>
      <arglist>(int n, const std::string &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>modifyOneHf298SS</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>ad2bb703fa348e97f485a446b89a46ebe</anchor>
      <arglist>(const size_t k, const doublereal Hf298New)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetHf298</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>aae5e68c46937aadb155cfd7ff906ae6b</anchor>
      <arglist>(const size_t k=npos)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>_updateThermo</name>
      <anchorfile>classCantera_1_1LatticeSolidPhase.html</anchorfile>
      <anchor>adc787a3ca8a5489e2763cc7e712685bc</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::LiquidTranInteraction</name>
    <filename>classCantera_1_1LiquidTranInteraction.html</filename>
    <member kind="function">
      <type></type>
      <name>LiquidTranInteraction</name>
      <anchorfile>classCantera_1_1LiquidTranInteraction.html</anchorfile>
      <anchor>a358650bc3554ab930a323aa5005f2004</anchor>
      <arglist>(TransportPropertyType tp_ind=TP_UNKNOWN)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1LiquidTranInteraction.html</anchorfile>
      <anchor>a756e3ce0dc521bb41fc5cc76a4c699d8</anchor>
      <arglist>(const XML_Node &amp;compModelNode=XML_Node(), thermo_t *thermo=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>getMixTransProp</name>
      <anchorfile>classCantera_1_1LiquidTranInteraction.html</anchorfile>
      <anchor>a078813b7b6ecb6c94dce00ec607ee1e3</anchor>
      <arglist>(doublereal *speciesValues, doublereal *weightSpecies=0)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LiquidTranMixingModel</type>
      <name>m_model</name>
      <anchorfile>classCantera_1_1LiquidTranInteraction.html</anchorfile>
      <anchor>a93203e74f4f7ba7abbd3ee0ac0b1ee14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TransportPropertyType</type>
      <name>m_property</name>
      <anchorfile>classCantera_1_1LiquidTranInteraction.html</anchorfile>
      <anchor>a81a5799cd85946318b60894c5ba35e83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>thermo_t *</type>
      <name>m_thermo</name>
      <anchorfile>classCantera_1_1LiquidTranInteraction.html</anchorfile>
      <anchor>a97f743952571f2de68e94e2803f1f84a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; DenseMatrix * &gt;</type>
      <name>m_Aij</name>
      <anchorfile>classCantera_1_1LiquidTranInteraction.html</anchorfile>
      <anchor>a5914f596e0ed54241819eb207763ecbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; DenseMatrix * &gt;</type>
      <name>m_Bij</name>
      <anchorfile>classCantera_1_1LiquidTranInteraction.html</anchorfile>
      <anchor>ae3e4d0ea9f5b2c7e7037300a716f000e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DenseMatrix</type>
      <name>m_Eij</name>
      <anchorfile>classCantera_1_1LiquidTranInteraction.html</anchorfile>
      <anchor>af814415fbe7bdb087ade2c24c753d120</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; DenseMatrix * &gt;</type>
      <name>m_Hij</name>
      <anchorfile>classCantera_1_1LiquidTranInteraction.html</anchorfile>
      <anchor>a056312fab8b290f39c699841fc65dafa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; DenseMatrix * &gt;</type>
      <name>m_Sij</name>
      <anchorfile>classCantera_1_1LiquidTranInteraction.html</anchorfile>
      <anchor>a4c706deffaf56a925e8fbd1210b15841</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DenseMatrix</type>
      <name>m_Dij</name>
      <anchorfile>classCantera_1_1LiquidTranInteraction.html</anchorfile>
      <anchor>a064ca919ff337379ce54c56035b8a0eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::LiquidTransport</name>
    <filename>classCantera_1_1LiquidTransport.html</filename>
    <base>Cantera::Transport</base>
    <member kind="function">
      <type></type>
      <name>LiquidTransport</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a468d57e231a42acd5e3f89ce154a85ba</anchor>
      <arglist>(thermo_t *thermo=0, int ndim=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>initLiquid</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a1b2a2c85417a0f8aa0c3350abd31778e</anchor>
      <arglist>(LiquidTransportParams &amp;tr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>transportType</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>aaa616493275cb1d7fb3ba980ec3cd467</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>viscosity</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>ad8dadb8c432b45ddc85f81e5a863cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesViscosities</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>ab38610000c078cb8823aecb51d6c05ca</anchor>
      <arglist>(doublereal *const visc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>ionConductivity</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a5dea33cce075a0d113ee456416f7e12c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesIonConductivity</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a0b0b22e46ccfd8a1cc416559bc708d04</anchor>
      <arglist>(doublereal *const ionCond)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>mobilityRatio</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a2246fb0bf5544ed3dd682021612a8ff9</anchor>
      <arglist>(doublereal *mobRat)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesMobilityRatio</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>af6eeb1df775cbd1b0d251850bc452de2</anchor>
      <arglist>(doublereal **mobRat)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selfDiffusion</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a3d635e2b2c420e19cec25828382db9b5</anchor>
      <arglist>(doublereal *const selfDiff)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesSelfDiffusion</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>acf5508c723208cab38b3c4b77b36dca7</anchor>
      <arglist>(doublereal **selfDiff)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesHydrodynamicRadius</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>adda415dc9b555de9a4a1096cd3bcf651</anchor>
      <arglist>(doublereal *const radius)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getBinaryDiffCoeffs</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a450f94e1a146e7bb44e24d153678609b</anchor>
      <arglist>(const size_t ld, doublereal *const d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMixDiffCoeffs</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a699001499937e42f790551f01bce4424</anchor>
      <arglist>(doublereal *const d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getThermalDiffCoeffs</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a0242eeac6a86b61e2d2d613ad7a4fb0d</anchor>
      <arglist>(doublereal *const dt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalConductivity</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a2485777400132063dc233a7af516e66d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMobilities</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>aa211291a51ee3de00d8b2c653cac5e0b</anchor>
      <arglist>(doublereal *const mobil_e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFluidMobilities</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a0aa27914eeba4f96de83106c7266b933</anchor>
      <arglist>(doublereal *const mobil_f)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_Grad_V</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a5b90473cc16d5ec42023986afb944fc3</anchor>
      <arglist>(const doublereal *const grad_V)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_Grad_T</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a14f1afec90d8a408f623d149dcb6b6d7</anchor>
      <arglist>(const doublereal *const grad_T)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_Grad_X</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>aba4d63407e831798fb0a90c730f205d1</anchor>
      <arglist>(const doublereal *const grad_X)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>getElectricConduct</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a2029121c339270668bda9cbea5f26bf3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getElectricCurrent</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a2936c507b4285bfb260f0c0baff7b747</anchor>
      <arglist>(int ndim, const doublereal *grad_T, int ldx, const doublereal *grad_X, int ldf, const doublereal *grad_V, doublereal *current)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesVdiff</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a58ba7fd135265e124e0e714ec26c49bd</anchor>
      <arglist>(size_t ndim, const doublereal *grad_T, int ldx, const doublereal *grad_X, int ldf, doublereal *Vdiff)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesVdiffES</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a90a565d33bd918a11ae9ff7ca24d87d5</anchor>
      <arglist>(size_t ndim, const doublereal *grad_T, int ldx, const doublereal *grad_X, int ldf, const doublereal *grad_Phi, doublereal *Vdiff)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesFluxes</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>ac10f3352c5356776215dfdad3fb61e40</anchor>
      <arglist>(size_t ndim, const doublereal *const grad_T, size_t ldx, const doublereal *const grad_X, size_t ldf, doublereal *const fluxes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesFluxesES</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>ac399f2b1f11f27616f800902e1b513b2</anchor>
      <arglist>(size_t ndim, const doublereal *grad_T, size_t ldx, const doublereal *grad_X, size_t ldf, const doublereal *grad_Phi, doublereal *fluxes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesVdiffExt</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a075a0b4f901fff4419a890aecfd0f7a1</anchor>
      <arglist>(size_t ldf, doublereal *Vdiff)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesFluxesExt</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>ac805e6765f94e4e1f0c1e2374b5116ae</anchor>
      <arglist>(size_t ldf, doublereal *fluxes)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>update_T</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a0b1601aa0af9acafbf32a9a198f2b448</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>update_C</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a9ba58c87c7950edec69e9d0e00962943</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>update_Grad_lnAC</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a8dad4712e796c7070054e1d3151995ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>stefan_maxwell_solve</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a4fb6db583ddc71c0f5566afd9f2a354e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateViscosity_T</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a63ac7f8d6ccfecb0a7aac8580e1640e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateIonConductivity_T</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a450ae4cb84dc59f9b69d8f0733e4e1e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateMobilityRatio_T</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a228b1981c705577f6bfa1b7a17aa9684</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateSelfDiffusion_T</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a1ae1c0b29f78e1d3188851a383f709d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateHydrodynamicRadius_T</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a53b5fac138c7ad672b016cf8479f6749</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCond_T</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a90d943c4451c8de9675e8a7afe50aa2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateViscosities_C</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a96285bc8e05b6462d32a31d50f14c694</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateIonConductivity_C</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>ae024169e5988279d6092cb6fb6d43769</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateMobilityRatio_C</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>aa45bf92bb28f696a46710ec83534613a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateSelfDiffusion_C</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a5364881167ff14194c82e22710a95069</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateHydrodynamicRadius_C</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a71cc0266e89c692b12b6414d5fe6b241</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateDiff_T</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a413dd59dcbc0b8d0a0b4b87424bac936</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::vector&lt; LTPspecies * &gt;</type>
      <name>LTPvector</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a220d1bf3626c04e73208c7b562149444</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>m_nsp2</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>ad81f117d16cb22f7113887d34268ccc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_mw</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a090dee67d018151c78cc56fe95ae4757</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; LTPspecies * &gt;</type>
      <name>m_viscTempDep_Ns</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>af9ba8600482e97b999c5c24bea64489c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LiquidTranInteraction *</type>
      <name>m_viscMixModel</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a4729463e081aef81be387e2c2de5a1ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; LTPspecies * &gt;</type>
      <name>m_ionCondTempDep_Ns</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a5230d216f4e0d9e2eb46065437ac205e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LiquidTranInteraction *</type>
      <name>m_ionCondMixModel</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a257e98bb7e0f2ef40d5dbfb9807f1ccd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; LTPvector &gt;</type>
      <name>m_mobRatTempDep_Ns</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a0e1c3fcdbb93389855020b96194c6c40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; LiquidTranInteraction * &gt;</type>
      <name>m_mobRatMixModel</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a43da1b90d1ef192fa7383d3f9fca6907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; LTPvector &gt;</type>
      <name>m_selfDiffTempDep_Ns</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a7555793e90fdcb5dc9d7395c38300515</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; LiquidTranInteraction * &gt;</type>
      <name>m_selfDiffMixModel</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>ad218166cd3c9d5f3d39ecd83298d565a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; LTPspecies * &gt;</type>
      <name>m_lambdaTempDep_Ns</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a94c422ef94c12b42cecb88ae91dc8f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LiquidTranInteraction *</type>
      <name>m_lambdaMixModel</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a8baf93974d318d6c3793d3437d018e67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; LTPspecies * &gt;</type>
      <name>m_diffTempDep_Ns</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a265c04f159efe768ff8cb460dbeef85b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LiquidTranInteraction *</type>
      <name>m_diffMixModel</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a6535b0e3631b10b8fee1dad709912cd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DenseMatrix</type>
      <name>m_diff_Dij</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>aeec3b4d64436e9efae93549222ff0f61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; LTPspecies * &gt;</type>
      <name>m_radiusTempDep_Ns</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a6b79a228ec8a64eb0cc7789c651f3d26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LiquidTranInteraction *</type>
      <name>m_radiusMixModel</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>ac7773e5d4197c7d80b657502330e4880</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_hydrodynamic_radius</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a0e5221a75776fba58968c9c2d1f24dfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Grad_X</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>ae374a915664cc50e1ebda0ab37958012</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Grad_lnAC</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a373095ee761894df89b2ebef466ee23f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Grad_T</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a5396d5cb9e54ce7082d83bd093a7371c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Grad_P</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>aca45fdbf5522e3c0bb25dbf7c6a2fd28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Grad_V</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a848a57fe2cb4e62c88004cb846972813</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Grad_mu</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a7c90048a82382e186c05fe8da6eef925</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DenseMatrix</type>
      <name>m_bdiff</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a7ce68336304abe3f1270fb30d0f1a9f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_viscSpecies</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a651e72d1ed71ae7635c54e59440d3d91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_ionCondSpecies</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>aa6ab0740090664702eb00eb9930124d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DenseMatrix</type>
      <name>m_mobRatSpecies</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a1d5525f167fdc15267d27fe3f22e5719</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DenseMatrix</type>
      <name>m_selfDiffSpecies</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a48044d5d3fa4603ef9ec8ecef6c7e386</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_lambdaSpecies</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>ad98f9c15823f5807da4f414316d83859</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_iStateMF</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>ae9fc27f7e3cd3f38c68cf9038717981a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_massfracs</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a3134d8770f25e219089e2ebfba001c54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_massfracs_tran</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>aebdff3a9ba3dcecebd267942bf906d12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_molefracs</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a12c50f38c6cb71d8535bf8beae6bcb0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_molefracs_tran</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a2277953831c6cffa3c251bb0776c6f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_concentrations</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a5fd38ec5a190331edb1919789aa49b5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>concTot_</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a0f9bae3c8270ddbe09413afe7d07727b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>concTot_tran_</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>ad2c6d5de6e921084f98bddacba6a5010</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>meanMolecularWeight_</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a9d94212f5042c5e4c8093a67862ad56c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>dens_</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a95742be174422778141fcd7175eb376f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_chargeSpecies</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>aa634101f880f7344c1e8a08cef7c92e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_volume_spec</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>ae5ee9b60e71c54c9b400945b1e26bb5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_actCoeff</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a8c0f7a2ad57a69a3aa5b285fea1a6634</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DenseMatrix</type>
      <name>m_B</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>aee8a5b8e3b09668d568117a8b2be843c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DenseMatrix</type>
      <name>m_A</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a5f60adb6a83fd9b598474f009964584d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_temp</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a4d64276995e8b70bb4a09b47c20547f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_press</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a0edab2fddaaaa5321a40af0cbca697cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array2D</type>
      <name>m_flux</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a69aac61d93f990ae9a67c54841391db0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array2D</type>
      <name>m_Vdiff</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a68eec378272be904b543c60317a79b5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_lambda</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a9ed9b13e7f50d75387c7d3c9d45f275b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_viscmix</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>adb781f17290f2cdd6ebac13511fa3b2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_ionCondmix</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>ac2447c547da671ee4e8c5d785876afd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_mobRatMix</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a36624c3dbe268c63e095f7dd9cd7da70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_selfDiffMix</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>af197538bce13b734b3f54e568b445095</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_spwork</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>ae06300fb9d5a56b3ef36780110841a5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_visc_mix_ok</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a75ffd06358da51a4c47597e6572c1c0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_visc_temp_ok</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>ad44dc3b5d55985146c9035139e49539e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_visc_conc_ok</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a8fbee3be264ad115d944f7143ca7c10e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_ionCond_mix_ok</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>aae2c36108decaba95b8422e4a10337f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_ionCond_temp_ok</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a10c5758319b28190efc00f5ee901a7bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_ionCond_conc_ok</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a5c2f1e8804924d65f6b6da82709f23c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_cond_mix_ok</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>adf1b8a6b3eccccc73409e09622d58526</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_mobRat_mix_ok</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a228cefe9441e76399586db3c1cd24ee8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_mobRat_temp_ok</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>aed0c5e806d89eff2ee05032fe0ccae74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_mobRat_conc_ok</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a65c98b40c50e080610213606866db178</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_selfDiff_mix_ok</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>ad947182a63ddd8bdd69098a6d415ede6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_selfDiff_temp_ok</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a06e28f2673730ac0f2f3b782845a605c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_selfDiff_conc_ok</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a0d102f9f7e9994492d07733498d93242</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_radi_mix_ok</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>ae6d54d364d96ee99242aa1a9c2ae378d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_radi_temp_ok</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>abf2e4efd0c82b9f7216cf506b7482dff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_radi_conc_ok</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a99d584300bc3638b39af9f97f8e3b588</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_diff_mix_ok</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a3decf8203002e6f66511e0aad40bb981</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_diff_temp_ok</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a000b9acfd137be089f25d3ffad261450</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_lambda_temp_ok</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a8879a420537c5b810635b69fc50416fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_lambda_mix_ok</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a38a32159021147d0c7525598ab4595f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_mode</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a5704ba84c8aca7f4ff7477d9445d2bae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_debug</name>
      <anchorfile>classCantera_1_1LiquidTransport.html</anchorfile>
      <anchor>a67320329e3515c9d02089a22e12ba035</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::LiquidTransportData</name>
    <filename>classCantera_1_1LiquidTransportData.html</filename>
    <base>Cantera::TransportData</base>
    <member kind="variable">
      <type>std::string</type>
      <name>speciesName</name>
      <anchorfile>classCantera_1_1LiquidTransportData.html</anchorfile>
      <anchor>a3e9adc165c89c8fb94220c3df3706e39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LTPspecies *</type>
      <name>hydroRadius</name>
      <anchorfile>classCantera_1_1LiquidTransportData.html</anchorfile>
      <anchor>a5e25256fe4a874b7df4e35beb6f1c94e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LTPspecies *</type>
      <name>viscosity</name>
      <anchorfile>classCantera_1_1LiquidTransportData.html</anchorfile>
      <anchor>a6f6382b74ddbd3005e5e25e6c06d9718</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LTPspecies *</type>
      <name>ionConductivity</name>
      <anchorfile>classCantera_1_1LiquidTransportData.html</anchorfile>
      <anchor>a5da125afadd0ff6ddf1812dd719d8d5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; LTPspecies * &gt;</type>
      <name>mobilityRatio</name>
      <anchorfile>classCantera_1_1LiquidTransportData.html</anchorfile>
      <anchor>aa23e82bafbdd7a43a697494cb6ca3902</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; LTPspecies * &gt;</type>
      <name>selfDiffusion</name>
      <anchorfile>classCantera_1_1LiquidTransportData.html</anchorfile>
      <anchor>a34d22c553fde91c1e34c5412e4debfee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LTPspecies *</type>
      <name>thermalCond</name>
      <anchorfile>classCantera_1_1LiquidTransportData.html</anchorfile>
      <anchor>a466f08fb841434fa098e8d0d15cfd50f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LTPspecies *</type>
      <name>electCond</name>
      <anchorfile>classCantera_1_1LiquidTransportData.html</anchorfile>
      <anchor>a16a5fed971cc945fa5598e7b7f2281ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LTPspecies *</type>
      <name>speciesDiffusivity</name>
      <anchorfile>classCantera_1_1LiquidTransportData.html</anchorfile>
      <anchor>ae26b69b31cea0b6b0db88a5b2f177dac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::LiquidTransportParams</name>
    <filename>classCantera_1_1LiquidTransportParams.html</filename>
    <base>Cantera::TransportParams</base>
    <member kind="variable">
      <type>std::vector&lt; LiquidTransportData &gt;</type>
      <name>LTData</name>
      <anchorfile>classCantera_1_1LiquidTransportParams.html</anchorfile>
      <anchor>a39a2094731c57723328c37efe76d5e30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LiquidTranInteraction *</type>
      <name>viscosity</name>
      <anchorfile>classCantera_1_1LiquidTransportParams.html</anchorfile>
      <anchor>a3d83335742126ce2894e9ef81a286a38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LiquidTranInteraction *</type>
      <name>ionConductivity</name>
      <anchorfile>classCantera_1_1LiquidTransportParams.html</anchorfile>
      <anchor>a7f791a41b7973e742b0110efce36867f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; LiquidTranInteraction * &gt;</type>
      <name>mobilityRatio</name>
      <anchorfile>classCantera_1_1LiquidTransportParams.html</anchorfile>
      <anchor>a7627a95b541ff5e7790e2f2e85b59a15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; LiquidTranInteraction * &gt;</type>
      <name>selfDiffusion</name>
      <anchorfile>classCantera_1_1LiquidTransportParams.html</anchorfile>
      <anchor>a9e554b6af484413480525fd8c4d3e749</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LiquidTranInteraction *</type>
      <name>thermalCond</name>
      <anchorfile>classCantera_1_1LiquidTransportParams.html</anchorfile>
      <anchor>aeeb0978685f6efc86f518e474eb861ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LiquidTranInteraction *</type>
      <name>speciesDiffusivity</name>
      <anchorfile>classCantera_1_1LiquidTransportParams.html</anchorfile>
      <anchor>ad391130bea13453fceef741eb661335c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LiquidTranInteraction *</type>
      <name>electCond</name>
      <anchorfile>classCantera_1_1LiquidTransportParams.html</anchorfile>
      <anchor>a9a3d44f0d0603bd9ebb21bc464418492</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LiquidTranInteraction *</type>
      <name>hydroRadius</name>
      <anchorfile>classCantera_1_1LiquidTransportParams.html</anchorfile>
      <anchor>a9121c60bfdc95971bb1b16d867d1afcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LiquidTranMixingModel</type>
      <name>model_viscosity</name>
      <anchorfile>classCantera_1_1LiquidTransportParams.html</anchorfile>
      <anchor>abe62330588a24e230a5434928667b5bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LiquidTranMixingModel</type>
      <name>model_ionConductivity</name>
      <anchorfile>classCantera_1_1LiquidTransportParams.html</anchorfile>
      <anchor>a7c121b1b01cdd7e834e4be50cf584055</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; LiquidTranMixingModel * &gt;</type>
      <name>model_mobilityRatio</name>
      <anchorfile>classCantera_1_1LiquidTransportParams.html</anchorfile>
      <anchor>a48835c82066f1ec6373c49585e29fa2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; LiquidTranMixingModel * &gt;</type>
      <name>model_selfDiffusion</name>
      <anchorfile>classCantera_1_1LiquidTransportParams.html</anchorfile>
      <anchor>abc5f82f8c0019e4d8aeebfcfa090478e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DenseMatrix</type>
      <name>thermalCond_Aij</name>
      <anchorfile>classCantera_1_1LiquidTransportParams.html</anchorfile>
      <anchor>ac1a384e8d04a9fae02020a5c42860033</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LiquidTranMixingModel</type>
      <name>model_speciesDiffusivity</name>
      <anchorfile>classCantera_1_1LiquidTransportParams.html</anchorfile>
      <anchor>a55618e2c5d8496c3b81c13cb8c126b97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DenseMatrix</type>
      <name>diff_Dij</name>
      <anchorfile>classCantera_1_1LiquidTransportParams.html</anchorfile>
      <anchor>afd34c871b277b57d7123a022eee6c3c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LiquidTranMixingModel</type>
      <name>model_hydroradius</name>
      <anchorfile>classCantera_1_1LiquidTransportParams.html</anchorfile>
      <anchor>a323db274a8cd1d6a960d9dfeb5a2585d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DenseMatrix</type>
      <name>radius_Aij</name>
      <anchorfile>classCantera_1_1LiquidTransportParams.html</anchorfile>
      <anchor>a83fb025b3d3c0d9ee24048cf56390c75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LiquidTranMixingModel</type>
      <name>compositionDepTypeDefault_</name>
      <anchorfile>classCantera_1_1LiquidTransportParams.html</anchorfile>
      <anchor>ab469eeb9adabb67f057c3f756c3dbe26</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Logger</name>
    <filename>classCantera_1_1Logger.html</filename>
    <member kind="function">
      <type></type>
      <name>Logger</name>
      <anchorfile>classCantera_1_1Logger.html</anchorfile>
      <anchor>a4fac0c9f6ee2dce6abd726264b9195f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Logger</name>
      <anchorfile>classCantera_1_1Logger.html</anchorfile>
      <anchor>a7a62719474beac5f447b376e0c9d5b44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>write</name>
      <anchorfile>classCantera_1_1Logger.html</anchorfile>
      <anchor>a579a62cf7b73d49eb80b2919606ca69e</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>writeendl</name>
      <anchorfile>classCantera_1_1Logger.html</anchorfile>
      <anchor>a49b6e3eeaed7a8c3f4cd99f6c05dd183</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>error</name>
      <anchorfile>classCantera_1_1Logger.html</anchorfile>
      <anchor>a7057a6c0572da1477dce06903d2728ec</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::LTI_Log_MoleFracs</name>
    <filename>classCantera_1_1LTI__Log__MoleFracs.html</filename>
    <base>Cantera::LiquidTranInteraction</base>
    <member kind="function">
      <type>doublereal</type>
      <name>getMixTransProp</name>
      <anchorfile>classCantera_1_1LTI__Log__MoleFracs.html</anchorfile>
      <anchor>a5e882dfa180ad1bde896a594727f5137</anchor>
      <arglist>(doublereal *valueSpecies, doublereal *weightSpecies=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMatrixTransProp</name>
      <anchorfile>classCantera_1_1LTI__Log__MoleFracs.html</anchorfile>
      <anchor>af677b40ace31b6f50207a4cc1a273d68</anchor>
      <arglist>(DenseMatrix &amp;mat, doublereal *speciesValues=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::LTI_MassFracs</name>
    <filename>classCantera_1_1LTI__MassFracs.html</filename>
    <base>Cantera::LiquidTranInteraction</base>
    <member kind="function">
      <type>doublereal</type>
      <name>getMixTransProp</name>
      <anchorfile>classCantera_1_1LTI__MassFracs.html</anchorfile>
      <anchor>a5e882dfa180ad1bde896a594727f5137</anchor>
      <arglist>(doublereal *valueSpecies, doublereal *weightSpecies=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMatrixTransProp</name>
      <anchorfile>classCantera_1_1LTI__MassFracs.html</anchorfile>
      <anchor>af677b40ace31b6f50207a4cc1a273d68</anchor>
      <arglist>(DenseMatrix &amp;mat, doublereal *speciesValues=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::LTI_MoleFracs</name>
    <filename>classCantera_1_1LTI__MoleFracs.html</filename>
    <base>Cantera::LiquidTranInteraction</base>
    <member kind="function">
      <type>doublereal</type>
      <name>getMixTransProp</name>
      <anchorfile>classCantera_1_1LTI__MoleFracs.html</anchorfile>
      <anchor>a5e882dfa180ad1bde896a594727f5137</anchor>
      <arglist>(doublereal *valueSpecies, doublereal *weightSpecies=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMatrixTransProp</name>
      <anchorfile>classCantera_1_1LTI__MoleFracs.html</anchorfile>
      <anchor>af677b40ace31b6f50207a4cc1a273d68</anchor>
      <arglist>(DenseMatrix &amp;mat, doublereal *speciesValues=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::LTI_MoleFracs_ExpT</name>
    <filename>classCantera_1_1LTI__MoleFracs__ExpT.html</filename>
    <base>Cantera::LiquidTranInteraction</base>
    <member kind="function">
      <type>doublereal</type>
      <name>getMixTransProp</name>
      <anchorfile>classCantera_1_1LTI__MoleFracs__ExpT.html</anchorfile>
      <anchor>a5e882dfa180ad1bde896a594727f5137</anchor>
      <arglist>(doublereal *valueSpecies, doublereal *weightSpecies=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMatrixTransProp</name>
      <anchorfile>classCantera_1_1LTI__MoleFracs__ExpT.html</anchorfile>
      <anchor>af677b40ace31b6f50207a4cc1a273d68</anchor>
      <arglist>(DenseMatrix &amp;mat, doublereal *speciesValues=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::LTI_Pairwise_Interaction</name>
    <filename>classCantera_1_1LTI__Pairwise__Interaction.html</filename>
    <base>Cantera::LiquidTranInteraction</base>
    <member kind="function">
      <type>doublereal</type>
      <name>getMixTransProp</name>
      <anchorfile>classCantera_1_1LTI__Pairwise__Interaction.html</anchorfile>
      <anchor>a5e882dfa180ad1bde896a594727f5137</anchor>
      <arglist>(doublereal *valueSpecies, doublereal *weightSpecies=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMatrixTransProp</name>
      <anchorfile>classCantera_1_1LTI__Pairwise__Interaction.html</anchorfile>
      <anchor>af677b40ace31b6f50207a4cc1a273d68</anchor>
      <arglist>(DenseMatrix &amp;mat, doublereal *speciesValues=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::LTI_StefanMaxwell_PPN</name>
    <filename>classCantera_1_1LTI__StefanMaxwell__PPN.html</filename>
    <base>Cantera::LiquidTranInteraction</base>
    <member kind="function">
      <type>doublereal</type>
      <name>getMixTransProp</name>
      <anchorfile>classCantera_1_1LTI__StefanMaxwell__PPN.html</anchorfile>
      <anchor>a5e882dfa180ad1bde896a594727f5137</anchor>
      <arglist>(doublereal *valueSpecies, doublereal *weightSpecies=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMatrixTransProp</name>
      <anchorfile>classCantera_1_1LTI__StefanMaxwell__PPN.html</anchorfile>
      <anchor>af677b40ace31b6f50207a4cc1a273d68</anchor>
      <arglist>(DenseMatrix &amp;mat, doublereal *speciesValues=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::LTPError</name>
    <filename>classCantera_1_1LTPError.html</filename>
    <base>Cantera::CanteraError</base>
    <member kind="function">
      <type></type>
      <name>LTPError</name>
      <anchorfile>classCantera_1_1LTPError.html</anchorfile>
      <anchor>aa9f48b54d7de2dcbaca1d9c150704aa3</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::LTPmodelError</name>
    <filename>classCantera_1_1LTPmodelError.html</filename>
    <base>Cantera::CanteraError</base>
  </compound>
  <compound kind="class">
    <name>Cantera::LTPspecies</name>
    <filename>classCantera_1_1LTPspecies.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual LTPspecies *</type>
      <name>duplMyselfAsLTPspecies</name>
      <anchorfile>classCantera_1_1LTPspecies.html</anchorfile>
      <anchor>ad6bbd3c51242eea39e4806f158121164</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setThermo</name>
      <anchorfile>classCantera_1_1LTPspecies.html</anchorfile>
      <anchor>ab96cf25138866fbee9a31b286fee60cf</anchor>
      <arglist>(thermo_t *thermo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classCantera_1_1LTPspecies.html</anchorfile>
      <anchor>a9d3a2685df23b5e7cbf59c19c4a1f9b5</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransportPropertyType</name>
      <anchorfile>classCantera_1_1LTPspecies.html</anchorfile>
      <anchor>a5dc99b77167c91f7212758604e4afce6</anchor>
      <arglist>(TransportPropertyType tp_ind)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupFromXML</name>
      <anchorfile>classCantera_1_1LTPspecies.html</anchorfile>
      <anchor>aad8aa861fe4b289d713996bc3656329e</anchor>
      <arglist>(const XML_Node &amp;propNode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>getSpeciesTransProp</name>
      <anchorfile>classCantera_1_1LTPspecies.html</anchorfile>
      <anchor>a95a2640673a27ffcbd401268663073ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkPositive</name>
      <anchorfile>classCantera_1_1LTPspecies.html</anchorfile>
      <anchor>a8c2876f44ca0766943a23d3269c1fe91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>getMixWeight</name>
      <anchorfile>classCantera_1_1LTPspecies.html</anchorfile>
      <anchor>aa7cb6edb8ab664f77a066b3512290790</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>m_speciesName</name>
      <anchorfile>classCantera_1_1LTPspecies.html</anchorfile>
      <anchor>a75c6e36cb6fc8d259c2876ecd54bab29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LTPTemperatureDependenceType</type>
      <name>m_model</name>
      <anchorfile>classCantera_1_1LTPspecies.html</anchorfile>
      <anchor>a7819354ad964d186a3e3ce751d524877</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TransportPropertyType</type>
      <name>m_property</name>
      <anchorfile>classCantera_1_1LTPspecies.html</anchorfile>
      <anchor>a81a5799cd85946318b60894c5ba35e83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_coeffs</name>
      <anchorfile>classCantera_1_1LTPspecies.html</anchorfile>
      <anchor>afb568ed37a1574702044569b4e8aff3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const thermo_t *</type>
      <name>m_thermo</name>
      <anchorfile>classCantera_1_1LTPspecies.html</anchorfile>
      <anchor>abb44c5f60141a8ddd5d914a7e5f79c35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_mixWeight</name>
      <anchorfile>classCantera_1_1LTPspecies.html</anchorfile>
      <anchor>a66a3a2e99dbceb937bf2fbae3d26643a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>adjustCoeffsForComposition</name>
      <anchorfile>classCantera_1_1LTPspecies.html</anchorfile>
      <anchor>ae3ce1f95c1ffee8148d2d92f7c311a32</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::LTPspecies_Arrhenius</name>
    <filename>classCantera_1_1LTPspecies__Arrhenius.html</filename>
    <base>Cantera::LTPspecies</base>
    <member kind="function" virtualness="virtual">
      <type>virtual LTPspecies *</type>
      <name>duplMyselfAsLTPspecies</name>
      <anchorfile>classCantera_1_1LTPspecies__Arrhenius.html</anchorfile>
      <anchor>ad6bbd3c51242eea39e4806f158121164</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupFromXML</name>
      <anchorfile>classCantera_1_1LTPspecies__Arrhenius.html</anchorfile>
      <anchor>a72aa90d72688307fb245e69fc20e88bb</anchor>
      <arglist>(const XML_Node &amp;propNode)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>getSpeciesTransProp</name>
      <anchorfile>classCantera_1_1LTPspecies__Arrhenius.html</anchorfile>
      <anchor>a95a2640673a27ffcbd401268663073ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_temp</name>
      <anchorfile>classCantera_1_1LTPspecies__Arrhenius.html</anchorfile>
      <anchor>a4d64276995e8b70bb4a09b47c20547f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_logt</name>
      <anchorfile>classCantera_1_1LTPspecies__Arrhenius.html</anchorfile>
      <anchor>a04cda98631983d5947b8da86840008c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_prop</name>
      <anchorfile>classCantera_1_1LTPspecies__Arrhenius.html</anchorfile>
      <anchor>ad925ec9e8e6c75f5839e24b094c7399c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_logProp</name>
      <anchorfile>classCantera_1_1LTPspecies__Arrhenius.html</anchorfile>
      <anchor>a6074bce3e1c5e04e856cfad120efaf0a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::LTPspecies_Const</name>
    <filename>classCantera_1_1LTPspecies__Const.html</filename>
    <base>Cantera::LTPspecies</base>
    <member kind="function" virtualness="virtual">
      <type>virtual LTPspecies *</type>
      <name>duplMyselfAsLTPspecies</name>
      <anchorfile>classCantera_1_1LTPspecies__Const.html</anchorfile>
      <anchor>ad6bbd3c51242eea39e4806f158121164</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupFromXML</name>
      <anchorfile>classCantera_1_1LTPspecies__Const.html</anchorfile>
      <anchor>a72aa90d72688307fb245e69fc20e88bb</anchor>
      <arglist>(const XML_Node &amp;propNode)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>getSpeciesTransProp</name>
      <anchorfile>classCantera_1_1LTPspecies__Const.html</anchorfile>
      <anchor>a95a2640673a27ffcbd401268663073ef</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::LTPspecies_ExpT</name>
    <filename>classCantera_1_1LTPspecies__ExpT.html</filename>
    <base>Cantera::LTPspecies</base>
    <member kind="function" virtualness="virtual">
      <type>virtual LTPspecies *</type>
      <name>duplMyselfAsLTPspecies</name>
      <anchorfile>classCantera_1_1LTPspecies__ExpT.html</anchorfile>
      <anchor>ad6bbd3c51242eea39e4806f158121164</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupFromXML</name>
      <anchorfile>classCantera_1_1LTPspecies__ExpT.html</anchorfile>
      <anchor>a72aa90d72688307fb245e69fc20e88bb</anchor>
      <arglist>(const XML_Node &amp;propNode)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>getSpeciesTransProp</name>
      <anchorfile>classCantera_1_1LTPspecies__ExpT.html</anchorfile>
      <anchor>a95a2640673a27ffcbd401268663073ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_temp</name>
      <anchorfile>classCantera_1_1LTPspecies__ExpT.html</anchorfile>
      <anchor>a4d64276995e8b70bb4a09b47c20547f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_prop</name>
      <anchorfile>classCantera_1_1LTPspecies__ExpT.html</anchorfile>
      <anchor>ad925ec9e8e6c75f5839e24b094c7399c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::LTPspecies_Poly</name>
    <filename>classCantera_1_1LTPspecies__Poly.html</filename>
    <base>Cantera::LTPspecies</base>
    <member kind="function" virtualness="virtual">
      <type>virtual LTPspecies *</type>
      <name>duplMyselfAsLTPspecies</name>
      <anchorfile>classCantera_1_1LTPspecies__Poly.html</anchorfile>
      <anchor>ad6bbd3c51242eea39e4806f158121164</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupFromXML</name>
      <anchorfile>classCantera_1_1LTPspecies__Poly.html</anchorfile>
      <anchor>a72aa90d72688307fb245e69fc20e88bb</anchor>
      <arglist>(const XML_Node &amp;propNode)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>getSpeciesTransProp</name>
      <anchorfile>classCantera_1_1LTPspecies__Poly.html</anchorfile>
      <anchor>a95a2640673a27ffcbd401268663073ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_temp</name>
      <anchorfile>classCantera_1_1LTPspecies__Poly.html</anchorfile>
      <anchor>a4d64276995e8b70bb4a09b47c20547f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_prop</name>
      <anchorfile>classCantera_1_1LTPspecies__Poly.html</anchorfile>
      <anchor>ad925ec9e8e6c75f5839e24b094c7399c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::MargulesVPSSTP</name>
    <filename>classCantera_1_1MargulesVPSSTP.html</filename>
    <base>Cantera::GibbsExcessVPSSTP</base>
    <member kind="function">
      <type></type>
      <name>MargulesVPSSTP</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a54e6131a7e971255357cad62ea13d3c4</anchor>
      <arglist>(const std::string &amp;inputFile, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MargulesVPSSTP</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a23b609568e9118140e5cfdaf3f944226</anchor>
      <arglist>(XML_Node &amp;phaseRef, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getLnActivityCoefficients</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a2875fc50fe1a245ae531610323d7703e</anchor>
      <arglist>(doublereal *lnac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getd2lnActCoeffdT2</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a22950a59c8b7816b05fae7348699ff81</anchor>
      <arglist>(doublereal *d2lnActCoeffdT2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdT</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a3e608e528b93cf0ae38dcde50abaa77a</anchor>
      <arglist>(doublereal *dlnActCoeffdT) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBinaryInteraction</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a78b5f06855639cacca62e320872dfb76</anchor>
      <arglist>(const std::string &amp;speciesA, const std::string &amp;speciesB, double h0, double h1, double s0, double s1, double vh0, double vh1, double vs0, double vs1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffds</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>ac33a2e58cc6eb31260200425bb058ddc</anchor>
      <arglist>(const doublereal dTds, const doublereal *const dXds, doublereal *dlnActCoeffds) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnX_diag</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a57a7fa2f18d1b1635b848748ac679ca2</anchor>
      <arglist>(doublereal *dlnActCoeffdlnX_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN_diag</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>abd4c877b1646e599caf7c87d872c7dc3</anchor>
      <arglist>(doublereal *dlnActCoeffdlnN_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a4a2e93544bb41c14ed880a4595e110cc</anchor>
      <arglist>(const size_t ld, doublereal *const dlnActCoeffdlnN)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>numBinaryInteractions_</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a3e97be8157a9776967250e5fe6092269</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_HE_b_ij</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a76da411aaed577b0fe2e26d9922a8248</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_HE_c_ij</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a7b3fd3fb37439feaa3b62501b7980f93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_SE_b_ij</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a9c5ef9aed4ef6a223d516c8633443c5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_SE_c_ij</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a1116bfe22df50b07813827be00fd61b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_VHE_b_ij</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>aa91c8c1648f90912de7c91ceeedca27f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_VHE_c_ij</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a6f17e21b23998008496b512f3e7bb067</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_VSE_b_ij</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>aeeed564c313522f1f48868a68e1fc0c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_VSE_c_ij</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a23d6b4f46bc2c5d107a04f17c4621f6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_pSpecies_A_ij</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a73336923c81bc0951ab24ad6923679a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_pSpecies_B_ij</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>ac81ff27778f560c50d60d5668c870e45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>formMargules_</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a9791be40ec7af06fe61e7f5c5e368e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>formTempModel_</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a31d1c8b9a4ccfcda99571e009d4b614c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>readXMLBinarySpecies</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a4e304c5a0044d22bb156cbd8a977b851</anchor>
      <arglist>(XML_Node &amp;xmlBinarySpecies)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>initLengths</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>acbd8d9f6e3bcaf6f2115a657e7ce12cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_lnActCoeff</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>ace353fd1300f76a737cd21837ca5011c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnActCoeff_dT</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a734985fc69ffbef2993d9e396d12c442</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnActCoeff_dlnX_diag</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>acdf440da23b10d619f95e8043906f8fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnActCoeff_dlnN_diag</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a47aacd407adbd0eec9c1639b642b005c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnActCoeff_dlnN</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a912b44a90a769f48bbb98805eeb8f3e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getLnActivityCoefficients</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a2875fc50fe1a245ae531610323d7703e</anchor>
      <arglist>(doublereal *lnac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getd2lnActCoeffdT2</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a22950a59c8b7816b05fae7348699ff81</anchor>
      <arglist>(doublereal *d2lnActCoeffdT2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdT</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a3e608e528b93cf0ae38dcde50abaa77a</anchor>
      <arglist>(doublereal *dlnActCoeffdT) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBinaryInteraction</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a78b5f06855639cacca62e320872dfb76</anchor>
      <arglist>(const std::string &amp;speciesA, const std::string &amp;speciesB, double h0, double h1, double s0, double s1, double vh0, double vh1, double vs0, double vs1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffds</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>ac33a2e58cc6eb31260200425bb058ddc</anchor>
      <arglist>(const doublereal dTds, const doublereal *const dXds, doublereal *dlnActCoeffds) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnX_diag</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a57a7fa2f18d1b1635b848748ac679ca2</anchor>
      <arglist>(doublereal *dlnActCoeffdlnX_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN_diag</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>abd4c877b1646e599caf7c87d872c7dc3</anchor>
      <arglist>(doublereal *dlnActCoeffdlnN_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN</name>
      <anchorfile>classCantera_1_1MargulesVPSSTP.html</anchorfile>
      <anchor>a4a2e93544bb41c14ed880a4595e110cc</anchor>
      <arglist>(const size_t ld, doublereal *const dlnActCoeffdlnN)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::MaskellSolidSolnPhase</name>
    <filename>classCantera_1_1MaskellSolidSolnPhase.html</filename>
    <base>Cantera::VPStandardStateTP</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a8bc95d80ae6b9292cbcb7644f9dff3d8</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>logStandardConc</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a5f8ffb86dee4b91edc6913c977615f1c</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>ab3949a6b2b2cb9e039ff336f7d08cb98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDensity</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a7eb43922f97cdfb4e0df8e9710353770</anchor>
      <arglist>(const doublereal rho)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>calcDensity</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>afac1b45437d49cc161e7ca2d5c00906a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMolarDensity</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>ae385d2bbefae3c5e03fc3421bb97f635</anchor>
      <arglist>(const doublereal rho)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a20b3c290780f2f094b028e19b63b8e6e</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials_RT</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>acf1ae24d0fbef55963df3598f134d699</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPureGibbs</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>aeb7a9744545e2854ced11ea7634dfe49</anchor>
      <arglist>(doublereal *gpure) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>ac2dc95575420c5c767a7fe4e6161e892</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProductSpecies</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a3a67eef17452025dbbd003a16a596c76</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>_updateThermo</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>adc787a3ca8a5489e2763cc7e712685bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_Pcurrent</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>ab231cf2f611695594303229d552c6c27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_h0_RT</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a3c5e8d8c0d3a1e74b657da7f4e9014bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_cp0_R</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a0f99f8895cc2109fd4dcebb729d615fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_g0_RT</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a0b34289ccbc27c3af431627fd7a3a4fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_s0_R</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a56e8ca74ece671716ff2cb73967e1576</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>h_mixing</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a159bae19d2beda2a6e62eb518f4d8778</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>product_species_index</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a889620fd49b969a73d1907b8b7f2d0f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>ab3949a6b2b2cb9e039ff336f7d08cb98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDensity</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a7eb43922f97cdfb4e0df8e9710353770</anchor>
      <arglist>(const doublereal rho)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>calcDensity</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>afac1b45437d49cc161e7ca2d5c00906a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMolarDensity</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>ae385d2bbefae3c5e03fc3421bb97f635</anchor>
      <arglist>(const doublereal rho)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a20b3c290780f2f094b028e19b63b8e6e</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials_RT</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>acf1ae24d0fbef55963df3598f134d699</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPureGibbs</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>aeb7a9744545e2854ced11ea7634dfe49</anchor>
      <arglist>(doublereal *gpure) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>ac2dc95575420c5c767a7fe4e6161e892</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProductSpecies</name>
      <anchorfile>classCantera_1_1MaskellSolidSolnPhase.html</anchorfile>
      <anchor>a3a67eef17452025dbbd003a16a596c76</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::MassFlowController</name>
    <filename>classCantera_1_1MassFlowController.html</filename>
    <base>Cantera::FlowDevice</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateMassFlowRate</name>
      <anchorfile>classCantera_1_1MassFlowController.html</anchorfile>
      <anchor>a3aad33ef5dfee5e6b1de346b4c3ad2ca</anchor>
      <arglist>(doublereal time)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Metal</name>
    <filename>classCantera_1_1Metal.html</filename>
    <base>Cantera::MetalPhase</base>
    <member kind="function">
      <type>bool</type>
      <name>ready</name>
      <anchorfile>classCantera_1_1Metal.html</anchorfile>
      <anchor>ae0659ce466366fc566dc1425c658a019</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::MetalPhase</name>
    <filename>classCantera_1_1MetalPhase.html</filename>
    <base>Cantera::ThermoPhase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1MetalPhase.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1MetalPhase.html</anchorfile>
      <anchor>ad1f748debfb3ad9694cbe10567607041</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1MetalPhase.html</anchorfile>
      <anchor>a7faf9c9cc25b0d68e3d70d3652a15064</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1MetalPhase.html</anchorfile>
      <anchor>a4ffabb655af31633bc2428a745fee00d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1MetalPhase.html</anchorfile>
      <anchor>a0e2736f9897926ad93283cd2730cffca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1MetalPhase.html</anchorfile>
      <anchor>a68f03569b6bb3d3d9d27e6021f874e8f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1MetalPhase.html</anchorfile>
      <anchor>a7b8866c933747ea9c38fddc95a53eb0a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1MetalPhase.html</anchorfile>
      <anchor>a1eaf7cd301b51d52d52fc9c359014371</anchor>
      <arglist>(doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1MetalPhase.html</anchorfile>
      <anchor>ab3949a6b2b2cb9e039ff336f7d08cb98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1MetalPhase.html</anchorfile>
      <anchor>a3b9a2b69e6daaaee510f7825aa48d4f5</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1MetalPhase.html</anchorfile>
      <anchor>a37bf4f79267b6a62524f8459c5ef0d97</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1MetalPhase.html</anchorfile>
      <anchor>a59f32c443574cffc3f6ff8aa42dbeaab</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1MetalPhase.html</anchorfile>
      <anchor>a681f9f13612b09143d548f78a7c5f782</anchor>
      <arglist>(doublereal *mu0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1MetalPhase.html</anchorfile>
      <anchor>a83539a75df88ff87f95ca3a60a830dc8</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1MetalPhase.html</anchorfile>
      <anchor>a8bc95d80ae6b9292cbcb7644f9dff3d8</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>logStandardConc</name>
      <anchorfile>classCantera_1_1MetalPhase.html</anchorfile>
      <anchor>a5f8ffb86dee4b91edc6913c977615f1c</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1MetalPhase.html</anchorfile>
      <anchor>af03a726f2f5d141fc1ec3c6a9aed03a7</anchor>
      <arglist>(const XML_Node &amp;eosdata)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::MetalSHEelectrons</name>
    <filename>classCantera_1_1MetalSHEelectrons.html</filename>
    <base>Cantera::SingleSpeciesTP</base>
    <member kind="function">
      <type></type>
      <name>MetalSHEelectrons</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>ad3b0d2478250fd0f452b385ce5b5cb36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MetalSHEelectrons</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>a13f907795055827d8841b183a7e2536e</anchor>
      <arglist>(const std::string &amp;infile, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MetalSHEelectrons</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>a1e05ccfc7f582dc25942bd0eb3aafd22</anchor>
      <arglist>(XML_Node &amp;phaseRef, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParameters</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>ada0ba2f6093d3df4d86c0f1018005544</anchor>
      <arglist>(int n, doublereal *const c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getParameters</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>af41cd836506ec09138b0c9c327acf1d3</anchor>
      <arglist>(int &amp;n, doublereal *const c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>abe11f2065246742c73c778c5de62f5b7</anchor>
      <arglist>(const XML_Node &amp;eosdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>isothermalCompressibility</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>afbf834ae5cd73373fa5681bbdc329f1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalExpansionCoeff</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>a661ba8332a19cb48e3e03136c1bce6a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>logStandardConc</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>a478bb3efbdc8679b9c922d022c317b0d</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>a6b4cdc30b480b92ed405f95e1f660687</anchor>
      <arglist>(doublereal *mu0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>a2ee9dfc481fbf2c9e915c1e15794d238</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>a6736e153cc33a62e77d8b5bc594cb7c3</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>aadbf5eb5c20c2db5ea363947e883b6be</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT_ref</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>aa84157ca9a671bea6e55ad961fb3156d</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static XML_Node *</type>
      <name>makeDefaultXMLTree</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>a8503ddd0a8048e2d799320ded3e73529</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>isothermalCompressibility</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>afbf834ae5cd73373fa5681bbdc329f1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalExpansionCoeff</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>a661ba8332a19cb48e3e03136c1bce6a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>logStandardConc</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>a478bb3efbdc8679b9c922d022c317b0d</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>a6b4cdc30b480b92ed405f95e1f660687</anchor>
      <arglist>(doublereal *mu0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>a2ee9dfc481fbf2c9e915c1e15794d238</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>a6736e153cc33a62e77d8b5bc594cb7c3</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>aadbf5eb5c20c2db5ea363947e883b6be</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT_ref</name>
      <anchorfile>classCantera_1_1MetalSHEelectrons.html</anchorfile>
      <anchor>aa84157ca9a671bea6e55ad961fb3156d</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::MineralEQ3</name>
    <filename>classCantera_1_1MineralEQ3.html</filename>
    <base>Cantera::StoichSubstance</base>
    <member kind="function">
      <type></type>
      <name>MineralEQ3</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a8a696204ab72c40d98d65895e2d9df9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MineralEQ3</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>aa687019e6174931e30be54cd72cc461b</anchor>
      <arglist>(const std::string &amp;infile, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MineralEQ3</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>ac158ff76807b96699e2192da60eebeb1</anchor>
      <arglist>(XML_Node &amp;phaseRef, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParameters</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>ada0ba2f6093d3df4d86c0f1018005544</anchor>
      <arglist>(int n, doublereal *const c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getParameters</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>af41cd836506ec09138b0c9c327acf1d3</anchor>
      <arglist>(int &amp;n, doublereal *const c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>abe11f2065246742c73c778c5de62f5b7</anchor>
      <arglist>(const XML_Node &amp;eosdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>isothermalCompressibility</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>afbf834ae5cd73373fa5681bbdc329f1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalExpansionCoeff</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a661ba8332a19cb48e3e03136c1bce6a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>logStandardConc</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a478bb3efbdc8679b9c922d022c317b0d</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a6b4cdc30b480b92ed405f95e1f660687</anchor>
      <arglist>(doublereal *mu0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a2ee9dfc481fbf2c9e915c1e15794d238</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a6736e153cc33a62e77d8b5bc594cb7c3</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>aadbf5eb5c20c2db5ea363947e883b6be</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT_ref</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>aa84157ca9a671bea6e55ad961fb3156d</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_Mu0_pr_tr</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a0df0b8a2cecc946c8758cdf9057f670a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_Entrop_pr_tr</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a9d25f6b836fa3be701378d5ec664f1be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_deltaG_formation_pr_tr</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a23bc1775aaa4e101f4b212adacdc12d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_deltaH_formation_pr_tr</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a80fbd2dbf787b8886a6f2d740e480704</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_V0_pr_tr</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>ab3a21827086f68f443e7430280cc289c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_a</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>af2bdd640938eeaa9b9b36516a8964eb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_b</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a33ae780b9b649fb1a7e4b14f862a4304</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_c</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a2e7aa53a8698a2ac206c233d2d187486</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>isothermalCompressibility</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>afbf834ae5cd73373fa5681bbdc329f1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalExpansionCoeff</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a661ba8332a19cb48e3e03136c1bce6a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>logStandardConc</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a478bb3efbdc8679b9c922d022c317b0d</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a6b4cdc30b480b92ed405f95e1f660687</anchor>
      <arglist>(doublereal *mu0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a2ee9dfc481fbf2c9e915c1e15794d238</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>a6736e153cc33a62e77d8b5bc594cb7c3</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>aadbf5eb5c20c2db5ea363947e883b6be</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT_ref</name>
      <anchorfile>classCantera_1_1MineralEQ3.html</anchorfile>
      <anchor>aa84157ca9a671bea6e55ad961fb3156d</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::MixedSolventElectrolyte</name>
    <filename>classCantera_1_1MixedSolventElectrolyte.html</filename>
    <base>Cantera::MolarityIonicVPSSTP</base>
    <member kind="function">
      <type></type>
      <name>MixedSolventElectrolyte</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>ae39a6c1268df479a77097089a81afb1d</anchor>
      <arglist>(const std::string &amp;inputFile, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MixedSolventElectrolyte</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a01130fccb7b17ba3bbb4e628df8831e5</anchor>
      <arglist>(XML_Node &amp;phaseRef, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a20b3c290780f2f094b028e19b63b8e6e</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getd2lnActCoeffdT2</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a22950a59c8b7816b05fae7348699ff81</anchor>
      <arglist>(doublereal *d2lnActCoeffdT2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdT</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a3e608e528b93cf0ae38dcde50abaa77a</anchor>
      <arglist>(doublereal *dlnActCoeffdT) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffds</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>ac33a2e58cc6eb31260200425bb058ddc</anchor>
      <arglist>(const doublereal dTds, const doublereal *const dXds, doublereal *dlnActCoeffds) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnX_diag</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a57a7fa2f18d1b1635b848748ac679ca2</anchor>
      <arglist>(doublereal *dlnActCoeffdlnX_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN_diag</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>abd4c877b1646e599caf7c87d872c7dc3</anchor>
      <arglist>(doublereal *dlnActCoeffdlnN_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a4a2e93544bb41c14ed880a4595e110cc</anchor>
      <arglist>(const size_t ld, doublereal *const dlnActCoeffdlnN)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>numBinaryInteractions_</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a3e97be8157a9776967250e5fe6092269</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_HE_b_ij</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a76da411aaed577b0fe2e26d9922a8248</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_HE_c_ij</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a7b3fd3fb37439feaa3b62501b7980f93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_HE_d_ij</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>aaab5bb05626ef8f1de2f729a1385456c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_SE_b_ij</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a9c5ef9aed4ef6a223d516c8633443c5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_SE_c_ij</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a1116bfe22df50b07813827be00fd61b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_SE_d_ij</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a7d6cd6e0d280171cf820ad4611609f14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_VHE_b_ij</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>aa91c8c1648f90912de7c91ceeedca27f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_VHE_c_ij</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a6f17e21b23998008496b512f3e7bb067</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_VHE_d_ij</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a165a0e3bef029f8492f31947787aaa62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_VSE_b_ij</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>aeeed564c313522f1f48868a68e1fc0c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_VSE_c_ij</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a23d6b4f46bc2c5d107a04f17c4621f6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_VSE_d_ij</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a7aad90580beb73851f72458c65692f15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_pSpecies_A_ij</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a73336923c81bc0951ab24ad6923679a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_pSpecies_B_ij</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>ac81ff27778f560c50d60d5668c870e45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>formMargules_</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a9791be40ec7af06fe61e7f5c5e368e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>formTempModel_</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a31d1c8b9a4ccfcda99571e009d4b614c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>readXMLBinarySpecies</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a4e304c5a0044d22bb156cbd8a977b851</anchor>
      <arglist>(XML_Node &amp;xmlBinarySpecies)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>resizeNumInteractions</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a4d951bbc776f936569b2af3403ce7996</anchor>
      <arglist>(const size_t num)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>initLengths</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>acbd8d9f6e3bcaf6f2115a657e7ce12cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_lnActCoeff</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>ace353fd1300f76a737cd21837ca5011c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnActCoeff_dT</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a734985fc69ffbef2993d9e396d12c442</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnActCoeff_dlnX_diag</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>acdf440da23b10d619f95e8043906f8fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnActCoeff_dlnN_diag</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a47aacd407adbd0eec9c1639b642b005c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnActCoeff_dlnN</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a912b44a90a769f48bbb98805eeb8f3e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a20b3c290780f2f094b028e19b63b8e6e</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getd2lnActCoeffdT2</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a22950a59c8b7816b05fae7348699ff81</anchor>
      <arglist>(doublereal *d2lnActCoeffdT2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdT</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a3e608e528b93cf0ae38dcde50abaa77a</anchor>
      <arglist>(doublereal *dlnActCoeffdT) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffds</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>ac33a2e58cc6eb31260200425bb058ddc</anchor>
      <arglist>(const doublereal dTds, const doublereal *const dXds, doublereal *dlnActCoeffds) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnX_diag</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a57a7fa2f18d1b1635b848748ac679ca2</anchor>
      <arglist>(doublereal *dlnActCoeffdlnX_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN_diag</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>abd4c877b1646e599caf7c87d872c7dc3</anchor>
      <arglist>(doublereal *dlnActCoeffdlnN_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN</name>
      <anchorfile>classCantera_1_1MixedSolventElectrolyte.html</anchorfile>
      <anchor>a4a2e93544bb41c14ed880a4595e110cc</anchor>
      <arglist>(const size_t ld, doublereal *const dlnActCoeffdlnN)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::MixTransport</name>
    <filename>classCantera_1_1MixTransport.html</filename>
    <base>Cantera::GasTransport</base>
    <member kind="function">
      <type></type>
      <name>MixTransport</name>
      <anchorfile>classCantera_1_1MixTransport.html</anchorfile>
      <anchor>a9d362c4e376860701ccd78a99c3cba3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>transportType</name>
      <anchorfile>classCantera_1_1MixTransport.html</anchorfile>
      <anchor>aaa616493275cb1d7fb3ba980ec3cd467</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getThermalDiffCoeffs</name>
      <anchorfile>classCantera_1_1MixTransport.html</anchorfile>
      <anchor>a0242eeac6a86b61e2d2d613ad7a4fb0d</anchor>
      <arglist>(doublereal *const dt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalConductivity</name>
      <anchorfile>classCantera_1_1MixTransport.html</anchorfile>
      <anchor>a2485777400132063dc233a7af516e66d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMobilities</name>
      <anchorfile>classCantera_1_1MixTransport.html</anchorfile>
      <anchor>a7f87ca1b4b1b288143ba5ec516e0faef</anchor>
      <arglist>(doublereal *const mobil)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>update_T</name>
      <anchorfile>classCantera_1_1MixTransport.html</anchorfile>
      <anchor>a3ba7962c9154b9bdb5b212fa2bc11af2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>update_C</name>
      <anchorfile>classCantera_1_1MixTransport.html</anchorfile>
      <anchor>aac6f7fb80ff080f20310385ea1375dcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesFluxes</name>
      <anchorfile>classCantera_1_1MixTransport.html</anchorfile>
      <anchor>ac10f3352c5356776215dfdad3fb61e40</anchor>
      <arglist>(size_t ndim, const doublereal *const grad_T, size_t ldx, const doublereal *const grad_X, size_t ldf, doublereal *const fluxes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1MixTransport.html</anchorfile>
      <anchor>a6ce9b4b2b46f174a507085af66fec1cf</anchor>
      <arglist>(thermo_t *thermo, int mode=0, int log_level=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>doublereal</type>
      <name>pressure_ig</name>
      <anchorfile>classCantera_1_1MixTransport.html</anchorfile>
      <anchor>a613470578d199e71cc5b0ed6b77941f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCond_T</name>
      <anchorfile>classCantera_1_1MixTransport.html</anchorfile>
      <anchor>a90d943c4451c8de9675e8a7afe50aa2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_cond</name>
      <anchorfile>classCantera_1_1MixTransport.html</anchorfile>
      <anchor>a3e51ca17bb091bc28580d59345b705af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_lambda</name>
      <anchorfile>classCantera_1_1MixTransport.html</anchorfile>
      <anchor>a9ed9b13e7f50d75387c7d3c9d45f275b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_spcond_ok</name>
      <anchorfile>classCantera_1_1MixTransport.html</anchorfile>
      <anchor>a62cf0a13b9831bae5b72026c5594bffa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_condmix_ok</name>
      <anchorfile>classCantera_1_1MixTransport.html</anchorfile>
      <anchor>abbc92594bf988d00a4ddf32c512a903b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::MixtureFugacityTP</name>
    <filename>classCantera_1_1MixtureFugacityTP.html</filename>
    <base>Cantera::ThermoPhase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTemperature</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>aaefc9c80c1f44914510e3e9918162af8</anchor>
      <arglist>(const doublereal temp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TP</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a4b3aca2f8b6cf179e8fd69ca6328f81e</anchor>
      <arglist>(doublereal T, doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TPX</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a5a95360d8ebf90e0c5cda5edd578cdf6</anchor>
      <arglist>(doublereal t, doublereal p, const doublereal *x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MixtureFugacityTP</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>ae0fa54bcfb9e66750fda1c194e9b0969</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>standardStateConvention</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a9d52b1e6dbfedae76514ccd11430242e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setForcedSolutionBranch</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>ad5f7cf95cf419848ab5281552ef4e128</anchor>
      <arglist>(int solnBranch)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>forcedSolutionBranch</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>ac74c162999e9eb15e4c317cbec502496</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>reportSolnBranchActual</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a0c1c85adcc346f0ad9eafdd56a1bddf6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN_diag</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a4ec20967d5c97e5cb56c5db00c76e1e8</anchor>
      <arglist>(doublereal *dlnActCoeffdlnN_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials_RT</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>acf1ae24d0fbef55963df3598f134d699</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>ac2dc95575420c5c767a7fe4e6161e892</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a2ee9dfc481fbf2c9e915c1e15794d238</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPureGibbs</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>aeb7a9744545e2854ced11ea7634dfe49</anchor>
      <arglist>(doublereal *gpure) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>aadbf5eb5c20c2db5ea363947e883b6be</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a6736e153cc33a62e77d8b5bc594cb7c3</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a4eedbc0d1542fc11b951588856220254</anchor>
      <arglist>(doublereal *vol) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStateFromXML</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a01e155d014f6e4b4fd3121fda565fc7d</anchor>
      <arglist>(const XML_Node &amp;state)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>calcDensity</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>afac1b45437d49cc161e7ca2d5c00906a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>compositionChanged</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>ac901f42e1d2a9513f06eacccf09e11a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>_updateReferenceStateThermo</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a4edf16d77366bc82e7339d57862398c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>invalidateCache</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>ae4f5daed0983e1d3bfb144a5078d75cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>moleFractions_</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>ab89db7a7582fe8ccceeb7dbd1e68475f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>iState_</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a04b90413b51a1b773b3843a9ba9ae263</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>forcedState_</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>ac65b87dd74775c3d9c70749887aa51be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_Tlast_ref</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>ab9892104ce0dcf533b0c4cc1deea1b50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_h0_RT</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a3c5e8d8c0d3a1e74b657da7f4e9014bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_cp0_R</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a0f99f8895cc2109fd4dcebb729d615fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_g0_RT</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a0b34289ccbc27c3af431627fd7a3a4fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_s0_R</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a56e8ca74ece671716ff2cb73967e1576</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MixtureFugacityTP</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>ae0fa54bcfb9e66750fda1c194e9b0969</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>standardStateConvention</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a9d52b1e6dbfedae76514ccd11430242e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setForcedSolutionBranch</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>ad5f7cf95cf419848ab5281552ef4e128</anchor>
      <arglist>(int solnBranch)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>forcedSolutionBranch</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>ac74c162999e9eb15e4c317cbec502496</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>reportSolnBranchActual</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a0c1c85adcc346f0ad9eafdd56a1bddf6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN_diag</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a4ec20967d5c97e5cb56c5db00c76e1e8</anchor>
      <arglist>(doublereal *dlnActCoeffdlnN_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials_RT</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>acf1ae24d0fbef55963df3598f134d699</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>ac2dc95575420c5c767a7fe4e6161e892</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a2ee9dfc481fbf2c9e915c1e15794d238</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPureGibbs</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>aeb7a9744545e2854ced11ea7634dfe49</anchor>
      <arglist>(doublereal *gpure) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>aadbf5eb5c20c2db5ea363947e883b6be</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a6736e153cc33a62e77d8b5bc594cb7c3</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a4eedbc0d1542fc11b951588856220254</anchor>
      <arglist>(doublereal *vol) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>af9328613fd7ac31d213f4fd284d8ad63</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT_ref</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a15142ba0b60259900efafd8026b51c96</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_ref</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>ae4ec4c8979d7a4b5deb6faf52697a068</anchor>
      <arglist>(doublereal *g) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R_ref</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a9d67a94aa582d60860f4658ea11e1aa3</anchor>
      <arglist>(doublereal *er) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R_ref</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>ab511be0c8fe8538e41b1b74d5bc4f7df</anchor>
      <arglist>(doublereal *cprt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes_ref</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>ac3f1e890abfc6656dc6d0534f7516453</anchor>
      <arglist>(doublereal *vol) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const vector_fp &amp;</type>
      <name>gibbs_RT_ref</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a94ae6db2b8c3e512599dd414d29377ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStateFromXML</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a01e155d014f6e4b4fd3121fda565fc7d</anchor>
      <arglist>(const XML_Node &amp;state)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>liquidVolEst</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a893b965a1c37f7c9b553597a79f4d1ff</anchor>
      <arglist>(doublereal TKelvin, doublereal &amp;pres) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>densityCalc</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a81861a3c323d48d70dbe5e7b0ab4285c</anchor>
      <arglist>(doublereal TKelvin, doublereal pressure, int phaseRequested, doublereal rhoguess)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>phaseState</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>af857741cdc8e8de7df7cd6950e102e82</anchor>
      <arglist>(bool checkState=false) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>densSpinodalLiquid</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>ae086ec5dc7ddb7d22685405d6bbcd1e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>densSpinodalGas</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>aa561ac734f7f8f0d6cb6fea4fce76df4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>calculatePsat</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>abe90381fc2fd32b7866094a3af87506c</anchor>
      <arglist>(doublereal TKelvin, doublereal &amp;molarVolGas, doublereal &amp;molarVolLiquid)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>satPressure</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a45559b32c61e4f8fd75abb83cc886d93</anchor>
      <arglist>(doublereal TKelvin)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>doublereal</type>
      <name>z</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a3a439af05b3c80819c86b494457d1968</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>sresid</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a65a87cb96a3df3b1246ed19b69890f60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>hresid</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a2f8b9901214720870ca3a37b3f80a665</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>psatEst</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a84fc0458737d44f8bac56c42bc65124e</anchor>
      <arglist>(doublereal TKelvin) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>corr0</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>ad69df60eb301b79ae42d4f19e0ce017b</anchor>
      <arglist>(doublereal TKelvin, doublereal pres, doublereal &amp;densLiq, doublereal &amp;densGas, doublereal &amp;liqGRT, doublereal &amp;gasGRT)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressureCalc</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>ab6e7cfa95d61b2dd630efaff655a748e</anchor>
      <arglist>(doublereal TKelvin, doublereal molarVol) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>dpdVCalc</name>
      <anchorfile>classCantera_1_1MixtureFugacityTP.html</anchorfile>
      <anchor>a6237d5174d00b5576c8e920feb3dcafd</anchor>
      <arglist>(doublereal TKelvin, doublereal molarVol, doublereal &amp;presCalc) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::MMCollisionInt</name>
    <filename>classCantera_1_1MMCollisionInt.html</filename>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1MMCollisionInt.html</anchorfile>
      <anchor>ad6931529722c8ee8d886584511efdec1</anchor>
      <arglist>(doublereal tsmin, doublereal tsmax, int loglevel=0)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_logTemp</name>
      <anchorfile>classCantera_1_1MMCollisionInt.html</anchorfile>
      <anchor>ac381a9ef38b558bbed5059b52e514165</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_loglevel</name>
      <anchorfile>classCantera_1_1MMCollisionInt.html</anchorfile>
      <anchor>a478156bbbbd963be442e55f708ffc7c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static doublereal</type>
      <name>omega22_table</name>
      <anchorfile>classCantera_1_1MMCollisionInt.html</anchorfile>
      <anchor>ac4aad36793ea0ff8a17136219a31b9e3</anchor>
      <arglist>[37 *8]</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static doublereal</type>
      <name>tstar</name>
      <anchorfile>classCantera_1_1MMCollisionInt.html</anchorfile>
      <anchor>ac4030d9ee5e3d3812e807a8e926eb025</anchor>
      <arglist>[39]</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static doublereal</type>
      <name>astar_table</name>
      <anchorfile>classCantera_1_1MMCollisionInt.html</anchorfile>
      <anchor>a7250feb76a1a9dd16e315892a824e40b</anchor>
      <arglist>[39 *8]</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static doublereal</type>
      <name>bstar_table</name>
      <anchorfile>classCantera_1_1MMCollisionInt.html</anchorfile>
      <anchor>ae287370155758494d6ea14ceaacfd896</anchor>
      <arglist>[39 *8]</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static doublereal</type>
      <name>cstar_table</name>
      <anchorfile>classCantera_1_1MMCollisionInt.html</anchorfile>
      <anchor>aa0ba1b214552e6f1158662a4395ed67f</anchor>
      <arglist>[39 *8]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::MolalityVPSSTP</name>
    <filename>classCantera_1_1MolalityVPSSTP.html</filename>
    <base>Cantera::VPStandardStateTP</base>
    <member kind="function">
      <type></type>
      <name>MolalityVPSSTP</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>aa04635f7b07bd5b971cabf80fbf44898</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStateFromXML</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a01e155d014f6e4b4fd3121fda565fc7d</anchor>
      <arglist>(const XML_Node &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_TPM</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>af1d4fc0ded1e1c95d337c8d219a6af65</anchor>
      <arglist>(doublereal t, doublereal p, const doublereal *const molalities)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_TPM</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a4e50c6fbd5b2dfda22b74f262384f1c9</anchor>
      <arglist>(doublereal t, doublereal p, const compositionMap &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_TPM</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>ab4ecbafd5e5c756be1af4457ccb21bf7</anchor>
      <arglist>(doublereal t, doublereal p, const std::string &amp;m)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a1a168c02a8113ecd5a51d3f0a2b66c0d</anchor>
      <arglist>(const size_t ld, doublereal *const dlnActCoeffdlnN)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>report</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a288ad853571d32273b68fdcaf9dae337</anchor>
      <arglist>(bool show_thermo=true, doublereal threshold=1e-14) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setpHScale</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a6446e4cc9e42a90863ca9771d80587aa</anchor>
      <arglist>(const int pHscaleType)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pHScale</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a5c845c88e6f6eb85a14c1fad2621d13d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSolvent</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a4dd04dc414abb07c1af62a2ab668ceab</anchor>
      <arglist>(size_t k)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>solventIndex</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a54531cddb932d1b0cf85bb6fb3b42138</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMoleFSolventMin</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a6ad5fa689895409e89b61a96fd4877fa</anchor>
      <arglist>(doublereal xmolSolventMIN)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>moleFSolventMin</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a1f931621d797c80878e8cbf498554c5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calcMolalities</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>acbad49aab883edf0bbf1c4712bba7f80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMolalities</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a2358e94e390ee74d27b7e21b057d50fa</anchor>
      <arglist>(doublereal *const molal) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMolalities</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a53511e1c425da67833f12ed1fe8b9cc0</anchor>
      <arglist>(const doublereal *const molal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMolalitiesByName</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a18900f8cde7ae87c335dc84d3f8861b3</anchor>
      <arglist>(const compositionMap &amp;xMap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMolalitiesByName</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>ae7331b4286e8d742dfc0b31132064663</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>activityConvention</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a89a141b339cf4b95a7d1d56f3856b759</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivities</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>aeb478e46bb453a06465f89e93bc07531</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a20b3c290780f2f094b028e19b63b8e6e</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMolalityActivityCoefficients</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a3b087f2354f955fa780995964f973fca</anchor>
      <arglist>(doublereal *acMolality) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>osmoticCoefficient</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a4f6879f57b997ee084edb67a071fac6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getCsvReportData</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a67bc767f0949e2dc9ff6789d33abd070</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;names, std::vector&lt; vector_fp &gt; &amp;data) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getUnscaledMolalityActivityCoefficients</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a32bd1bca16dd9dc624db6dfd51138642</anchor>
      <arglist>(doublereal *acMolality) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>applyphScale</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a0ecf2139ec8e0c61bdcb8b16e12e6e99</anchor>
      <arglist>(doublereal *acMolality) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_pHScalingType</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a9527256949489ea9db41947b164f8eb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_indexCLM</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a41aff2dafcb8e27574c69848fe35bb67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_weightSolvent</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>afbafe31b57cc5e87516a6aecbf6d6ec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_xmolSolventMIN</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a9324079811a659fcae31e5796de1a4f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_Mnaught</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>ac965d1ae1cee2ba64477077bc54a4704</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_molalities</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>ae1704ccfc0e2e111cfe8e7cbdfc4726f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual size_t</type>
      <name>findCLMIndex</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a48ce77180026508220a9a33eaf826b5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setpHScale</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a6446e4cc9e42a90863ca9771d80587aa</anchor>
      <arglist>(const int pHscaleType)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pHScale</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a5c845c88e6f6eb85a14c1fad2621d13d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSolvent</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a4dd04dc414abb07c1af62a2ab668ceab</anchor>
      <arglist>(size_t k)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>solventIndex</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a54531cddb932d1b0cf85bb6fb3b42138</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMoleFSolventMin</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a6ad5fa689895409e89b61a96fd4877fa</anchor>
      <arglist>(doublereal xmolSolventMIN)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>moleFSolventMin</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a1f931621d797c80878e8cbf498554c5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calcMolalities</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>acbad49aab883edf0bbf1c4712bba7f80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMolalities</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a2358e94e390ee74d27b7e21b057d50fa</anchor>
      <arglist>(doublereal *const molal) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMolalities</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a53511e1c425da67833f12ed1fe8b9cc0</anchor>
      <arglist>(const doublereal *const molal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMolalitiesByName</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a18900f8cde7ae87c335dc84d3f8861b3</anchor>
      <arglist>(const compositionMap &amp;xMap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMolalitiesByName</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>ae7331b4286e8d742dfc0b31132064663</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>activityConvention</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a89a141b339cf4b95a7d1d56f3856b759</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivities</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>aeb478e46bb453a06465f89e93bc07531</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a20b3c290780f2f094b028e19b63b8e6e</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMolalityActivityCoefficients</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a3b087f2354f955fa780995964f973fca</anchor>
      <arglist>(doublereal *acMolality) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>osmoticCoefficient</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a4f6879f57b997ee084edb67a071fac6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1MolalityVPSSTP.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::MolarityIonicVPSSTP</name>
    <filename>classCantera_1_1MolarityIonicVPSSTP.html</filename>
    <base>Cantera::GibbsExcessVPSSTP</base>
    <member kind="function">
      <type></type>
      <name>MolarityIonicVPSSTP</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a24ef0bcffd397f4bb57a8895ed0e3308</anchor>
      <arglist>(const std::string &amp;inputFile, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MolarityIonicVPSSTP</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a8967b4e4c74dc4ed2ab3dc921fd3edf0</anchor>
      <arglist>(XML_Node &amp;phaseRef, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>calcPseudoBinaryMoleFractions</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a139f53c5642b4b6124c526a97d1c460e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>report</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a288ad853571d32273b68fdcaf9dae337</anchor>
      <arglist>(bool show_thermo=true, doublereal threshold=1e-14) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getLnActivityCoefficients</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a2875fc50fe1a245ae531610323d7703e</anchor>
      <arglist>(doublereal *lnac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>PBType_</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a559808c22eee146bb2ceeaab3f82d6ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>numPBSpecies_</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a73352c934aa5b3021cfce78c38653bba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>cationList_</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a856511826beef995288ae3773e7dae36</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>initLengths</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>acbd8d9f6e3bcaf6f2115a657e7ce12cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>readXMLBinarySpecies</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a4e304c5a0044d22bb156cbd8a977b851</anchor>
      <arglist>(XML_Node &amp;xmlBinarySpecies)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_lnActCoeff</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>ace353fd1300f76a737cd21837ca5011c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnActCoeff_dT</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a734985fc69ffbef2993d9e396d12c442</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnActCoeff_dX_</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a07e19dc878b4dad24fa8a7380556f22b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getLnActivityCoefficients</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a2875fc50fe1a245ae531610323d7703e</anchor>
      <arglist>(doublereal *lnac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1MolarityIonicVPSSTP.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Mu0Poly</name>
    <filename>classCantera_1_1Mu0Poly.html</filename>
    <base>Cantera::SpeciesThermoInterpType</base>
    <member kind="function">
      <type></type>
      <name>Mu0Poly</name>
      <anchorfile>classCantera_1_1Mu0Poly.html</anchorfile>
      <anchor>aaa358e8126bc6ee6a3dc0e2d3d5c0917</anchor>
      <arglist>(double tlow, double thigh, double pref, const double *coeffs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>reportType</name>
      <anchorfile>classCantera_1_1Mu0Poly.html</anchorfile>
      <anchor>ae2d249a609d29261db259191f2100f4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateProperties</name>
      <anchorfile>classCantera_1_1Mu0Poly.html</anchorfile>
      <anchor>acb928ca625bcbc618f12e9ec8feef13d</anchor>
      <arglist>(const doublereal *tt, doublereal *cp_R, doublereal *h_RT, doublereal *s_R) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updatePropertiesTemp</name>
      <anchorfile>classCantera_1_1Mu0Poly.html</anchorfile>
      <anchor>a9ad26486b7aa404ff87b29b61472b7e9</anchor>
      <arglist>(const doublereal temp, doublereal *cp_R, doublereal *h_RT, doublereal *s_R) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reportParameters</name>
      <anchorfile>classCantera_1_1Mu0Poly.html</anchorfile>
      <anchor>aa644859d921972e54e88c4f9ea56d854</anchor>
      <arglist>(size_t &amp;n, int &amp;type, doublereal &amp;tlow, doublereal &amp;thigh, doublereal &amp;pref, doublereal *const coeffs) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_numIntervals</name>
      <anchorfile>classCantera_1_1Mu0Poly.html</anchorfile>
      <anchor>ab1a8f080de854c73aaf53ba7fec666cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_H298</name>
      <anchorfile>classCantera_1_1Mu0Poly.html</anchorfile>
      <anchor>a3417e3b6c0944a39f86ac94d690492b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_t0_int</name>
      <anchorfile>classCantera_1_1Mu0Poly.html</anchorfile>
      <anchor>aeb84d0fbb895c54151007d2cc68d1345</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_mu0_R_int</name>
      <anchorfile>classCantera_1_1Mu0Poly.html</anchorfile>
      <anchor>a4603b4412bf4c464afdc27fdd33ca41c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_h0_R_int</name>
      <anchorfile>classCantera_1_1Mu0Poly.html</anchorfile>
      <anchor>af0d3b24084605e06e0421514ebcd0d0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_s0_R_int</name>
      <anchorfile>classCantera_1_1Mu0Poly.html</anchorfile>
      <anchor>aa8a2d5af2bbb165449f4e7d338ad27d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_cp0_R_int</name>
      <anchorfile>classCantera_1_1Mu0Poly.html</anchorfile>
      <anchor>a9481a36711e4aa720976edbf0c2af883</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>processCoeffs</name>
      <anchorfile>classCantera_1_1Mu0Poly.html</anchorfile>
      <anchor>aa1546f9f3611c3d83e34c810f90b5e2a</anchor>
      <arglist>(const doublereal *coeffs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::MultiJac</name>
    <filename>classCantera_1_1MultiJac.html</filename>
    <base>Cantera::BandMatrix</base>
    <member kind="function">
      <type>void</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1MultiJac.html</anchorfile>
      <anchor>a48c5fe865af43e47a39a5529e2971639</anchor>
      <arglist>(doublereal *x0, doublereal *resid0, double rdt)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>elapsedTime</name>
      <anchorfile>classCantera_1_1MultiJac.html</anchorfile>
      <anchor>aae469dc4cf35026159b66106f9f7df5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nEvals</name>
      <anchorfile>classCantera_1_1MultiJac.html</anchorfile>
      <anchor>a19997a129c9e3b2fa74e95145334c6e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>age</name>
      <anchorfile>classCantera_1_1MultiJac.html</anchorfile>
      <anchor>ab7f3e75abc8e70056ff6b8942023ff03</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>incrementAge</name>
      <anchorfile>classCantera_1_1MultiJac.html</anchorfile>
      <anchor>a9e8878f4214c030942dd195f28ba81ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAge</name>
      <anchorfile>classCantera_1_1MultiJac.html</anchorfile>
      <anchor>a23e901febda7a2f14791b3557c247df0</anchor>
      <arglist>(int age)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OneDim *</type>
      <name>m_resid</name>
      <anchorfile>classCantera_1_1MultiJac.html</anchorfile>
      <anchor>acb9c8e182f4a99d33b56bb201272a03a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::MultiNewton</name>
    <filename>classCantera_1_1MultiNewton.html</filename>
    <member kind="function">
      <type>void</type>
      <name>step</name>
      <anchorfile>classCantera_1_1MultiNewton.html</anchorfile>
      <anchor>af5009605c1e1c2c67825f40391fe3785</anchor>
      <arglist>(doublereal *x, doublereal *step, OneDim &amp;r, MultiJac &amp;jac, int loglevel)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>boundStep</name>
      <anchorfile>classCantera_1_1MultiNewton.html</anchorfile>
      <anchor>a257e945ff14fea0ef55348772ac9c481</anchor>
      <arglist>(const doublereal *x0, const doublereal *step0, const OneDim &amp;r, int loglevel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dampStep</name>
      <anchorfile>classCantera_1_1MultiNewton.html</anchorfile>
      <anchor>a7ada3ff2fad1ae208bd3a96e8849c6fe</anchor>
      <arglist>(const doublereal *x0, const doublereal *step0, doublereal *x1, doublereal *step1, doublereal &amp;s1, OneDim &amp;r, MultiJac &amp;jac, int loglevel, bool writetitle)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>norm2</name>
      <anchorfile>classCantera_1_1MultiNewton.html</anchorfile>
      <anchor>ae967cabef7bda001c943dc049ab92f50</anchor>
      <arglist>(const doublereal *x, const doublereal *step, OneDim &amp;r) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>classCantera_1_1MultiNewton.html</anchorfile>
      <anchor>ad45b7554fc7ece5b2001db2185e7e5cc</anchor>
      <arglist>(doublereal *x0, doublereal *x1, OneDim &amp;r, MultiJac &amp;jac, int loglevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOptions</name>
      <anchorfile>classCantera_1_1MultiNewton.html</anchorfile>
      <anchor>aac7f844c8db84b7a4a02f038df157653</anchor>
      <arglist>(int maxJacAge=5)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classCantera_1_1MultiNewton.html</anchorfile>
      <anchor>a1089f8114b16a475dedd4828fbf2a5b1</anchor>
      <arglist>(size_t points)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_x</name>
      <anchorfile>classCantera_1_1MultiNewton.html</anchorfile>
      <anchor>a235e43d360bbe2f315ff6156d60c7207</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_n</name>
      <anchorfile>classCantera_1_1MultiNewton.html</anchorfile>
      <anchor>ad18a41dcde89b118c3d486d3aa5b5e14</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::MultiPhase</name>
    <filename>classCantera_1_1MultiPhase.html</filename>
    <member kind="function">
      <type></type>
      <name>MultiPhase</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>adc707ea901537f18ae0e1d66b44a30a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiPhase</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>ad170d616a702741373e5e4bf7690ec42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPhases</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>adbecca459670f879b9a9c9bccc2c5f2e</anchor>
      <arglist>(std::vector&lt; ThermoPhase *&gt; &amp;phases, const vector_fp &amp;phaseMoles)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPhases</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a205db7e565bd460241b2cafe44b61204</anchor>
      <arglist>(MultiPhase &amp;mix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPhase</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>ade90c01f0c41adbe1864554e327c12eb</anchor>
      <arglist>(ThermoPhase *p, doublereal moles)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nElements</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>ad0aca0bf5bd91eebb8f6769bb319f869</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkElementIndex</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>ae67d7b93f36c4a874722ece717d6a4e6</anchor>
      <arglist>(size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkElementArraySize</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a925c5ef8d9e7b745bd22b0afe8554a14</anchor>
      <arglist>(size_t mm) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>elementName</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a8858ee36a35cbf6413f7cbb23d1e662e</anchor>
      <arglist>(size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>elementIndex</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a7ee9d9816e7ccdc24ce5faae35216bdd</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nSpecies</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a2855dfb296334bcd93820d6d90865e08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkSpeciesIndex</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a1b9b39ffa71f92452cc4c8c0f419e3a5</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkSpeciesArraySize</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>acb8933c8503b6e66aedd262054a446a6</anchor>
      <arglist>(size_t kk) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>speciesName</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a7bc9c059d4c5a1a5ba3077dbbc1ae6c0</anchor>
      <arglist>(const size_t kGlob) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>nAtoms</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a8a115059fddba39493459d2ebaf3adf6</anchor>
      <arglist>(const size_t kGlob, const size_t mGlob) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMoleFractions</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a04eed23312633c3a440512b55f115143</anchor>
      <arglist>(doublereal *const x) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a02fd73d861ef2e4aabb38c0c9ff82947</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>phaseName</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>aa797160dbb5a57e32c97782030da3453</anchor>
      <arglist>(const size_t iph) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>phaseIndex</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>ad5ff88817e2db15006abd8432b3b2649</anchor>
      <arglist>(const std::string &amp;pName) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>phaseMoles</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a6b26fc3c098ea15ad8a2efb12a60f3ff</anchor>
      <arglist>(const size_t n) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPhaseMoles</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>ac3c03cf55676687a719d54465ccaae81</anchor>
      <arglist>(const size_t n, const doublereal moles)</arglist>
    </member>
    <member kind="function">
      <type>thermo_t &amp;</type>
      <name>phase</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>ae84be5c40a8984b32a550206188fa445</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkPhaseIndex</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a068816a509d8f29870c0fca0a56fb0d5</anchor>
      <arglist>(size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkPhaseArraySize</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a5a2b902fcf0cbf4e286d18eade14bfb8</anchor>
      <arglist>(size_t mm) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>speciesMoles</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a45df02ca6868f7cc71d65ea7207f58e7</anchor>
      <arglist>(size_t kGlob) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>speciesIndex</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a07d1fe9a3c37b0580f1f2aee99957ebd</anchor>
      <arglist>(size_t k, size_t p) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>speciesIndex</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>adb10f5138a2096552777ef7a6431b4b4</anchor>
      <arglist>(const std::string &amp;speciesName, const std::string &amp;phaseName)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>minTemp</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a2177c1e9ecf43eb8ac9b70d770008bc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>maxTemp</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a0004797248f9be8173ddbdf40c0b629d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>charge</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>aa5c3fd7e0f8494f46425865b80eafd4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>phaseCharge</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>ae69fc02b3770d16f72d22d78f9b6f73c</anchor>
      <arglist>(size_t p) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>elementMoles</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>aa40144d1ce00f02c1b150e38656670ff</anchor>
      <arglist>(size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getValidChemPotentials</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>aa8f9b514d24c581bf109c0aebc5b101e</anchor>
      <arglist>(doublereal not_mu, doublereal *mu, bool standard=false) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>temperature</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>ad0673abef723187fd991cb90c658c9c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>equilibrate</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>gaf658f6d2afb439d254b43166f270861e</anchor>
      <arglist>(const std::string &amp;XY, const std::string &amp;solver=&quot;auto&quot;, double rtol=1e-9, int max_steps=50000, int max_iter=100, int estimate_equil=0, int log_level=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTemperature</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>afb8cfd499f2ec09259aec30c32de3028</anchor>
      <arglist>(const doublereal T)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_TP</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>aa96953afc253cca52a1c700c096244c8</anchor>
      <arglist>(const doublereal T, const doublereal Pres)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_TPMoles</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a05a5dbc9dc7fa20b5d3eb453ff073a67</anchor>
      <arglist>(const doublereal T, const doublereal Pres, const doublereal *Moles)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>volume</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>ac05f51a9dd0a527596179ce9ebf302d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>aa254243637f45c9c9cbcbc416698a9e0</anchor>
      <arglist>(doublereal P)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>enthalpy</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a39484fc3f637e61425bf60223b3eb07e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>IntEnergy</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a54807e0de9bdcb6596adc4ebf136bdcc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>entropy</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>aadab4de62af9cc25a3d2840ec81329be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>gibbs</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a2a821d6f631abe0c6a63d5409bb38add</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>cp</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a2b8e715acf6238da831889ff3354b1cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nPhases</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a64405435dd8fb04097d842fd3253ad7c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solutionSpecies</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a08652d63bcfd684c9da346fd95d8647e</anchor>
      <arglist>(size_t kGlob) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>speciesPhaseIndex</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a92c251d07d3194c6ef23035e20b23e99</anchor>
      <arglist>(const size_t kGlob) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>moleFraction</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a6ae6ab2371de472bc9c5d61074e1da57</anchor>
      <arglist>(const size_t kGlob) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPhaseMoleFractions</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>aa5bcf27632c3eb3bb7713a74035a49ca</anchor>
      <arglist>(const size_t n, const doublereal *const x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMolesByName</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>aae204a638cc27ea2ef93da1567c782a6</anchor>
      <arglist>(const compositionMap &amp;xMap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMolesByName</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a9803b4e68a5f57236bd01a6b43f3cf9c</anchor>
      <arglist>(const std::string &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMoles</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a1773177e8423c6adfa29ff3170a929e3</anchor>
      <arglist>(doublereal *molNum) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMoles</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a12ec268c02b625ced52470d6cb02a570</anchor>
      <arglist>(const doublereal *n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSpeciesMoles</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a46265fb8ab3e4749f91db42deb8ab511</anchor>
      <arglist>(const int indexS, const doublereal addedMoles)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElemAbundances</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>acbad2dd2eb49b60f486333c357b5d255</anchor>
      <arglist>(doublereal *elemAbundances) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tempOK</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a81cbcc68b7a5c7b4701761753d4924a9</anchor>
      <arglist>(size_t p) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uploadMoleFractionsFromPhases</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>abfb23dea4d983a9894a67b186509131d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updatePhases</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>ac2ce5c4f6a8223ee793184282a84a270</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>calcElemAbundances</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a26f7f469c038ae59e8c2125f1ef13d20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>equilibrate_MultiPhaseEquil</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a237ca93df765bcccb4074eaa550bdc72</anchor>
      <arglist>(int XY, doublereal err, int maxsteps, int maxiter, int loglevel)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_moles</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a6105c8b3adf12756c8d55796f4f1dc0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; ThermoPhase * &gt;</type>
      <name>m_phase</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>ada901fe6779b531c5db6a5f41f9e2843</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DenseMatrix</type>
      <name>m_atoms</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a175a2addda8dd3572512ec87636ee88c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_moleFractions</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a214fb97cbad7e21caf7c910d6f601472</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_spphase</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a77fbf8720151f2ffe3fee61ff0f3e979</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_spstart</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a5c49fe41aa5f10c369e43207bc3f3e90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_enames</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a96bd7d367edb3b757f40ea6b9444c3bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_int</type>
      <name>m_atomicNumber</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a7d493e99f4d658d30ba8555bd8a7a360</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_snames</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a7bc62d712e91ff1dc28fa09a720fcfd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, size_t &gt;</type>
      <name>m_enamemap</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a3e0ed3487b68e1436e69cfb04c50d7b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_temp</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a4d64276995e8b70bb4a09b47c20547f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_press</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a0edab2fddaaaa5321a40af0cbca697cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>m_nel</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a1d27931aaaa41decdb82fc10fdccf2c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>m_nsp</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>ab3e6c2c66c42af05f67bbe604928bd21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_init</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>ac02d1006f898266a149eab36b30a5561</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>m_eloc</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a680344ee860b0091474f3758f03d44a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; bool &gt;</type>
      <name>m_temp_OK</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>ad5e60bea3fe41d8563e83650a94a75b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_Tmin</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a5fc6edb254dcb31c785307dd4c3a5e44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_Tmax</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a5e3baa3a4850fe491857db0decb38494</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_elemAbundances</name>
      <anchorfile>classCantera_1_1MultiPhase.html</anchorfile>
      <anchor>a5bcfa434f6f3f10a513406733d77ea5a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::MultiPhaseEquil</name>
    <filename>classCantera_1_1MultiPhaseEquil.html</filename>
    <member kind="function">
      <type></type>
      <name>MultiPhaseEquil</name>
      <anchorfile>classCantera_1_1MultiPhaseEquil.html</anchorfile>
      <anchor>aa6da46127210e1ba9c477d77386976c7</anchor>
      <arglist>(MultiPhase *mix, bool start=true, int loglevel=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getComponents</name>
      <anchorfile>classCantera_1_1MultiPhaseEquil.html</anchorfile>
      <anchor>a0cd2fbbd7d169c2d64fffe798d714997</anchor>
      <arglist>(const std::vector&lt; size_t &gt; &amp;order)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>setInitialMoles</name>
      <anchorfile>classCantera_1_1MultiPhaseEquil.html</anchorfile>
      <anchor>ae8b79b99bd0e3b3af1e39ca989eddb9e</anchor>
      <arglist>(int loglevel=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>doublereal</type>
      <name>stepComposition</name>
      <anchorfile>classCantera_1_1MultiPhaseEquil.html</anchorfile>
      <anchor>a822085e4f82a8bd811b24d379bc06c56</anchor>
      <arglist>(int loglevel=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unsort</name>
      <anchorfile>classCantera_1_1MultiPhaseEquil.html</anchorfile>
      <anchor>a5914b9db3b0d9c2b1f56233d29431f8e</anchor>
      <arglist>(vector_fp &amp;x)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>doublereal</type>
      <name>computeReactionSteps</name>
      <anchorfile>classCantera_1_1MultiPhaseEquil.html</anchorfile>
      <anchor>a461e180f7a8e141b3ba98d061a284de3</anchor>
      <arglist>(vector_fp &amp;dxi)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>finish</name>
      <anchorfile>classCantera_1_1MultiPhaseEquil.html</anchorfile>
      <anchor>a6dfe1abe0d1eb3ddc1ca081de98b5342</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>size_t</type>
      <name>nFree</name>
      <anchorfile>classCantera_1_1MultiPhaseEquil.html</anchorfile>
      <anchor>a7b46bd29aca982fabe28f9585b790438</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::MultiSpeciesThermo</name>
    <filename>classCantera_1_1MultiSpeciesThermo.html</filename>
    <member kind="function">
      <type></type>
      <name>MultiSpeciesThermo</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>a0e8ad62fc1b56d0cda663ae6b768a9e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>install_STIT</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>a2e4832c0163d1bc7ee91c1b8fb9f2fde</anchor>
      <arglist>(size_t index, shared_ptr&lt; SpeciesThermoInterpType &gt; stit)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>modifySpecies</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>a7cdfcab470abdcd3a572312e538dabae</anchor>
      <arglist>(size_t index, shared_ptr&lt; SpeciesThermoInterpType &gt; spec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>update_one</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>a853bc8dcb605fb7db81fce70e2a8dfcd</anchor>
      <arglist>(size_t k, doublereal T, doublereal *cp_R, doublereal *h_RT, doublereal *s_R) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>update_single</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>ad0daa8939245028bfb5f88ae87a1eef2</anchor>
      <arglist>(size_t k, double T, double *cp_R, double *h_RT, double *s_R) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>a8aa2bca5d24220acad1b82f5b51b21a7</anchor>
      <arglist>(doublereal T, doublereal *cp_R, doublereal *h_RT, doublereal *s_R) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>minTemp</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>a05045eb63890f5841d91268f8c8f6ac6</anchor>
      <arglist>(size_t k=npos) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>maxTemp</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>ae84e675e13f8de5fbb0e6196dd4cc287</anchor>
      <arglist>(size_t k=npos) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>refPressure</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>a32b2f64bdc6e9d174f33cbe7fdbf9469</anchor>
      <arglist>(size_t k=npos) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>reportType</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>a7eae9fdeeeb5eb049b6ac2088b2dbaf0</anchor>
      <arglist>(size_t index) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reportParams</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>a9d8cd59a5a0d288baaeaed981facb6fd</anchor>
      <arglist>(size_t index, int &amp;type, doublereal *const c, doublereal &amp;minTemp, doublereal &amp;maxTemp, doublereal &amp;refPressure) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>reportOneHf298</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>a8021bf38b9d44cc260f9853f2e5a51de</anchor>
      <arglist>(const size_t k) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>modifyOneHf298</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>a770cf32674ea8e0da12ee537e82216a1</anchor>
      <arglist>(const size_t k, const doublereal Hf298New)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetHf298</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>afe4e2608827652aab10d9bda4167ad39</anchor>
      <arglist>(const size_t k)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ready</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>a04e3152f283c801368140ecd8ab82384</anchor>
      <arglist>(size_t nSpecies)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>markInstalled</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>a3847dd050cb7db03482541c4bbce3080</anchor>
      <arglist>(size_t k)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>STIT_map</type>
      <name>m_sp</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>a068c6e7ee5121bb7be10e0f9ecd8801c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tpoly_map</type>
      <name>m_tpoly</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>aa25d627e0668168d3def75faf1525c10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; size_t, std::pair&lt; int, size_t &gt; &gt;</type>
      <name>m_speciesLoc</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>aabf58420e597019eb063c50640c82690</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_tlow_max</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>aea83c2ffed3a01e875462c23ac11b89a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_thigh_min</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>a8082c3046d24a18d22d818cbdd59191a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_p0</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>abdd15cd78af8bfd2a1ae1424e1010af9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; bool &gt;</type>
      <name>m_installed</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>a70f9195cf274457998c2997165d437d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>SpeciesThermoInterpType *</type>
      <name>provideSTIT</name>
      <anchorfile>classCantera_1_1MultiSpeciesThermo.html</anchorfile>
      <anchor>a1d47e43104fb3ab3e61af117d5a1156a</anchor>
      <arglist>(size_t k)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::MultiTransport</name>
    <filename>classCantera_1_1MultiTransport.html</filename>
    <base>Cantera::GasTransport</base>
    <member kind="function">
      <type></type>
      <name>MultiTransport</name>
      <anchorfile>classCantera_1_1MultiTransport.html</anchorfile>
      <anchor>afa70f07dfb04bfe1249972a24dc5cb58</anchor>
      <arglist>(thermo_t *thermo=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>transportType</name>
      <anchorfile>classCantera_1_1MultiTransport.html</anchorfile>
      <anchor>aaa616493275cb1d7fb3ba980ec3cd467</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getThermalDiffCoeffs</name>
      <anchorfile>classCantera_1_1MultiTransport.html</anchorfile>
      <anchor>a0242eeac6a86b61e2d2d613ad7a4fb0d</anchor>
      <arglist>(doublereal *const dt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalConductivity</name>
      <anchorfile>classCantera_1_1MultiTransport.html</anchorfile>
      <anchor>a2485777400132063dc233a7af516e66d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMultiDiffCoeffs</name>
      <anchorfile>classCantera_1_1MultiTransport.html</anchorfile>
      <anchor>a2d2a4efadfdf1d2489f992e92589fc8c</anchor>
      <arglist>(const size_t ld, doublereal *const d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesFluxes</name>
      <anchorfile>classCantera_1_1MultiTransport.html</anchorfile>
      <anchor>ac10f3352c5356776215dfdad3fb61e40</anchor>
      <arglist>(size_t ndim, const doublereal *const grad_T, size_t ldx, const doublereal *const grad_X, size_t ldf, doublereal *const fluxes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMolarFluxes</name>
      <anchorfile>classCantera_1_1MultiTransport.html</anchorfile>
      <anchor>a46b10f34a9e7a98b84528730dff53774</anchor>
      <arglist>(const doublereal *const state1, const doublereal *const state2, const doublereal delta, doublereal *const fluxes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMassFluxes</name>
      <anchorfile>classCantera_1_1MultiTransport.html</anchorfile>
      <anchor>ac98ef1844605f3bba0fc09cc8dd43ebb</anchor>
      <arglist>(const doublereal *state1, const doublereal *state2, doublereal delta, doublereal *fluxes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1MultiTransport.html</anchorfile>
      <anchor>aa2273de3a1f947875286048551ccda82</anchor>
      <arglist>(ThermoPhase *thermo, int mode=0, int log_level=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>update_T</name>
      <anchorfile>classCantera_1_1MultiTransport.html</anchorfile>
      <anchor>a3ba7962c9154b9bdb5b212fa2bc11af2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>update_C</name>
      <anchorfile>classCantera_1_1MultiTransport.html</anchorfile>
      <anchor>aac6f7fb80ff080f20310385ea1375dcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateThermal_T</name>
      <anchorfile>classCantera_1_1MultiTransport.html</anchorfile>
      <anchor>a6fd0e51cb97d1118e4971f1b695a0f64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>eval_L0000</name>
      <anchorfile>classCantera_1_1MultiTransport.html</anchorfile>
      <anchor>a0a32ee9a2ce4a7cf1fa23a6b73c888d0</anchor>
      <arglist>(const doublereal *const x)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>eval_L0010</name>
      <anchorfile>classCantera_1_1MultiTransport.html</anchorfile>
      <anchor>abf137a89cc728f9ebae38ffe66162541</anchor>
      <arglist>(const doublereal *const x)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>eval_L1000</name>
      <anchorfile>classCantera_1_1MultiTransport.html</anchorfile>
      <anchor>ae43b8c004c72939f98277b1dd25c256a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DenseMatrix</type>
      <name>m_astar</name>
      <anchorfile>classCantera_1_1MultiTransport.html</anchorfile>
      <anchor>a6d68095215b3647b7c74b1907cdaa698</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DenseMatrix</type>
      <name>m_bstar</name>
      <anchorfile>classCantera_1_1MultiTransport.html</anchorfile>
      <anchor>ade0b3e04fcc283d97e613db712e4cf69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DenseMatrix</type>
      <name>m_cstar</name>
      <anchorfile>classCantera_1_1MultiTransport.html</anchorfile>
      <anchor>a9251435f385943d33752f8c42cda521b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DenseMatrix</type>
      <name>m_om22</name>
      <anchorfile>classCantera_1_1MultiTransport.html</anchorfile>
      <anchor>a4a8bc409d34ef49d6802fe823839c33f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_molefracs_last</name>
      <anchorfile>classCantera_1_1MultiTransport.html</anchorfile>
      <anchor>a4834930e05f2773f7523d86a31e037dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_abc_ok</name>
      <anchorfile>classCantera_1_1MultiTransport.html</anchorfile>
      <anchor>ac44382c957ae6c96c6736e6f104b1ed4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Nasa9Poly1</name>
    <filename>classCantera_1_1Nasa9Poly1.html</filename>
    <base>Cantera::SpeciesThermoInterpType</base>
    <member kind="function">
      <type></type>
      <name>Nasa9Poly1</name>
      <anchorfile>classCantera_1_1Nasa9Poly1.html</anchorfile>
      <anchor>a10b71d94031bd8e4be619a404b75db58</anchor>
      <arglist>(double tlow, double thigh, double pref, const double *coeffs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>reportType</name>
      <anchorfile>classCantera_1_1Nasa9Poly1.html</anchorfile>
      <anchor>a0f90f1e13ec0395424099702bb5423de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>temperaturePolySize</name>
      <anchorfile>classCantera_1_1Nasa9Poly1.html</anchorfile>
      <anchor>ada65d8cf4350202fe06325d2f351297e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTemperaturePoly</name>
      <anchorfile>classCantera_1_1Nasa9Poly1.html</anchorfile>
      <anchor>ac9f718b6fdceba083d833983013be9a0</anchor>
      <arglist>(double T, double *T_poly) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateProperties</name>
      <anchorfile>classCantera_1_1Nasa9Poly1.html</anchorfile>
      <anchor>acb928ca625bcbc618f12e9ec8feef13d</anchor>
      <arglist>(const doublereal *tt, doublereal *cp_R, doublereal *h_RT, doublereal *s_R) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updatePropertiesTemp</name>
      <anchorfile>classCantera_1_1Nasa9Poly1.html</anchorfile>
      <anchor>a9ad26486b7aa404ff87b29b61472b7e9</anchor>
      <arglist>(const doublereal temp, doublereal *cp_R, doublereal *h_RT, doublereal *s_R) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reportParameters</name>
      <anchorfile>classCantera_1_1Nasa9Poly1.html</anchorfile>
      <anchor>aa644859d921972e54e88c4f9ea56d854</anchor>
      <arglist>(size_t &amp;n, int &amp;type, doublereal &amp;tlow, doublereal &amp;thigh, doublereal &amp;pref, doublereal *const coeffs) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_coeff</name>
      <anchorfile>classCantera_1_1Nasa9Poly1.html</anchorfile>
      <anchor>a335c61da2820e79426f89e05c95cdaa7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Nasa9PolyMultiTempRegion</name>
    <filename>classCantera_1_1Nasa9PolyMultiTempRegion.html</filename>
    <base>Cantera::SpeciesThermoInterpType</base>
    <member kind="function">
      <type></type>
      <name>Nasa9PolyMultiTempRegion</name>
      <anchorfile>classCantera_1_1Nasa9PolyMultiTempRegion.html</anchorfile>
      <anchor>a0cdf2e00645f31db584a57fddbc2257c</anchor>
      <arglist>(std::vector&lt; Nasa9Poly1 *&gt; &amp;regionPts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>reportType</name>
      <anchorfile>classCantera_1_1Nasa9PolyMultiTempRegion.html</anchorfile>
      <anchor>a0f90f1e13ec0395424099702bb5423de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>temperaturePolySize</name>
      <anchorfile>classCantera_1_1Nasa9PolyMultiTempRegion.html</anchorfile>
      <anchor>ada65d8cf4350202fe06325d2f351297e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTemperaturePoly</name>
      <anchorfile>classCantera_1_1Nasa9PolyMultiTempRegion.html</anchorfile>
      <anchor>ac9f718b6fdceba083d833983013be9a0</anchor>
      <arglist>(double T, double *T_poly) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateProperties</name>
      <anchorfile>classCantera_1_1Nasa9PolyMultiTempRegion.html</anchorfile>
      <anchor>acb928ca625bcbc618f12e9ec8feef13d</anchor>
      <arglist>(const doublereal *tt, doublereal *cp_R, doublereal *h_RT, doublereal *s_R) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updatePropertiesTemp</name>
      <anchorfile>classCantera_1_1Nasa9PolyMultiTempRegion.html</anchorfile>
      <anchor>a9ad26486b7aa404ff87b29b61472b7e9</anchor>
      <arglist>(const doublereal temp, doublereal *cp_R, doublereal *h_RT, doublereal *s_R) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reportParameters</name>
      <anchorfile>classCantera_1_1Nasa9PolyMultiTempRegion.html</anchorfile>
      <anchor>aa644859d921972e54e88c4f9ea56d854</anchor>
      <arglist>(size_t &amp;n, int &amp;type, doublereal &amp;tlow, doublereal &amp;thigh, doublereal &amp;pref, doublereal *const coeffs) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_lowerTempBounds</name>
      <anchorfile>classCantera_1_1Nasa9PolyMultiTempRegion.html</anchorfile>
      <anchor>a3c0385c42806a944b6b3c64cc750215b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::unique_ptr&lt; Nasa9Poly1 &gt; &gt;</type>
      <name>m_regionPts</name>
      <anchorfile>classCantera_1_1Nasa9PolyMultiTempRegion.html</anchorfile>
      <anchor>aa86f4418f8a003f493bc4746898253e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_currRegion</name>
      <anchorfile>classCantera_1_1Nasa9PolyMultiTempRegion.html</anchorfile>
      <anchor>ac4ff5d4986ff558391a3a470514e4237</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::NasaPoly1</name>
    <filename>classCantera_1_1NasaPoly1.html</filename>
    <base>Cantera::SpeciesThermoInterpType</base>
    <member kind="function">
      <type></type>
      <name>NasaPoly1</name>
      <anchorfile>classCantera_1_1NasaPoly1.html</anchorfile>
      <anchor>abb9bf066295f0b8dc2feb97f4884faef</anchor>
      <arglist>(double tlow, double thigh, double pref, const double *coeffs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>reportType</name>
      <anchorfile>classCantera_1_1NasaPoly1.html</anchorfile>
      <anchor>ae2d249a609d29261db259191f2100f4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>temperaturePolySize</name>
      <anchorfile>classCantera_1_1NasaPoly1.html</anchorfile>
      <anchor>ada65d8cf4350202fe06325d2f351297e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTemperaturePoly</name>
      <anchorfile>classCantera_1_1NasaPoly1.html</anchorfile>
      <anchor>a4ce0153b0f7baf76da320e23a75b34f8</anchor>
      <arglist>(double T, double *T_poly) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateProperties</name>
      <anchorfile>classCantera_1_1NasaPoly1.html</anchorfile>
      <anchor>a7d70998506f939bbcc8bf157091762aa</anchor>
      <arglist>(const doublereal *tt, doublereal *cp_R, doublereal *h_RT, doublereal *s_R) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updatePropertiesTemp</name>
      <anchorfile>classCantera_1_1NasaPoly1.html</anchorfile>
      <anchor>a1e2cbe10b154bf1b343958bd700126f8</anchor>
      <arglist>(const doublereal temp, doublereal *cp_R, doublereal *h_RT, doublereal *s_R) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reportParameters</name>
      <anchorfile>classCantera_1_1NasaPoly1.html</anchorfile>
      <anchor>abf027902c17434dd571d928ce0d9363d</anchor>
      <arglist>(size_t &amp;n, int &amp;type, doublereal &amp;tlow, doublereal &amp;thigh, doublereal &amp;pref, doublereal *const coeffs) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>reportHf298</name>
      <anchorfile>classCantera_1_1NasaPoly1.html</anchorfile>
      <anchor>ae7075110d5d4aaec18f16535276f18b1</anchor>
      <arglist>(doublereal *const h298=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>modifyOneHf298</name>
      <anchorfile>classCantera_1_1NasaPoly1.html</anchorfile>
      <anchor>ac87e5a3dd35b2e65689cc86f09b473e6</anchor>
      <arglist>(const size_t k, const doublereal Hf298New)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetHf298</name>
      <anchorfile>classCantera_1_1NasaPoly1.html</anchorfile>
      <anchor>a92bfae5a63c2368cbb95a13baa08ad14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_coeff</name>
      <anchorfile>classCantera_1_1NasaPoly1.html</anchorfile>
      <anchor>a335c61da2820e79426f89e05c95cdaa7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::NasaPoly2</name>
    <filename>classCantera_1_1NasaPoly2.html</filename>
    <base>Cantera::SpeciesThermoInterpType</base>
    <member kind="function">
      <type></type>
      <name>NasaPoly2</name>
      <anchorfile>classCantera_1_1NasaPoly2.html</anchorfile>
      <anchor>a416801e4bd55370540aa9ce85164cae9</anchor>
      <arglist>(doublereal tlow, doublereal thigh, doublereal pref, const doublereal *coeffs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>reportType</name>
      <anchorfile>classCantera_1_1NasaPoly2.html</anchorfile>
      <anchor>ae2d249a609d29261db259191f2100f4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>temperaturePolySize</name>
      <anchorfile>classCantera_1_1NasaPoly2.html</anchorfile>
      <anchor>ada65d8cf4350202fe06325d2f351297e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTemperaturePoly</name>
      <anchorfile>classCantera_1_1NasaPoly2.html</anchorfile>
      <anchor>a4ce0153b0f7baf76da320e23a75b34f8</anchor>
      <arglist>(double T, double *T_poly) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateProperties</name>
      <anchorfile>classCantera_1_1NasaPoly2.html</anchorfile>
      <anchor>acb928ca625bcbc618f12e9ec8feef13d</anchor>
      <arglist>(const doublereal *tt, doublereal *cp_R, doublereal *h_RT, doublereal *s_R) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updatePropertiesTemp</name>
      <anchorfile>classCantera_1_1NasaPoly2.html</anchorfile>
      <anchor>a9ad26486b7aa404ff87b29b61472b7e9</anchor>
      <arglist>(const doublereal temp, doublereal *cp_R, doublereal *h_RT, doublereal *s_R) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reportParameters</name>
      <anchorfile>classCantera_1_1NasaPoly2.html</anchorfile>
      <anchor>aa644859d921972e54e88c4f9ea56d854</anchor>
      <arglist>(size_t &amp;n, int &amp;type, doublereal &amp;tlow, doublereal &amp;thigh, doublereal &amp;pref, doublereal *const coeffs) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>reportHf298</name>
      <anchorfile>classCantera_1_1NasaPoly2.html</anchorfile>
      <anchor>a82cf17c36b8a588ef9e093ce455bb352</anchor>
      <arglist>(doublereal *const h298=0) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetHf298</name>
      <anchorfile>classCantera_1_1NasaPoly2.html</anchorfile>
      <anchor>a50871997796fc34fd44cb7a2e5aba283</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>modifyOneHf298</name>
      <anchorfile>classCantera_1_1NasaPoly2.html</anchorfile>
      <anchor>a770cf32674ea8e0da12ee537e82216a1</anchor>
      <arglist>(const size_t k, const doublereal Hf298New)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classCantera_1_1NasaPoly2.html</anchorfile>
      <anchor>a86cbcf565230a860be957c1a75d78c20</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_midT</name>
      <anchorfile>classCantera_1_1NasaPoly2.html</anchorfile>
      <anchor>acbb163e5399a3ea7708cf8d63a774da3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NasaPoly1</type>
      <name>mnp_low</name>
      <anchorfile>classCantera_1_1NasaPoly2.html</anchorfile>
      <anchor>adb69189adc756df4f3fa1e451c63ebb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NasaPoly1</type>
      <name>mnp_high</name>
      <anchorfile>classCantera_1_1NasaPoly2.html</anchorfile>
      <anchor>aefc6ab483c8c019e2f571adca367ea91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_coeff</name>
      <anchorfile>classCantera_1_1NasaPoly2.html</anchorfile>
      <anchor>a335c61da2820e79426f89e05c95cdaa7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::NotImplementedError</name>
    <filename>classCantera_1_1NotImplementedError.html</filename>
    <base>Cantera::CanteraError</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getClass</name>
      <anchorfile>classCantera_1_1NotImplementedError.html</anchorfile>
      <anchor>a31a0154bd4d18f1bcd78a507b91056be</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::OneDim</name>
    <filename>classCantera_1_1OneDim.html</filename>
    <member kind="function">
      <type></type>
      <name>OneDim</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>ac5f94bf4c0706bfa7b8b0dfda9466d52</anchor>
      <arglist>(std::vector&lt; Domain1D *&gt; domains)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDomain</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>ab5a94d038f4bd68a531261269ebd4189</anchor>
      <arglist>(Domain1D *d)</arglist>
    </member>
    <member kind="function">
      <type>MultiJac &amp;</type>
      <name>jacobian</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>ab7f3298897eeff6b3e69c280a17f9090</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MultiNewton &amp;</type>
      <name>newton</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>af699d5c5ca1caa276334109b317fb574</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>ae5a34ecf30d86a26eaf39ccadb643f8b</anchor>
      <arglist>(doublereal *x0, doublereal *x1, int loglevel)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nDomains</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a4342b4891f1d6e41af2fdf18a05b24c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Domain1D &amp;</type>
      <name>domain</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>ae76f4c5cd18679d683e1cdc8a0f8929f</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkDomainIndex</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a07e1af20ee29a69f3823beee3e2fb92d</anchor>
      <arglist>(size_t n) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkDomainArraySize</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a7f74577161a5f616f3d895037a2c4313</anchor>
      <arglist>(size_t nn) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>start</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a021c5d3230c1848c4728e70aef68b005</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a259cb5a711406a8c3e5d937eb9350cca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Domain1D *</type>
      <name>left</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a3cbc4396801a292df420ef3123f18184</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Domain1D *</type>
      <name>right</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a4e49056c27a097658bc8526524731023</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nVars</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a9f2a2be62fcca65d2578c1743405e7e8</anchor>
      <arglist>(size_t jg)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>loc</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a2ecde4fe72aa426331777eeb8bc36f15</anchor>
      <arglist>(size_t jg)</arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; std::string, size_t, std::string &gt;</type>
      <name>component</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a479877a060eaf1ccfd3ae40ebe0620d0</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>bandwidth</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a58bbc504725a1a8c38c0ebec264419d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a02fd73d861ef2e4aabb38c0c9ff82947</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>points</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>ab5eb77bfb1d42aa7bd8e7abafc76430e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>ssnorm</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a28b3d1077c14a411e74248a8e530fcca</anchor>
      <arglist>(doublereal *x, doublereal *r)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>rdt</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>afd5256217a23492c547ae81d943b2195</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initTimeInteg</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a9344ebe2d51083862be42e44cf2b5220</anchor>
      <arglist>(doublereal dt, doublereal *x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transient</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a7e5220a212d2bf288509596ef1ed07db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>steady</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>ae9f2eca3a341c33ce777f0d7395c9705</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSteadyMode</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>ac99bf1a345ec7a1e81ef492dda51fa51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a6928ad2243f06496669b56d339ea240c</anchor>
      <arglist>(size_t j, double *x, double *r, doublereal rdt=-1.0, int count=1)</arglist>
    </member>
    <member kind="function">
      <type>Domain1D *</type>
      <name>pointDomain</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>aaff98db233fd57d99b0abb47ab6a060d</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a0fc3d585aa53859602ac79c9c421f2a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>timeStep</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a61d6315b7be75374c58f99738c761b40</anchor>
      <arglist>(int nsteps, double dt, double *x, double *r, int loglevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeStats</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>ac45c6df3820d1757e2402fb148dec8c9</anchor>
      <arglist>(int printTime=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxTimeStepCount</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a8d05bcd21345e7b7b8bff9264c8db497</anchor>
      <arglist>(int nmax)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxTimeStepCount</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>aa9bae362df803a05c234680628208ff3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveStats</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a1e6acbb64ab1f1af64fd6cd674ab4277</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearStats</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>ac7ec7476159db4e2bb0372e30010fc9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; size_t &gt; &amp;</type>
      <name>gridSizeStats</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>aa6e10d0b75a2bb0a5f30092a18444fb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>jacobianTimeStats</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>ad7df7c3ed2c2be09c4a1610d96bef3fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>evalTimeStats</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a762485071cafd8ff924c00d09f922373</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const vector_int &amp;</type>
      <name>jacobianCountStats</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a0e1a1b7676c9abab67d452cd2c4f485b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const vector_int &amp;</type>
      <name>evalCountStats</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a2c54fae4d61f676c68f95b9e923e5a17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const vector_int &amp;</type>
      <name>timeStepStats</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a4bb3f89070fc60fedc752630e86024e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInterrupt</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>afbe2ee8b0a10d88aea7fb3ae755796cd</anchor>
      <arglist>(Func1 *interrupt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeStepCallback</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a77a4d0fae6640ff870e20e9309e6b4c2</anchor>
      <arglist>(Func1 *callback)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_tmin</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a4f496c336f1f2dc078ea81483a43063e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_tmax</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>ab1e64f8647add0decd9995b8c61a2e77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_tfactor</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>adefdd109c1fe628c67bd9342af0a1396</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; MultiJac &gt;</type>
      <name>m_jac</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a1c829da46d934e22098c5309bac3432d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; MultiNewton &gt;</type>
      <name>m_newt</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a9f4c6fd4faa28ae7db18d3782b9d03bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_rdt</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a0d9eed7140e6d12cb9cf4006efac8919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_jac_ok</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>aa4fd32dde7bfaedf81c0263bbada1806</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_bw</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>aa42d3e06474701e6dc886aeedd02ec6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_size</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a0dc3c363255f193681c77b4d2a82e995</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Func1 *</type>
      <name>m_interrupt</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a781aa8177775778ed5c620ca42c23e2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Func1 *</type>
      <name>m_time_step_callback</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>adb0424645deee23eee8b8220b3cc9b5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_nsteps</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a02ad9e9118f077cd2f80ed69b3778061</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_nsteps_max</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a0f62204da3bf7e0b1997a7df940d7af2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_int</type>
      <name>m_timeSteps</name>
      <anchorfile>classCantera_1_1OneDim.html</anchorfile>
      <anchor>a0b37aebb15bd86e90811b083f9f3a011</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Outlet1D</name>
    <filename>classCantera_1_1Outlet1D.html</filename>
    <base>Cantera::Bdry1D</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1Outlet1D.html</anchorfile>
      <anchor>a02fd73d861ef2e4aabb38c0c9ff82947</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1Outlet1D.html</anchorfile>
      <anchor>aa62f69dbb402c9c9de00311a7f5193ad</anchor>
      <arglist>(size_t jg, doublereal *xg, doublereal *rg, integer *diagg, doublereal rdt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual XML_Node &amp;</type>
      <name>save</name>
      <anchorfile>classCantera_1_1Outlet1D.html</anchorfile>
      <anchor>ac2ec60b9aa9b81c157997c4c10594883</anchor>
      <arglist>(XML_Node &amp;o, const doublereal *const soln)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>restore</name>
      <anchorfile>classCantera_1_1Outlet1D.html</anchorfile>
      <anchor>a7f87adb9173d936c9f741a204b94d69c</anchor>
      <arglist>(const XML_Node &amp;dom, doublereal *soln, int loglevel)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::OutletRes1D</name>
    <filename>classCantera_1_1OutletRes1D.html</filename>
    <base>Cantera::Bdry1D</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showSolution</name>
      <anchorfile>classCantera_1_1OutletRes1D.html</anchorfile>
      <anchor>aa8a7e620eca862f4cf1cd4ca2c91dcc3</anchor>
      <arglist>(const doublereal *x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMoleFractions</name>
      <anchorfile>classCantera_1_1OutletRes1D.html</anchorfile>
      <anchor>a11b1b6be37418afbebf4942dfca92aeb</anchor>
      <arglist>(const std::string &amp;xin)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMoleFractions</name>
      <anchorfile>classCantera_1_1OutletRes1D.html</anchorfile>
      <anchor>ae97aee02d86f1bc2cc4cf21de06e97a8</anchor>
      <arglist>(const doublereal *xin)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>massFraction</name>
      <anchorfile>classCantera_1_1OutletRes1D.html</anchorfile>
      <anchor>a7941da009269934eb6319d4747f23cbe</anchor>
      <arglist>(size_t k)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1OutletRes1D.html</anchorfile>
      <anchor>a02fd73d861ef2e4aabb38c0c9ff82947</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1OutletRes1D.html</anchorfile>
      <anchor>aa62f69dbb402c9c9de00311a7f5193ad</anchor>
      <arglist>(size_t jg, doublereal *xg, doublereal *rg, integer *diagg, doublereal rdt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual XML_Node &amp;</type>
      <name>save</name>
      <anchorfile>classCantera_1_1OutletRes1D.html</anchorfile>
      <anchor>ac2ec60b9aa9b81c157997c4c10594883</anchor>
      <arglist>(XML_Node &amp;o, const doublereal *const soln)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>restore</name>
      <anchorfile>classCantera_1_1OutletRes1D.html</anchorfile>
      <anchor>a7f87adb9173d936c9f741a204b94d69c</anchor>
      <arglist>(const XML_Node &amp;dom, doublereal *soln, int loglevel)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::PDSS</name>
    <filename>classCantera_1_1PDSS.html</filename>
    <member kind="function">
      <type></type>
      <name>PDSS</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>ab955b49c52887a122cd2ad69bc045717</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_RT</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a529d50bb049c8de40aaa0eb20bf090dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>af3b7fb6d3a5817a1fb3edff83294a1d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_R</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a1a964329022a0f04d029320d6db2fe36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>aaf04e92fc17efaa2c07df42c06c0d563</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_RT</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a5e5c60be82cf8e0e3847ac4bb45a0a7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_R</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a82ca41b7bc990d8a7b498e5481ebe39a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>molarVolume</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>aa4a74b0b8eef5815d243b3c05a0daf94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>density</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>ac27248f236e9f0dbcf5521410c52ee2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpyDelp_mole</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a66f86cf80769e35c54c63c77c17de709</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropyDelp_mole</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>affe75c7edf4b4924cd729b88ea06b2b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbsDelp_mole</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>ad66f51371fa14ffcd4dea3e1c5a4f052</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cpDelp_mole</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>abf7b030b486657a5217184b50f41a259</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>refPressure</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>aa67bb4f5ad2c7365739f5a96be32dbf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>minTemp</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a2177c1e9ecf43eb8ac9b70d770008bc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>maxTemp</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a0004797248f9be8173ddbdf40c0b629d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_RT_ref</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>ace464815b68c442bdcdc8218f105d242</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>ab270e5d2bc0bc45d14381ee60c95fc62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_R_ref</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>acc8511896e66169a24c0d84392721523</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_R_ref</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a17874bf75619f3de87e86bfd7f0ee621</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>molarVolume_ref</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a856b004b60835e5296d9975ae2c8f590</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a47308c7661d4a0af39bd19c14cd5b4f8</anchor>
      <arglist>(doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalExpansionCoeff</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a661ba8332a19cb48e3e03136c1bce6a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTemperature</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a6af23ee4714da8286b984b3730f5b58e</anchor>
      <arglist>(doublereal temp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>temperature</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>ad0673abef723187fd991cb90c658c9c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TP</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a4b6275f3750b35ed5d1e2706613efa33</anchor>
      <arglist>(doublereal temp, doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TR</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>ac04a7631adf59927f573421ea932a36d</anchor>
      <arglist>(doublereal temp, doublereal rho)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critTemperature</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a92cc18825b968c6195896358fbfe1744</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critPressure</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a44de713a0ca6361efcabe18dfc265b1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critDensity</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>ae7ff0cbd1630614df97698d026f47114</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>satPressure</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>ae3fc47f48b0df5655050c8b662a94646</anchor>
      <arglist>(doublereal T)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>molecularWeight</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a0c0fd78ebc9208b46b9483ec272b0f6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMolecularWeight</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a0bd18fb0fc352e4e54ec60030454f0f0</anchor>
      <arglist>(doublereal mw)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReferenceThermo</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>aded4df6824fa2a5c179dc7ef1e9efb3e</anchor>
      <arglist>(shared_ptr&lt; SpeciesThermoInterpType &gt; stit)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>useSTITbyPDSS</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a175adead89001f144010c7952ef8afeb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParent</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>ad5247049fb02f9c7182e07266f86c84a</anchor>
      <arglist>(VPStandardStateTP *phase, size_t k)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a14a12d2df1d1e74c67e4b38987817c28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a314de3346d8e61eaeb9d5825387f2dc7</anchor>
      <arglist>(const XML_Node &amp;speciesNode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reportParams</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a2d1ce7f174da2326366f7ec41c6f65f0</anchor>
      <arglist>(size_t &amp;kindex, int &amp;type, doublereal *const c, doublereal &amp;minTemp, doublereal &amp;maxTemp, doublereal &amp;refPressure) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_temp</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a4d64276995e8b70bb4a09b47c20547f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_pres</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a36c945dff57b7e72f745474aba7c6d33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_p0</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>abdd15cd78af8bfd2a1ae1424e1010af9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_minTemp</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>afbfb8af311e8ab246a22fffdf2a7ae4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_maxTemp</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a604c4c82313c8adb1de9e5a53b110d2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_mw</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>abf5389c2ce4d647032551bcb1db5cad3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>shared_ptr&lt; SpeciesThermoInterpType &gt;</type>
      <name>m_spthermo</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a44fee863bb4edc0cfe0561ef88d8e167</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PDSS</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>ab955b49c52887a122cd2ad69bc045717</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_RT</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a529d50bb049c8de40aaa0eb20bf090dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>af3b7fb6d3a5817a1fb3edff83294a1d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_R</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a1a964329022a0f04d029320d6db2fe36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>aaf04e92fc17efaa2c07df42c06c0d563</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_RT</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a5e5c60be82cf8e0e3847ac4bb45a0a7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_R</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a82ca41b7bc990d8a7b498e5481ebe39a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>molarVolume</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>aa4a74b0b8eef5815d243b3c05a0daf94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>density</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>ac27248f236e9f0dbcf5521410c52ee2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpyDelp_mole</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a66f86cf80769e35c54c63c77c17de709</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropyDelp_mole</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>affe75c7edf4b4924cd729b88ea06b2b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbsDelp_mole</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>ad66f51371fa14ffcd4dea3e1c5a4f052</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cpDelp_mole</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>abf7b030b486657a5217184b50f41a259</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>refPressure</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>aa67bb4f5ad2c7365739f5a96be32dbf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>minTemp</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a2177c1e9ecf43eb8ac9b70d770008bc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>maxTemp</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a0004797248f9be8173ddbdf40c0b629d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_RT_ref</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>ace464815b68c442bdcdc8218f105d242</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>ab270e5d2bc0bc45d14381ee60c95fc62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_R_ref</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>acc8511896e66169a24c0d84392721523</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_R_ref</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a17874bf75619f3de87e86bfd7f0ee621</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>molarVolume_ref</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a856b004b60835e5296d9975ae2c8f590</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a47308c7661d4a0af39bd19c14cd5b4f8</anchor>
      <arglist>(doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalExpansionCoeff</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a661ba8332a19cb48e3e03136c1bce6a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTemperature</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a6af23ee4714da8286b984b3730f5b58e</anchor>
      <arglist>(doublereal temp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>temperature</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>ad0673abef723187fd991cb90c658c9c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TP</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a4b6275f3750b35ed5d1e2706613efa33</anchor>
      <arglist>(doublereal temp, doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TR</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>ac04a7631adf59927f573421ea932a36d</anchor>
      <arglist>(doublereal temp, doublereal rho)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critTemperature</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a92cc18825b968c6195896358fbfe1744</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critPressure</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a44de713a0ca6361efcabe18dfc265b1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critDensity</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>ae7ff0cbd1630614df97698d026f47114</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>satPressure</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>ae3fc47f48b0df5655050c8b662a94646</anchor>
      <arglist>(doublereal T)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>molecularWeight</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a0c0fd78ebc9208b46b9483ec272b0f6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMolecularWeight</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a0bd18fb0fc352e4e54ec60030454f0f0</anchor>
      <arglist>(doublereal mw)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReferenceThermo</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>aded4df6824fa2a5c179dc7ef1e9efb3e</anchor>
      <arglist>(shared_ptr&lt; SpeciesThermoInterpType &gt; stit)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>useSTITbyPDSS</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a175adead89001f144010c7952ef8afeb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParent</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>ad5247049fb02f9c7182e07266f86c84a</anchor>
      <arglist>(VPStandardStateTP *phase, size_t k)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a14a12d2df1d1e74c67e4b38987817c28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a314de3346d8e61eaeb9d5825387f2dc7</anchor>
      <arglist>(const XML_Node &amp;speciesNode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reportParams</name>
      <anchorfile>classCantera_1_1PDSS.html</anchorfile>
      <anchor>a2d1ce7f174da2326366f7ec41c6f65f0</anchor>
      <arglist>(size_t &amp;kindex, int &amp;type, doublereal *const c, doublereal &amp;minTemp, doublereal &amp;maxTemp, doublereal &amp;refPressure) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::PDSS_ConstVol</name>
    <filename>classCantera_1_1PDSS__ConstVol.html</filename>
    <base>Cantera::PDSS_Nondimensional</base>
    <member kind="function">
      <type></type>
      <name>PDSS_ConstVol</name>
      <anchorfile>classCantera_1_1PDSS__ConstVol.html</anchorfile>
      <anchor>a08d351c2a0210ce7ca76c1fbc2b8121c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1PDSS__ConstVol.html</anchorfile>
      <anchor>af3b7fb6d3a5817a1fb3edff83294a1d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1PDSS__ConstVol.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1PDSS__ConstVol.html</anchorfile>
      <anchor>a47308c7661d4a0af39bd19c14cd5b4f8</anchor>
      <arglist>(doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTemperature</name>
      <anchorfile>classCantera_1_1PDSS__ConstVol.html</anchorfile>
      <anchor>a6af23ee4714da8286b984b3730f5b58e</anchor>
      <arglist>(doublereal temp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TP</name>
      <anchorfile>classCantera_1_1PDSS__ConstVol.html</anchorfile>
      <anchor>a4b6275f3750b35ed5d1e2706613efa33</anchor>
      <arglist>(doublereal temp, doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TR</name>
      <anchorfile>classCantera_1_1PDSS__ConstVol.html</anchorfile>
      <anchor>ac04a7631adf59927f573421ea932a36d</anchor>
      <arglist>(doublereal temp, doublereal rho)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>satPressure</name>
      <anchorfile>classCantera_1_1PDSS__ConstVol.html</anchorfile>
      <anchor>accb8f654e680f86cca2b67f938e34a23</anchor>
      <arglist>(doublereal t)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1PDSS__ConstVol.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1PDSS__ConstVol.html</anchorfile>
      <anchor>aaecac157fd301110eb8779cf9ac40263</anchor>
      <arglist>(const XML_Node &amp;speciesNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMolarVolume</name>
      <anchorfile>classCantera_1_1PDSS__ConstVol.html</anchorfile>
      <anchor>a8370ef978ca97bce0639b0915aa256e3</anchor>
      <arglist>(double v)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_constMolarVolume</name>
      <anchorfile>classCantera_1_1PDSS__ConstVol.html</anchorfile>
      <anchor>a91d9593de2ca72b58fb4c454a32391c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1PDSS__ConstVol.html</anchorfile>
      <anchor>af3b7fb6d3a5817a1fb3edff83294a1d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1PDSS__ConstVol.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1PDSS__ConstVol.html</anchorfile>
      <anchor>a47308c7661d4a0af39bd19c14cd5b4f8</anchor>
      <arglist>(doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTemperature</name>
      <anchorfile>classCantera_1_1PDSS__ConstVol.html</anchorfile>
      <anchor>a6af23ee4714da8286b984b3730f5b58e</anchor>
      <arglist>(doublereal temp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TP</name>
      <anchorfile>classCantera_1_1PDSS__ConstVol.html</anchorfile>
      <anchor>a4b6275f3750b35ed5d1e2706613efa33</anchor>
      <arglist>(doublereal temp, doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TR</name>
      <anchorfile>classCantera_1_1PDSS__ConstVol.html</anchorfile>
      <anchor>ac04a7631adf59927f573421ea932a36d</anchor>
      <arglist>(doublereal temp, doublereal rho)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>satPressure</name>
      <anchorfile>classCantera_1_1PDSS__ConstVol.html</anchorfile>
      <anchor>accb8f654e680f86cca2b67f938e34a23</anchor>
      <arglist>(doublereal t)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1PDSS__ConstVol.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1PDSS__ConstVol.html</anchorfile>
      <anchor>aaecac157fd301110eb8779cf9ac40263</anchor>
      <arglist>(const XML_Node &amp;speciesNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMolarVolume</name>
      <anchorfile>classCantera_1_1PDSS__ConstVol.html</anchorfile>
      <anchor>a8370ef978ca97bce0639b0915aa256e3</anchor>
      <arglist>(double v)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::PDSS_HKFT</name>
    <filename>classCantera_1_1PDSS__HKFT.html</filename>
    <base>Cantera::PDSS_Molar</base>
    <member kind="function">
      <type></type>
      <name>PDSS_HKFT</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a5f454dd71e85f46360663b4abc559e10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>enthalpy_mole2</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a83e687e8607ef44c1cc4a33d7fb1db02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>af3b7fb6d3a5817a1fb3edff83294a1d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>aaf04e92fc17efaa2c07df42c06c0d563</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>molarVolume</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>aa4a74b0b8eef5815d243b3c05a0daf94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>density</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>ac27248f236e9f0dbcf5521410c52ee2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_RT_ref</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>ace464815b68c442bdcdc8218f105d242</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>ab270e5d2bc0bc45d14381ee60c95fc62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_R_ref</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>acc8511896e66169a24c0d84392721523</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_R_ref</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a17874bf75619f3de87e86bfd7f0ee621</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>molarVolume_ref</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a856b004b60835e5296d9975ae2c8f590</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TP</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a4b6275f3750b35ed5d1e2706613efa33</anchor>
      <arglist>(doublereal temp, doublereal pres)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParent</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>ab8186a8d79b7f413af6bf94022a1016c</anchor>
      <arglist>(VPStandardStateTP *phase, size_t k)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>useSTITbyPDSS</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a175adead89001f144010c7952ef8afeb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeltaH0</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>af8933299d188badeb0eb955be8ca4aa4</anchor>
      <arglist>(double dh0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeltaG0</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a4a7fc11cdf48a6a07bf33a031880cb3b</anchor>
      <arglist>(double dg0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setS0</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a790262f14c6d1be1a7a4150abeeb9dfc</anchor>
      <arglist>(double s0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_a</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a9a563f17f7cf84d3c72bfdaab25d7f60</anchor>
      <arglist>(double *a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_c</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>ae95216ff023b609013188694158c886e</anchor>
      <arglist>(double *c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOmega</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a0071f4a051421720d232b6a0b24a1e78</anchor>
      <arglist>(double omega)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>aaecac157fd301110eb8779cf9ac40263</anchor>
      <arglist>(const XML_Node &amp;speciesNode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reportParams</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a2d1ce7f174da2326366f7ec41c6f65f0</anchor>
      <arglist>(size_t &amp;kindex, int &amp;type, doublereal *const c, doublereal &amp;minTemp, doublereal &amp;maxTemp, doublereal &amp;refPressure) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>doublereal</type>
      <name>deltaG</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>ae3beb0099049c6eab2d0b3bc449e29f5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>doublereal</type>
      <name>deltaS</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>ab42dfcc99b3f13224e9f59adb920d96b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>doublereal</type>
      <name>deltaH</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a399ff031e9c82ed3b60a9074ebccfbfd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>doublereal</type>
      <name>ag</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a7b4a63159c0be9c50cf247f6556fb91b</anchor>
      <arglist>(const doublereal temp, const int ifunc=0) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>doublereal</type>
      <name>bg</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a691d3680bb9c9065b0bd12ce190b2cf3</anchor>
      <arglist>(const doublereal temp, const int ifunc=0) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>doublereal</type>
      <name>g</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a69fcace43e3c67501f335dbfefe97ae3</anchor>
      <arglist>(const doublereal temp, const doublereal pres, const int ifunc=0) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>doublereal</type>
      <name>f</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a7be79abde622e9fd84e1034b271263d2</anchor>
      <arglist>(const doublereal temp, const doublereal pres, const int ifunc=0) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>doublereal</type>
      <name>gstar</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>ac8a64d57a28922a7de07d55867787314</anchor>
      <arglist>(const doublereal temp, const doublereal pres, const int ifunc=0) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>doublereal</type>
      <name>LookupGe</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>aa1950e63b92e9241709375de68a1c2d8</anchor>
      <arglist>(const std::string &amp;elemName)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>convertDGFormation</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>ab60f58f98c12603097b7b8a7f4a09f3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>VPStandardStateTP *</type>
      <name>m_tp</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a42010d3e7d69ffb9ec918ff3fa2b0ab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>m_spindex</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a252b668936134d20b7f655dc8f9f778e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PDSS_Water *</type>
      <name>m_waterSS</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>adaed9742eb9c4cf8d52085ea25ae8f86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_densWaterSS</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a5536831512c35080fa05c5805d68dee3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unique_ptr&lt; WaterProps &gt;</type>
      <name>m_waterProps</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>ae6148f027114f2615ba7e9806b03f66c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_deltaG_formation_tr_pr</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a2054578a31d1f84cbad2a700ff4bc153</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_deltaH_formation_tr_pr</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a981eed58385c4cae178f873b56f1ac2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_Mu0_tr_pr</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>ab9b63f3f1fea78783ec39664d1c1deba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_Entrop_tr_pr</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a556cd537c62f6f7b3b0d1eb7bab049b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_a1</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a7f24e3a9ef5903e0a18142b68593adaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_a2</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a5477682fdcc0a2a6bd3860e72b588efc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_a3</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a27a2e6bd0973479ac3102f30af8cc87e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_a4</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a2997eacae144c80b21c331209393a65b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_c1</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a35e01365aa960cf24b5dde43af9c7e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_c2</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a2ec50e0f7f55d13172c0b8141f77ab64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_omega_pr_tr</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a508d38a627a562d2d2937acc433a9c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_Y_pr_tr</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a6b3bf9e8e81b494745a073d6ed3d27b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_Z_pr_tr</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a8eac660e87e3c4ec6f876eed3fff6d24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_presR_bar</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>ac4f6b9c6fcb1e5006522b9f63f4863f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_domega_jdT_prtr</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a2985d78cef7e16bbdde0ae8856845376</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_charge_j</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a2ac438339aa81b023fea50594edf3b8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static int</type>
      <name>s_InputInconsistencyErrorExit</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a041a70d2d8d0f3d8a8606c7d72150e9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>enthalpy_mole2</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a83e687e8607ef44c1cc4a33d7fb1db02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>af3b7fb6d3a5817a1fb3edff83294a1d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>aaf04e92fc17efaa2c07df42c06c0d563</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>molarVolume</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>aa4a74b0b8eef5815d243b3c05a0daf94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>density</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>ac27248f236e9f0dbcf5521410c52ee2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_RT_ref</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>ace464815b68c442bdcdc8218f105d242</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>ab270e5d2bc0bc45d14381ee60c95fc62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_R_ref</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>acc8511896e66169a24c0d84392721523</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_R_ref</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a17874bf75619f3de87e86bfd7f0ee621</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>molarVolume_ref</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a856b004b60835e5296d9975ae2c8f590</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TP</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a4b6275f3750b35ed5d1e2706613efa33</anchor>
      <arglist>(doublereal temp, doublereal pres)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParent</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>ab8186a8d79b7f413af6bf94022a1016c</anchor>
      <arglist>(VPStandardStateTP *phase, size_t k)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>useSTITbyPDSS</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a175adead89001f144010c7952ef8afeb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeltaH0</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>af8933299d188badeb0eb955be8ca4aa4</anchor>
      <arglist>(double dh0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeltaG0</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a4a7fc11cdf48a6a07bf33a031880cb3b</anchor>
      <arglist>(double dg0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setS0</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a790262f14c6d1be1a7a4150abeeb9dfc</anchor>
      <arglist>(double s0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_a</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a9a563f17f7cf84d3c72bfdaab25d7f60</anchor>
      <arglist>(double *a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_c</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>ae95216ff023b609013188694158c886e</anchor>
      <arglist>(double *c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOmega</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a0071f4a051421720d232b6a0b24a1e78</anchor>
      <arglist>(double omega)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>aaecac157fd301110eb8779cf9ac40263</anchor>
      <arglist>(const XML_Node &amp;speciesNode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reportParams</name>
      <anchorfile>classCantera_1_1PDSS__HKFT.html</anchorfile>
      <anchor>a2d1ce7f174da2326366f7ec41c6f65f0</anchor>
      <arglist>(size_t &amp;kindex, int &amp;type, doublereal *const c, doublereal &amp;minTemp, doublereal &amp;maxTemp, doublereal &amp;refPressure) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::PDSS_IdealGas</name>
    <filename>classCantera_1_1PDSS__IdealGas.html</filename>
    <base>Cantera::PDSS_Nondimensional</base>
    <member kind="function">
      <type></type>
      <name>PDSS_IdealGas</name>
      <anchorfile>classCantera_1_1PDSS__IdealGas.html</anchorfile>
      <anchor>aa2fa1bd2e1e2b0394b9ec55b490a2890</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1PDSS__IdealGas.html</anchorfile>
      <anchor>af3b7fb6d3a5817a1fb3edff83294a1d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1PDSS__IdealGas.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1PDSS__IdealGas.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1PDSS__IdealGas.html</anchorfile>
      <anchor>a47308c7661d4a0af39bd19c14cd5b4f8</anchor>
      <arglist>(doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTemperature</name>
      <anchorfile>classCantera_1_1PDSS__IdealGas.html</anchorfile>
      <anchor>a6af23ee4714da8286b984b3730f5b58e</anchor>
      <arglist>(doublereal temp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TP</name>
      <anchorfile>classCantera_1_1PDSS__IdealGas.html</anchorfile>
      <anchor>a4b6275f3750b35ed5d1e2706613efa33</anchor>
      <arglist>(doublereal temp, doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TR</name>
      <anchorfile>classCantera_1_1PDSS__IdealGas.html</anchorfile>
      <anchor>ac04a7631adf59927f573421ea932a36d</anchor>
      <arglist>(doublereal temp, doublereal rho)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1PDSS__IdealGas.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1PDSS__IdealGas.html</anchorfile>
      <anchor>af3b7fb6d3a5817a1fb3edff83294a1d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1PDSS__IdealGas.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1PDSS__IdealGas.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1PDSS__IdealGas.html</anchorfile>
      <anchor>a47308c7661d4a0af39bd19c14cd5b4f8</anchor>
      <arglist>(doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTemperature</name>
      <anchorfile>classCantera_1_1PDSS__IdealGas.html</anchorfile>
      <anchor>a6af23ee4714da8286b984b3730f5b58e</anchor>
      <arglist>(doublereal temp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TP</name>
      <anchorfile>classCantera_1_1PDSS__IdealGas.html</anchorfile>
      <anchor>a4b6275f3750b35ed5d1e2706613efa33</anchor>
      <arglist>(doublereal temp, doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TR</name>
      <anchorfile>classCantera_1_1PDSS__IdealGas.html</anchorfile>
      <anchor>ac04a7631adf59927f573421ea932a36d</anchor>
      <arglist>(doublereal temp, doublereal rho)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1PDSS__IdealGas.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::PDSS_IonsFromNeutral</name>
    <filename>classCantera_1_1PDSS__IonsFromNeutral.html</filename>
    <base>Cantera::PDSS_Nondimensional</base>
    <member kind="function">
      <type></type>
      <name>PDSS_IonsFromNeutral</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>a1b1f3d2491a0b7abe1fa1ee62625872c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_RT</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>a529d50bb049c8de40aaa0eb20bf090dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>af3b7fb6d3a5817a1fb3edff83294a1d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_R</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>a1a964329022a0f04d029320d6db2fe36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_RT</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>a5e5c60be82cf8e0e3847ac4bb45a0a7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_R</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>a82ca41b7bc990d8a7b498e5481ebe39a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>molarVolume</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>aa4a74b0b8eef5815d243b3c05a0daf94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>density</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>ac27248f236e9f0dbcf5521410c52ee2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_RT_ref</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>ace464815b68c442bdcdc8218f105d242</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>ab270e5d2bc0bc45d14381ee60c95fc62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_R_ref</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>acc8511896e66169a24c0d84392721523</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_R_ref</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>a17874bf75619f3de87e86bfd7f0ee621</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>molarVolume_ref</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>a856b004b60835e5296d9975ae2c8f590</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TP</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>a4b6275f3750b35ed5d1e2706613efa33</anchor>
      <arglist>(doublereal temp, doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TR</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>ac04a7631adf59927f573421ea932a36d</anchor>
      <arglist>(doublereal temp, doublereal rho)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParent</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>ab8186a8d79b7f413af6bf94022a1016c</anchor>
      <arglist>(VPStandardStateTP *phase, size_t k)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>useSTITbyPDSS</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>a175adead89001f144010c7952ef8afeb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>aaecac157fd301110eb8779cf9ac40263</anchor>
      <arglist>(const XML_Node &amp;speciesNode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>shared_ptr&lt; ThermoPhase &gt;</type>
      <name>neutralMoleculePhase_</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>aa22d476d4dd6ab63b75c539abc9c4536</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>numMult_</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>a43bc7ee8857bcc69e35e21482b16531b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>idNeutralMoleculeVec</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>a003eb25cee88cb75feb234abd451b2df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>factorVec</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>a3fed159c0563a5c6c628fc4339065ecb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>add2RTln2_</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>ad397a89e9bd979b48c159e8e2891710e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>tmpNM</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>ac76b771497e24b6e2858ff85c395f068</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_RT</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>a529d50bb049c8de40aaa0eb20bf090dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>af3b7fb6d3a5817a1fb3edff83294a1d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_R</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>a1a964329022a0f04d029320d6db2fe36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_RT</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>a5e5c60be82cf8e0e3847ac4bb45a0a7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_R</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>a82ca41b7bc990d8a7b498e5481ebe39a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>molarVolume</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>aa4a74b0b8eef5815d243b3c05a0daf94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>density</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>ac27248f236e9f0dbcf5521410c52ee2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_RT_ref</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>ace464815b68c442bdcdc8218f105d242</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>ab270e5d2bc0bc45d14381ee60c95fc62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_R_ref</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>acc8511896e66169a24c0d84392721523</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_R_ref</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>a17874bf75619f3de87e86bfd7f0ee621</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>molarVolume_ref</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>a856b004b60835e5296d9975ae2c8f590</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TP</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>a4b6275f3750b35ed5d1e2706613efa33</anchor>
      <arglist>(doublereal temp, doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TR</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>ac04a7631adf59927f573421ea932a36d</anchor>
      <arglist>(doublereal temp, doublereal rho)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParent</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>ab8186a8d79b7f413af6bf94022a1016c</anchor>
      <arglist>(VPStandardStateTP *phase, size_t k)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>useSTITbyPDSS</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>a175adead89001f144010c7952ef8afeb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>aaecac157fd301110eb8779cf9ac40263</anchor>
      <arglist>(const XML_Node &amp;speciesNode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1PDSS__IonsFromNeutral.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::PDSS_Molar</name>
    <filename>classCantera_1_1PDSS__Molar.html</filename>
    <base virtualness="virtual">Cantera::PDSS</base>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_RT</name>
      <anchorfile>classCantera_1_1PDSS__Molar.html</anchorfile>
      <anchor>a529d50bb049c8de40aaa0eb20bf090dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_R</name>
      <anchorfile>classCantera_1_1PDSS__Molar.html</anchorfile>
      <anchor>a1a964329022a0f04d029320d6db2fe36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_RT</name>
      <anchorfile>classCantera_1_1PDSS__Molar.html</anchorfile>
      <anchor>a5e5c60be82cf8e0e3847ac4bb45a0a7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_R</name>
      <anchorfile>classCantera_1_1PDSS__Molar.html</anchorfile>
      <anchor>a82ca41b7bc990d8a7b498e5481ebe39a</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::PDSS_Nondimensional</name>
    <filename>classCantera_1_1PDSS__Nondimensional.html</filename>
    <base virtualness="virtual">Cantera::PDSS</base>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>aaf04e92fc17efaa2c07df42c06c0d563</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>enthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>aae1fd44724c96444a3b6eedb09637e76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>entropy_R_ref</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>a79763235f986c42b8a138f2b1549b145</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>gibbs_RT_ref</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>afe098210d2bedcad6d0f1b215264d8eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>cp_R_ref</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>a210c2feb7aaf80c270b0dddf860163fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>molarVolume_ref</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>a8cb817ce6c630d78b4451f344ab6a835</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>enthalpy_RT</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>aa203957f8e61aa68893eaeca09a1d061</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>entropy_R</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>ab0f8f73ba2ab34aa8591366d5b268bd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>gibbs_RT</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>a1645dfe979c02d74424f2ea29189d8cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>cp_R</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>add2cbcf4078bd28bcba4c3bc5b0d6520</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>molarVolume</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>ae3a54c705325720397ebfe07306a7ee5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>density</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>a24e48d3a400a70ce74d269099e1bd725</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_h0_RT</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>a7c4c85e43604336b267d7f852373c633</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_cp0_R</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>ab88d4fa54b8ccc55c2735da8e5f57e0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_s0_R</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>a902fb2630ac8d020f42a7cc9d3b03698</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_g0_RT</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>a877402809f07f2d442e7358dba0fc5f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_V0</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>aeb94e341d2e55e90eefe52b10e5e5bd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_hss_RT</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>ad220203ed59bc402a39bf8e6c38cbe53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_cpss_R</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>a53979424ff51b680520b15d7ff78179b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_sss_R</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>a15d4e480e8f4ad1fe01f8880338c56db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_gss_RT</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>aa2c261cd0721129d880f5c3f55da783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_Vss</name>
      <anchorfile>classCantera_1_1PDSS__Nondimensional.html</anchorfile>
      <anchor>ac83e7615229bcf36935e8bd2f95ae8c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::PDSS_SSVol</name>
    <filename>classCantera_1_1PDSS__SSVol.html</filename>
    <base>Cantera::PDSS_Nondimensional</base>
    <member kind="function">
      <type></type>
      <name>PDSS_SSVol</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>a781766d8e18b40e0145a40abe0424196</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>af3b7fb6d3a5817a1fb3edff83294a1d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>a47308c7661d4a0af39bd19c14cd5b4f8</anchor>
      <arglist>(doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTemperature</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>a6af23ee4714da8286b984b3730f5b58e</anchor>
      <arglist>(doublereal temp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TP</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>a4b6275f3750b35ed5d1e2706613efa33</anchor>
      <arglist>(doublereal temp, doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TR</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>ac04a7631adf59927f573421ea932a36d</anchor>
      <arglist>(doublereal temp, doublereal rho)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>satPressure</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>accb8f654e680f86cca2b67f938e34a23</anchor>
      <arglist>(doublereal t)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVolumePolynomial</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>a4ac8cdc9335c77b79624996e56cabe4a</anchor>
      <arglist>(double *coeffs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDensityPolynomial</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>a494bcf09958a279f0fda0fe9fd9cf672</anchor>
      <arglist>(double *coeffs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>aaecac157fd301110eb8779cf9ac40263</anchor>
      <arglist>(const XML_Node &amp;speciesNode)</arglist>
    </member>
    <member kind="enumeration" protection="private">
      <type></type>
      <name>SSVolume_Model</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>aad7de90123125002bfe54fb511437f0f</anchor>
      <arglist></arglist>
      <enumvalue file="classCantera_1_1PDSS__SSVol.html" anchor="aad7de90123125002bfe54fb511437f0fa1f3c6d4f51c85d4590fa7d7e79c12fcd">tpoly</enumvalue>
      <enumvalue file="classCantera_1_1PDSS__SSVol.html" anchor="aad7de90123125002bfe54fb511437f0fa96f291a3abf91bcf21b98905ce4b7501">density_tpoly</enumvalue>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>calcMolarVolume</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>aaff9dcee5c55490a7543b8f203f876d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SSVolume_Model</type>
      <name>volumeModel_</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>aed2d4e28718b0dcdad93db79de03d04b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>TCoeff_</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>a596354302023eeb70e5215cf4818cb64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>dVdT_</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>a7c303687d12a71ab1e7f5b965fc212ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>d2VdT2_</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>a33ea668fef45f918be537798e79707fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>af3b7fb6d3a5817a1fb3edff83294a1d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>a47308c7661d4a0af39bd19c14cd5b4f8</anchor>
      <arglist>(doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTemperature</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>a6af23ee4714da8286b984b3730f5b58e</anchor>
      <arglist>(doublereal temp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TP</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>a4b6275f3750b35ed5d1e2706613efa33</anchor>
      <arglist>(doublereal temp, doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TR</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>ac04a7631adf59927f573421ea932a36d</anchor>
      <arglist>(doublereal temp, doublereal rho)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>satPressure</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>accb8f654e680f86cca2b67f938e34a23</anchor>
      <arglist>(doublereal t)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVolumePolynomial</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>a4ac8cdc9335c77b79624996e56cabe4a</anchor>
      <arglist>(double *coeffs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDensityPolynomial</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>a494bcf09958a279f0fda0fe9fd9cf672</anchor>
      <arglist>(double *coeffs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1PDSS__SSVol.html</anchorfile>
      <anchor>aaecac157fd301110eb8779cf9ac40263</anchor>
      <arglist>(const XML_Node &amp;speciesNode)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::PDSS_Water</name>
    <filename>classCantera_1_1PDSS__Water.html</filename>
    <base>Cantera::PDSS_Molar</base>
    <member kind="function">
      <type></type>
      <name>PDSS_Water</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>ae8a3059c122b09c31c42e992e63db8c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>useSTITbyPDSS</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a175adead89001f144010c7952ef8afeb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>af3b7fb6d3a5817a1fb3edff83294a1d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>aaf04e92fc17efaa2c07df42c06c0d563</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>molarVolume</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>aa4a74b0b8eef5815d243b3c05a0daf94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>density</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>ac27248f236e9f0dbcf5521410c52ee2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>pref_safe</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a3b4d18c7ef83976fdb575855b510c078</anchor>
      <arglist>(doublereal temp) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_RT_ref</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>ace464815b68c442bdcdc8218f105d242</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>ab270e5d2bc0bc45d14381ee60c95fc62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_R_ref</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>acc8511896e66169a24c0d84392721523</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_R_ref</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a17874bf75619f3de87e86bfd7f0ee621</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>molarVolume_ref</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a856b004b60835e5296d9975ae2c8f590</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a47308c7661d4a0af39bd19c14cd5b4f8</anchor>
      <arglist>(doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTemperature</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a6af23ee4714da8286b984b3730f5b58e</anchor>
      <arglist>(doublereal temp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TP</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a4b6275f3750b35ed5d1e2706613efa33</anchor>
      <arglist>(doublereal temp, doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TR</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>ac04a7631adf59927f573421ea932a36d</anchor>
      <arglist>(doublereal temp, doublereal rho)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDensity</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a8360056e5dd294be9423798750740a40</anchor>
      <arglist>(doublereal dens)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalExpansionCoeff</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a661ba8332a19cb48e3e03136c1bce6a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>dthermalExpansionCoeffdT</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a6dbbd7e5e55ce44833656246576344cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>isothermalCompressibility</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>afbf834ae5cd73373fa5681bbdc329f1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critTemperature</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a92cc18825b968c6195896358fbfe1744</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critPressure</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a44de713a0ca6361efcabe18dfc265b1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critDensity</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>ae7ff0cbd1630614df97698d026f47114</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>satPressure</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>accb8f654e680f86cca2b67f938e34a23</anchor>
      <arglist>(doublereal t)</arglist>
    </member>
    <member kind="function">
      <type>WaterPropsIAPWS *</type>
      <name>getWater</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>ac102af441050688cd96d06c4b42d37fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WaterProps *</type>
      <name>getWaterProps</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a3d999fb6ea43705e4100292818ee18ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_allowGasPhase</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>ad910d5c2b68d8a353537b29190dc0e8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WaterPropsIAPWS</type>
      <name>m_sub</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a18576916bbf6909bd642c3714bc20f0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WaterProps</type>
      <name>m_waterProps</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a00107a4fb3a0f81633a2d5a79d43c387</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_dens</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>ace20238937c09ce0f28bbcd0d6a39137</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_iState</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>aaf4b5c54cc6b58ff8e35d84b4cd17c41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>EW_Offset</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a54c5137de9919fcfb8e65f4eb841154c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>SW_Offset</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>ad00cc543f584a3b6e280334b2bcb1682</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>af3b7fb6d3a5817a1fb3edff83294a1d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>aaf04e92fc17efaa2c07df42c06c0d563</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>molarVolume</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>aa4a74b0b8eef5815d243b3c05a0daf94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>density</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>ac27248f236e9f0dbcf5521410c52ee2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>pref_safe</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a3b4d18c7ef83976fdb575855b510c078</anchor>
      <arglist>(doublereal temp) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_RT_ref</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>ace464815b68c442bdcdc8218f105d242</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>ab270e5d2bc0bc45d14381ee60c95fc62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_R_ref</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>acc8511896e66169a24c0d84392721523</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_R_ref</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a17874bf75619f3de87e86bfd7f0ee621</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>molarVolume_ref</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a856b004b60835e5296d9975ae2c8f590</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a47308c7661d4a0af39bd19c14cd5b4f8</anchor>
      <arglist>(doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTemperature</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a6af23ee4714da8286b984b3730f5b58e</anchor>
      <arglist>(doublereal temp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TP</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a4b6275f3750b35ed5d1e2706613efa33</anchor>
      <arglist>(doublereal temp, doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TR</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>ac04a7631adf59927f573421ea932a36d</anchor>
      <arglist>(doublereal temp, doublereal rho)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDensity</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a8360056e5dd294be9423798750740a40</anchor>
      <arglist>(doublereal dens)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalExpansionCoeff</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a661ba8332a19cb48e3e03136c1bce6a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>dthermalExpansionCoeffdT</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a6dbbd7e5e55ce44833656246576344cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>isothermalCompressibility</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>afbf834ae5cd73373fa5681bbdc329f1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critTemperature</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a92cc18825b968c6195896358fbfe1744</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critPressure</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a44de713a0ca6361efcabe18dfc265b1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critDensity</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>ae7ff0cbd1630614df97698d026f47114</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>satPressure</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>accb8f654e680f86cca2b67f938e34a23</anchor>
      <arglist>(doublereal t)</arglist>
    </member>
    <member kind="function">
      <type>WaterPropsIAPWS *</type>
      <name>getWater</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>ac102af441050688cd96d06c4b42d37fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WaterProps *</type>
      <name>getWaterProps</name>
      <anchorfile>classCantera_1_1PDSS__Water.html</anchorfile>
      <anchor>a3d999fb6ea43705e4100292818ee18ef</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Periodic1</name>
    <filename>classCantera_1_1Periodic1.html</filename>
    <base>Cantera::Func1</base>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>duplicate</name>
      <anchorfile>classCantera_1_1Periodic1.html</anchorfile>
      <anchor>a4aa86693947c32c642a3d6ee556a8eed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1Periodic1.html</anchorfile>
      <anchor>acd39f99891dcb367c57588ec8c79b0c6</anchor>
      <arglist>(doublereal t) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Phase</name>
    <filename>classCantera_1_1Phase.html</filename>
    <member kind="function">
      <type></type>
      <name>Phase</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a01a3df133ab11a525a09e7d39755077c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>XML_Node &amp;</type>
      <name>xml</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a43e0875c033e89991b7d862a2a2715b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXMLdata</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a504416ca408d67fdbe883c84f1997650</anchor>
      <arglist>(XML_Node &amp;xmlPhase)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveState</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a5831db92e8f4b491eb0a60be474948e1</anchor>
      <arglist>(vector_fp &amp;state) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveState</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a6b95f93ff2ebc714af3ba04bfc9718aa</anchor>
      <arglist>(size_t lenstate, doublereal *state) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restoreState</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ad9d56e81e551bde8e338abab97b41291</anchor>
      <arglist>(const vector_fp &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restoreState</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a87000672f82428a770f46f3955699972</anchor>
      <arglist>(size_t lenstate, const doublereal *state)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>molecularWeight</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a8b32f84f18455a03cd9a569f4ecf434d</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMolecularWeights</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a5deba9b30969c470b6d08b5f1e7ecb3f</anchor>
      <arglist>(vector_fp &amp;weights) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMolecularWeights</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a694d20f2133d743c079fa5d86cc42e8a</anchor>
      <arglist>(doublereal *weights) const</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>molecularWeights</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a6c3fc9b0b9112e70f22931b81543fc38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>size</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a6d3e0d006bb20825da4f3c35dbde5e50</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>charge</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a31b22d3e2fb23ad06af0d0b71996a8f4</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>chargeDensity</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>afa705ae564bc05adb844283c8211e539</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nDim</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a5783610f13bff957c2e70f55a289b6e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNDim</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a4210c3cae4b1c957161a7c76598f4d0c</anchor>
      <arglist>(size_t ndim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ready</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ae0659ce466366fc566dc1425c658a019</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>stateMFNumber</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>accbb1e59abffb8478b60b238f8a62ae7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invalidateCache</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ae4f5daed0983e1d3bfb144a5078d75cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a4c5cdd8165762b000c6518db56830677</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setID</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a6218efb8723a156aec42d9255d3c8e2a</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a1d89c28bd42ba9a52da008bb69367171</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a0d092141a6d79bab09a8854905eab010</anchor>
      <arglist>(const std::string &amp;nm)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>elementName</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>af13fd11a42baa756a4a74a58ae9292e3</anchor>
      <arglist>(size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>elementIndex</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a7ee9d9816e7ccdc24ce5faae35216bdd</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::string &gt; &amp;</type>
      <name>elementNames</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ac60993b24c94fce46234d902ae355303</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>atomicWeight</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a6c8239163b7e4de86cd862b5f72d203e</anchor>
      <arglist>(size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>entropyElement298</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a027a3db596240d10dca53023fdf38cbe</anchor>
      <arglist>(size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>atomicNumber</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a45118a39079506cf57187d3987614eef</anchor>
      <arglist>(size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>elementType</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a9666d18fbdfc3fb04fbc96a43d21ac1f</anchor>
      <arglist>(size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>changeElementType</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a17f871c6f128a5a5f0481d334d888c23</anchor>
      <arglist>(int m, int elem_type)</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>atomicWeights</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a00797b3e1d8c1535089910392ab437ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nElements</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ad0aca0bf5bd91eebb8f6769bb319f869</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkElementIndex</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ae67d7b93f36c4a874722ece717d6a4e6</anchor>
      <arglist>(size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkElementArraySize</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a925c5ef8d9e7b745bd22b0afe8554a14</anchor>
      <arglist>(size_t mm) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>nAtoms</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ac2a7f5caa0d13053e852f4995ed2f0b7</anchor>
      <arglist>(size_t k, size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAtoms</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>aed33d1bc4fa5667e8e9a7c6e8e92f37b</anchor>
      <arglist>(size_t k, double *atomArray) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>speciesIndex</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>adbdb8501badd02b34980d72ce61fba3c</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>speciesName</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a98486daf9a7b1c7f10364afb0f935b55</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>speciesSPName</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a3bf08936de882c6fd9a73ab77790aa1a</anchor>
      <arglist>(int k) const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::string &gt; &amp;</type>
      <name>speciesNames</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ada64b2d509643ddea0014dff45c73ba0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nSpecies</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a2855dfb296334bcd93820d6d90865e08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkSpeciesIndex</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a1b9b39ffa71f92452cc4c8c0f419e3a5</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkSpeciesArraySize</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>acb8933c8503b6e66aedd262054a446a6</anchor>
      <arglist>(size_t kk) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMoleFractionsByName</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a2cccdeb982ba49bc68b6ce4bedaa2449</anchor>
      <arglist>(const compositionMap &amp;xMap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMoleFractionsByName</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a7cbd7fcaa60dc71492d5761c1cc5028d</anchor>
      <arglist>(const std::string &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMassFractionsByName</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ae7b6d572011b2af864f3b5f8c0a7023e</anchor>
      <arglist>(const compositionMap &amp;yMap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMassFractionsByName</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a27d02379fee27539ac2102d1a1dd577b</anchor>
      <arglist>(const std::string &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_TRX</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a4252d5f766d5a48d7df1eb2e10be991a</anchor>
      <arglist>(doublereal t, doublereal dens, const doublereal *x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_TRX</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ad648ec1ad8ba7b3c01c2519fda6f7e0c</anchor>
      <arglist>(doublereal t, doublereal dens, const compositionMap &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_TRY</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a5bd378e07a6d3c9316d722f3c8c70a6d</anchor>
      <arglist>(doublereal t, doublereal dens, const doublereal *y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_TRY</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a155d932520a1360ce0389001466220a2</anchor>
      <arglist>(doublereal t, doublereal dens, const compositionMap &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_TNX</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a83cb23c07a3cf4c31cda2b91de0b61c9</anchor>
      <arglist>(doublereal t, doublereal n, const doublereal *x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_TR</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ac1de77f202d12fa7589f5dc2d288d4e6</anchor>
      <arglist>(doublereal t, doublereal rho)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_TX</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ab470f280ec35f95023cb670de34a4319</anchor>
      <arglist>(doublereal t, doublereal *x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_TY</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>adf0aeecf37e0828050fe432ad8e68a37</anchor>
      <arglist>(doublereal t, doublereal *y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_RX</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a4d5a953fc14eda560aad6db06ac4d525</anchor>
      <arglist>(doublereal rho, doublereal *x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_RY</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a520b586526e9003b8ec03e355dca9ee5</anchor>
      <arglist>(doublereal rho, doublereal *y)</arglist>
    </member>
    <member kind="function">
      <type>compositionMap</type>
      <name>getMoleFractionsByName</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>af85e0c217f821d7e843bf748bd20d998</anchor>
      <arglist>(double threshold=0.0) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>moleFraction</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a52597fe78312285a047171942b7f0dc6</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>moleFraction</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a83755ad170055eb8f652f40c2d0c97be</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>compositionMap</type>
      <name>getMassFractionsByName</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>abd11e1b7d2e123f766a6e059eb66bd6c</anchor>
      <arglist>(double threshold=0.0) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>massFraction</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a02545310dd4a0cec79111ce57696a7de</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>massFraction</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>aee2b9a51ccceb2d87abfff79398c4384</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMoleFractions</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a04eed23312633c3a440512b55f115143</anchor>
      <arglist>(doublereal *const x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMoleFractions</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a9021a59aefd96f389045818f8513abb3</anchor>
      <arglist>(const doublereal *const x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMoleFractions_NoNorm</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>aa64f4b501431fbeedcc035b6a94d705c</anchor>
      <arglist>(const doublereal *const x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMassFractions</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a6b9418f94e42587a55160ae34949534a</anchor>
      <arglist>(doublereal *const y) const</arglist>
    </member>
    <member kind="function">
      <type>const doublereal *</type>
      <name>massFractions</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a12f6d2e86f3e1abbeaa5aab894803d45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMassFractions</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a7aed419246e2ec528d92aadb299369ee</anchor>
      <arglist>(const doublereal *const y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMassFractions_NoNorm</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>abf3f7be7d56c2e1832869479c99cf97c</anchor>
      <arglist>(const doublereal *const y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getConcentrations</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ab52329da3faa3aeec9de0ca3e9dca03f</anchor>
      <arglist>(doublereal *const c) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>concentration</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ade1be6952c56d4b91403b59a2568aef9</anchor>
      <arglist>(const size_t k) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setConcentrations</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a16c732f2580dfe02e9fe7aa6ae2e65f5</anchor>
      <arglist>(const doublereal *const conc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setConcentrationsNoNorm</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a3f1e56fee5d87df36fb51a57a8a71a1e</anchor>
      <arglist>(const double *const conc)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>elementalMassFraction</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a9dbcc0805ef8ee4d4bc542b8c3a1c600</anchor>
      <arglist>(const size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>elementalMoleFraction</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>acebfbd7caf154c5284c2322b4c3660e4</anchor>
      <arglist>(const size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>const doublereal *</type>
      <name>moleFractdivMMW</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ae47e5b9525810369f67da76221d7f4d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>temperature</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ad0673abef723187fd991cb90c658c9c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>density</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a91ec3369070ca50021c0e240ba0c7957</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>molarDensity</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>afd4b13832dc427af059909bd14e97b6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>molarVolume</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>aa4a74b0b8eef5815d243b3c05a0daf94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDensity</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a023358c72024a154f31562ac512e9b54</anchor>
      <arglist>(const doublereal density_)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMolarDensity</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a55bfa4cf0b5685993a5f42540d4aeed7</anchor>
      <arglist>(const doublereal molarDensity)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTemperature</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>adeb5aad57e0139e159018affd970600d</anchor>
      <arglist>(const doublereal temp)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>mean_X</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a18e8384ccd7851619f0a0fc9a1d7d885</anchor>
      <arglist>(const doublereal *const Q) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>mean_X</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a830508b653203be9949941d6ee82f4bd</anchor>
      <arglist>(const vector_fp &amp;Q) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>meanMolecularWeight</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ab0c1e0f49f8ffdd73315d36509303f90</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>sum_xlogx</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>afdc29c1c9f0a3aef3663fd4c4a2d4cef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>addElement</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a13d5282929aad1edae96e6359f70a074</anchor>
      <arglist>(const std::string &amp;symbol, doublereal weight=-12345.0, int atomicNumber=0, doublereal entropy298=ENTROPY298_UNKNOWN, int elem_type=CT_ELEM_TYPE_ABSPOS)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>modifySpecies</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a48f12f73d636ca557009cbc4a6bf9e29</anchor>
      <arglist>(size_t k, shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function">
      <type>shared_ptr&lt; Species &gt;</type>
      <name>species</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>af2ad7154c9650ac2bc583becabf8579d</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>shared_ptr&lt; Species &gt;</type>
      <name>species</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a7acf474044a51fb993425e79bb082b41</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ignoreUndefinedElements</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a343289d424e5d1ee83731516e7942e7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addUndefinedElements</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a3e418353aca9dfd7a39b7e693ccf8352</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>throwUndefinedElements</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>aef0c2b45c33433c80588f5efcdf431a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setMolecularWeight</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ad16a5f2c9daea753ec321499d9a80f2e</anchor>
      <arglist>(const int k, const double mw)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>compositionChanged</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ac901f42e1d2a9513f06eacccf09e11a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ValueCache</type>
      <name>m_cache</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a1e53dfbc10d711d50fdae85bf49423ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_kk</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a44776286c3ba788047554eef4620e6de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_ndim</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a50a6dde923d7b3c82151321348b1a839</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_speciesComp</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a5bffa85d3de44c0405b7343f0cf53ca9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_speciesCharge</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a1a404d2769ec3024f4e8113ebc73c09d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>UndefElement::behavior</type>
      <name>m_undefinedElementBehavior</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a353035056269c0c93681d94c3b0dbc6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>XML_Node *</type>
      <name>m_xml</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ad2104b702d9c4c67c727e51a85954f3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_id</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a4afdd8caeac322bdb1def6148948417b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_name</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>adb41893ba19e889e56c559f25fc1a68a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_temp</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a4d64276995e8b70bb4a09b47c20547f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_dens</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ace20238937c09ce0f28bbcd0d6a39137</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_mmw</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a01a7e74b2d3d1c23746594f55bfeef12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_ym</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a8ceebed5c6a6a5ade7b9948d99f53d80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_y</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a3d09736825ed2cbcb8fa3a4261601699</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_molwts</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a4114b480c83a42ca0f8705e012e54ca5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_rmolwts</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a1a9198ad6225ca8552af941cd99f74e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_stateNum</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>aedd6732d430f0e5d122bb8009365a22d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_speciesNames</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a554b1a2a63c1ac159466c4fac1f14a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, size_t &gt;</type>
      <name>m_speciesIndices</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a1c6a7e256c20a741e14aa9b1d1151986</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>m_mm</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>af0081be78d5328da569458b20cc984aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_atomicWeights</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ab90d2e973264978bb4bf7d1036e973a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_int</type>
      <name>m_atomicNumbers</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a10e7a2ec7a2b9a55e3744e739ca3a06e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_elementNames</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a3df673d3cf60392933541c5a7760a759</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_int</type>
      <name>m_elem_type</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a03e0d05e24468cbededd89e491740b8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_entropy298</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>aa877c19a2e0f3d4360cb927cf65446c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a4c5cdd8165762b000c6518db56830677</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setID</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a6218efb8723a156aec42d9255d3c8e2a</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a1d89c28bd42ba9a52da008bb69367171</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a0d092141a6d79bab09a8854905eab010</anchor>
      <arglist>(const std::string &amp;nm)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>elementName</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>af13fd11a42baa756a4a74a58ae9292e3</anchor>
      <arglist>(size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>elementIndex</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a7ee9d9816e7ccdc24ce5faae35216bdd</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::string &gt; &amp;</type>
      <name>elementNames</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ac60993b24c94fce46234d902ae355303</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>atomicWeight</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a6c8239163b7e4de86cd862b5f72d203e</anchor>
      <arglist>(size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>entropyElement298</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a027a3db596240d10dca53023fdf38cbe</anchor>
      <arglist>(size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>atomicNumber</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a45118a39079506cf57187d3987614eef</anchor>
      <arglist>(size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>elementType</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a9666d18fbdfc3fb04fbc96a43d21ac1f</anchor>
      <arglist>(size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>changeElementType</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a17f871c6f128a5a5f0481d334d888c23</anchor>
      <arglist>(int m, int elem_type)</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>atomicWeights</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a00797b3e1d8c1535089910392ab437ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nElements</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ad0aca0bf5bd91eebb8f6769bb319f869</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkElementIndex</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ae67d7b93f36c4a874722ece717d6a4e6</anchor>
      <arglist>(size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkElementArraySize</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a925c5ef8d9e7b745bd22b0afe8554a14</anchor>
      <arglist>(size_t mm) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>nAtoms</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ac2a7f5caa0d13053e852f4995ed2f0b7</anchor>
      <arglist>(size_t k, size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAtoms</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>aed33d1bc4fa5667e8e9a7c6e8e92f37b</anchor>
      <arglist>(size_t k, double *atomArray) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>speciesIndex</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>adbdb8501badd02b34980d72ce61fba3c</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>speciesName</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a98486daf9a7b1c7f10364afb0f935b55</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>speciesSPName</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a3bf08936de882c6fd9a73ab77790aa1a</anchor>
      <arglist>(int k) const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::string &gt; &amp;</type>
      <name>speciesNames</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ada64b2d509643ddea0014dff45c73ba0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nSpecies</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a2855dfb296334bcd93820d6d90865e08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkSpeciesIndex</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a1b9b39ffa71f92452cc4c8c0f419e3a5</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkSpeciesArraySize</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>acb8933c8503b6e66aedd262054a446a6</anchor>
      <arglist>(size_t kk) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMoleFractionsByName</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a2cccdeb982ba49bc68b6ce4bedaa2449</anchor>
      <arglist>(const compositionMap &amp;xMap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMoleFractionsByName</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a7cbd7fcaa60dc71492d5761c1cc5028d</anchor>
      <arglist>(const std::string &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMassFractionsByName</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ae7b6d572011b2af864f3b5f8c0a7023e</anchor>
      <arglist>(const compositionMap &amp;yMap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMassFractionsByName</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a27d02379fee27539ac2102d1a1dd577b</anchor>
      <arglist>(const std::string &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_TRX</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a4252d5f766d5a48d7df1eb2e10be991a</anchor>
      <arglist>(doublereal t, doublereal dens, const doublereal *x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_TRX</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ad648ec1ad8ba7b3c01c2519fda6f7e0c</anchor>
      <arglist>(doublereal t, doublereal dens, const compositionMap &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_TRY</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a5bd378e07a6d3c9316d722f3c8c70a6d</anchor>
      <arglist>(doublereal t, doublereal dens, const doublereal *y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_TRY</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a155d932520a1360ce0389001466220a2</anchor>
      <arglist>(doublereal t, doublereal dens, const compositionMap &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_TNX</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a83cb23c07a3cf4c31cda2b91de0b61c9</anchor>
      <arglist>(doublereal t, doublereal n, const doublereal *x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_TR</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ac1de77f202d12fa7589f5dc2d288d4e6</anchor>
      <arglist>(doublereal t, doublereal rho)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_TX</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ab470f280ec35f95023cb670de34a4319</anchor>
      <arglist>(doublereal t, doublereal *x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_TY</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>adf0aeecf37e0828050fe432ad8e68a37</anchor>
      <arglist>(doublereal t, doublereal *y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_RX</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a4d5a953fc14eda560aad6db06ac4d525</anchor>
      <arglist>(doublereal rho, doublereal *x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_RY</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a520b586526e9003b8ec03e355dca9ee5</anchor>
      <arglist>(doublereal rho, doublereal *y)</arglist>
    </member>
    <member kind="function">
      <type>compositionMap</type>
      <name>getMoleFractionsByName</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>af85e0c217f821d7e843bf748bd20d998</anchor>
      <arglist>(double threshold=0.0) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>moleFraction</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a52597fe78312285a047171942b7f0dc6</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>moleFraction</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a83755ad170055eb8f652f40c2d0c97be</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>compositionMap</type>
      <name>getMassFractionsByName</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>abd11e1b7d2e123f766a6e059eb66bd6c</anchor>
      <arglist>(double threshold=0.0) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>massFraction</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a02545310dd4a0cec79111ce57696a7de</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>massFraction</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>aee2b9a51ccceb2d87abfff79398c4384</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMoleFractions</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a04eed23312633c3a440512b55f115143</anchor>
      <arglist>(doublereal *const x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMoleFractions</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a9021a59aefd96f389045818f8513abb3</anchor>
      <arglist>(const doublereal *const x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMoleFractions_NoNorm</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>aa64f4b501431fbeedcc035b6a94d705c</anchor>
      <arglist>(const doublereal *const x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMassFractions</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a6b9418f94e42587a55160ae34949534a</anchor>
      <arglist>(doublereal *const y) const</arglist>
    </member>
    <member kind="function">
      <type>const doublereal *</type>
      <name>massFractions</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a12f6d2e86f3e1abbeaa5aab894803d45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMassFractions</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a7aed419246e2ec528d92aadb299369ee</anchor>
      <arglist>(const doublereal *const y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMassFractions_NoNorm</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>abf3f7be7d56c2e1832869479c99cf97c</anchor>
      <arglist>(const doublereal *const y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getConcentrations</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ab52329da3faa3aeec9de0ca3e9dca03f</anchor>
      <arglist>(doublereal *const c) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>concentration</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ade1be6952c56d4b91403b59a2568aef9</anchor>
      <arglist>(const size_t k) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setConcentrations</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a16c732f2580dfe02e9fe7aa6ae2e65f5</anchor>
      <arglist>(const doublereal *const conc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setConcentrationsNoNorm</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a3f1e56fee5d87df36fb51a57a8a71a1e</anchor>
      <arglist>(const double *const conc)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>elementalMassFraction</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a9dbcc0805ef8ee4d4bc542b8c3a1c600</anchor>
      <arglist>(const size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>elementalMoleFraction</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>acebfbd7caf154c5284c2322b4c3660e4</anchor>
      <arglist>(const size_t m) const</arglist>
    </member>
    <member kind="function">
      <type>const doublereal *</type>
      <name>moleFractdivMMW</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ae47e5b9525810369f67da76221d7f4d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>temperature</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ad0673abef723187fd991cb90c658c9c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>density</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a91ec3369070ca50021c0e240ba0c7957</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>molarDensity</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>afd4b13832dc427af059909bd14e97b6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>molarVolume</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>aa4a74b0b8eef5815d243b3c05a0daf94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDensity</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a023358c72024a154f31562ac512e9b54</anchor>
      <arglist>(const doublereal density_)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMolarDensity</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a55bfa4cf0b5685993a5f42540d4aeed7</anchor>
      <arglist>(const doublereal molarDensity)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTemperature</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>adeb5aad57e0139e159018affd970600d</anchor>
      <arglist>(const doublereal temp)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>mean_X</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a18e8384ccd7851619f0a0fc9a1d7d885</anchor>
      <arglist>(const doublereal *const Q) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>mean_X</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a830508b653203be9949941d6ee82f4bd</anchor>
      <arglist>(const vector_fp &amp;Q) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>meanMolecularWeight</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>ab0c1e0f49f8ffdd73315d36509303f90</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>sum_xlogx</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>afdc29c1c9f0a3aef3663fd4c4a2d4cef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>addElement</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a13d5282929aad1edae96e6359f70a074</anchor>
      <arglist>(const std::string &amp;symbol, doublereal weight=-12345.0, int atomicNumber=0, doublereal entropy298=ENTROPY298_UNKNOWN, int elem_type=CT_ELEM_TYPE_ABSPOS)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>modifySpecies</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a48f12f73d636ca557009cbc4a6bf9e29</anchor>
      <arglist>(size_t k, shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function">
      <type>shared_ptr&lt; Species &gt;</type>
      <name>species</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>af2ad7154c9650ac2bc583becabf8579d</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>shared_ptr&lt; Species &gt;</type>
      <name>species</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a7acf474044a51fb993425e79bb082b41</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ignoreUndefinedElements</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a343289d424e5d1ee83731516e7942e7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addUndefinedElements</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>a3e418353aca9dfd7a39b7e693ccf8352</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>throwUndefinedElements</name>
      <anchorfile>classCantera_1_1Phase.html</anchorfile>
      <anchor>aef0c2b45c33433c80588f5efcdf431a5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::PhaseCombo_Interaction</name>
    <filename>classCantera_1_1PhaseCombo__Interaction.html</filename>
    <base>Cantera::GibbsExcessVPSSTP</base>
    <member kind="function">
      <type></type>
      <name>PhaseCombo_Interaction</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>ab55fed7c09e9f82e74f09eb91a30fa55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PhaseCombo_Interaction</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>aa06c76a60054e1c8df9e0a641aacc419</anchor>
      <arglist>(const std::string &amp;inputFile, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PhaseCombo_Interaction</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a36a661ae81fd7e78e95c9f416aee3cc4</anchor>
      <arglist>(XML_Node &amp;phaseRef, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a20b3c290780f2f094b028e19b63b8e6e</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getd2lnActCoeffdT2</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a22950a59c8b7816b05fae7348699ff81</anchor>
      <arglist>(doublereal *d2lnActCoeffdT2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdT</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a3e608e528b93cf0ae38dcde50abaa77a</anchor>
      <arglist>(doublereal *dlnActCoeffdT) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffds</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>ac33a2e58cc6eb31260200425bb058ddc</anchor>
      <arglist>(const doublereal dTds, const doublereal *const dXds, doublereal *dlnActCoeffds) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnX_diag</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a57a7fa2f18d1b1635b848748ac679ca2</anchor>
      <arglist>(doublereal *dlnActCoeffdlnX_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN_diag</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>abd4c877b1646e599caf7c87d872c7dc3</anchor>
      <arglist>(doublereal *dlnActCoeffdlnN_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a4a2e93544bb41c14ed880a4595e110cc</anchor>
      <arglist>(const size_t ld, doublereal *const dlnActCoeffdlnN)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>numBinaryInteractions_</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a3e97be8157a9776967250e5fe6092269</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_HE_b_ij</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a76da411aaed577b0fe2e26d9922a8248</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_HE_c_ij</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a7b3fd3fb37439feaa3b62501b7980f93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_HE_d_ij</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>aaab5bb05626ef8f1de2f729a1385456c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_SE_b_ij</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a9c5ef9aed4ef6a223d516c8633443c5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_SE_c_ij</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a1116bfe22df50b07813827be00fd61b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_SE_d_ij</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a7d6cd6e0d280171cf820ad4611609f14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_VHE_b_ij</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>aa91c8c1648f90912de7c91ceeedca27f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_VHE_c_ij</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a6f17e21b23998008496b512f3e7bb067</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_VHE_d_ij</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a165a0e3bef029f8492f31947787aaa62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_VSE_b_ij</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>aeeed564c313522f1f48868a68e1fc0c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_VSE_c_ij</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a23d6b4f46bc2c5d107a04f17c4621f6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_VSE_d_ij</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a7aad90580beb73851f72458c65692f15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_pSpecies_A_ij</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a73336923c81bc0951ab24ad6923679a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_pSpecies_B_ij</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>ac81ff27778f560c50d60d5668c870e45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>formMargules_</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a9791be40ec7af06fe61e7f5c5e368e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>formTempModel_</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a31d1c8b9a4ccfcda99571e009d4b614c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>readXMLBinarySpecies</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a4e304c5a0044d22bb156cbd8a977b851</anchor>
      <arglist>(XML_Node &amp;xmlBinarySpecies)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>resizeNumInteractions</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a4d951bbc776f936569b2af3403ce7996</anchor>
      <arglist>(const size_t num)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>initLengths</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>acbd8d9f6e3bcaf6f2115a657e7ce12cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_lnActCoeff</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>ace353fd1300f76a737cd21837ca5011c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnActCoeff_dT</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a734985fc69ffbef2993d9e396d12c442</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnActCoeff_dlnX_diag</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>acdf440da23b10d619f95e8043906f8fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnActCoeff_dlnN_diag</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a47aacd407adbd0eec9c1639b642b005c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnActCoeff_dlnN</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a912b44a90a769f48bbb98805eeb8f3e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a20b3c290780f2f094b028e19b63b8e6e</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getd2lnActCoeffdT2</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a22950a59c8b7816b05fae7348699ff81</anchor>
      <arglist>(doublereal *d2lnActCoeffdT2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdT</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a3e608e528b93cf0ae38dcde50abaa77a</anchor>
      <arglist>(doublereal *dlnActCoeffdT) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffds</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>ac33a2e58cc6eb31260200425bb058ddc</anchor>
      <arglist>(const doublereal dTds, const doublereal *const dXds, doublereal *dlnActCoeffds) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnX_diag</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a57a7fa2f18d1b1635b848748ac679ca2</anchor>
      <arglist>(doublereal *dlnActCoeffdlnX_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN_diag</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>abd4c877b1646e599caf7c87d872c7dc3</anchor>
      <arglist>(doublereal *dlnActCoeffdlnN_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN</name>
      <anchorfile>classCantera_1_1PhaseCombo__Interaction.html</anchorfile>
      <anchor>a4a2e93544bb41c14ed880a4595e110cc</anchor>
      <arglist>(const size_t ld, doublereal *const dlnActCoeffdlnN)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Plog</name>
    <filename>classCantera_1_1Plog.html</filename>
    <member kind="function">
      <type></type>
      <name>Plog</name>
      <anchorfile>classCantera_1_1Plog.html</anchorfile>
      <anchor>a8ffd17900c7abafdc98d5aa2a822da80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plog</name>
      <anchorfile>classCantera_1_1Plog.html</anchorfile>
      <anchor>a1bbada67960fee47c52f6ccc40f4c92b</anchor>
      <arglist>(const std::multimap&lt; double, Arrhenius &gt; &amp;rates)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_C</name>
      <anchorfile>classCantera_1_1Plog.html</anchorfile>
      <anchor>a34f4a70d7ddceff8933b2355763ed69f</anchor>
      <arglist>(const doublereal *c)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>updateRC</name>
      <anchorfile>classCantera_1_1Plog.html</anchorfile>
      <anchor>a354261ac5478e5384ff7d5175682a609</anchor>
      <arglist>(doublereal logT, doublereal recipT) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classCantera_1_1Plog.html</anchorfile>
      <anchor>abc3e78489c0b6f3a30e0f644d7c77d7e</anchor>
      <arglist>(const std::string &amp;equation)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::pair&lt; double, Arrhenius &gt; &gt;</type>
      <name>rates</name>
      <anchorfile>classCantera_1_1Plog.html</anchorfile>
      <anchor>a3f5451418d2b97f2b9f292e1dd94f636</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>type</name>
      <anchorfile>classCantera_1_1Plog.html</anchorfile>
      <anchor>a2e3be63dca2a4aae8e55262718273283</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; double, std::pair&lt; size_t, size_t &gt; &gt;</type>
      <name>pressures_</name>
      <anchorfile>classCantera_1_1Plog.html</anchorfile>
      <anchor>a875dbe3204d309f2ec46fb5d5cc11556</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>logP_</name>
      <anchorfile>classCantera_1_1Plog.html</anchorfile>
      <anchor>ac0213ad5da5f068a9190322a96ba2ed2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>logP2_</name>
      <anchorfile>classCantera_1_1Plog.html</anchorfile>
      <anchor>aff84036df0e9d5a18cbc1b640b3100ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>ilow1_</name>
      <anchorfile>classCantera_1_1Plog.html</anchorfile>
      <anchor>af9f13619038416447883252e43887af8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>rDeltaP_</name>
      <anchorfile>classCantera_1_1Plog.html</anchorfile>
      <anchor>a813594a9fb531a78f1a22511790b7265</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::PlogReaction</name>
    <filename>classCantera_1_1PlogReaction.html</filename>
    <base>Cantera::Reaction</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>validate</name>
      <anchorfile>classCantera_1_1PlogReaction.html</anchorfile>
      <anchor>a41d45236c37b75848f4b1667a11fb50e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::PlusConstant1</name>
    <filename>classCantera_1_1PlusConstant1.html</filename>
    <base>Cantera::Func1</base>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>duplicate</name>
      <anchorfile>classCantera_1_1PlusConstant1.html</anchorfile>
      <anchor>a4aa86693947c32c642a3d6ee556a8eed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1PlusConstant1.html</anchorfile>
      <anchor>acd39f99891dcb367c57588ec8c79b0c6</anchor>
      <arglist>(doublereal t) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>derivative</name>
      <anchorfile>classCantera_1_1PlusConstant1.html</anchorfile>
      <anchor>a79b93814a3999ee82ef932b9b861d9b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>order</name>
      <anchorfile>classCantera_1_1PlusConstant1.html</anchorfile>
      <anchor>a177cd31efbfb81626a24dea53fcabfe8</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Poly1</name>
    <filename>classCantera_1_1Poly1.html</filename>
    <base>Cantera::Func1</base>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>duplicate</name>
      <anchorfile>classCantera_1_1Poly1.html</anchorfile>
      <anchor>a4aa86693947c32c642a3d6ee556a8eed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1Poly1.html</anchorfile>
      <anchor>acd39f99891dcb367c57588ec8c79b0c6</anchor>
      <arglist>(doublereal t) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Pow1</name>
    <filename>classCantera_1_1Pow1.html</filename>
    <base>Cantera::Func1</base>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>duplicate</name>
      <anchorfile>classCantera_1_1Pow1.html</anchorfile>
      <anchor>a4aa86693947c32c642a3d6ee556a8eed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1Pow1.html</anchorfile>
      <anchor>acd39f99891dcb367c57588ec8c79b0c6</anchor>
      <arglist>(doublereal t) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>derivative</name>
      <anchorfile>classCantera_1_1Pow1.html</anchorfile>
      <anchor>add413b6d193ee81507d1b6c2e6a7077e</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::PressureController</name>
    <filename>classCantera_1_1PressureController.html</filename>
    <base>Cantera::FlowDevice</base>
    <member kind="function">
      <type>void</type>
      <name>setPressureCoeff</name>
      <anchorfile>classCantera_1_1PressureController.html</anchorfile>
      <anchor>a9baea6dc5e7d61c3fcb3f94f00e87731</anchor>
      <arglist>(double c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateMassFlowRate</name>
      <anchorfile>classCantera_1_1PressureController.html</anchorfile>
      <anchor>a3aad33ef5dfee5e6b1de346b4c3ad2ca</anchor>
      <arglist>(doublereal time)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Product1</name>
    <filename>classCantera_1_1Product1.html</filename>
    <base>Cantera::Func1</base>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>duplicate</name>
      <anchorfile>classCantera_1_1Product1.html</anchorfile>
      <anchor>a4aa86693947c32c642a3d6ee556a8eed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1Product1.html</anchorfile>
      <anchor>acd39f99891dcb367c57588ec8c79b0c6</anchor>
      <arglist>(doublereal t) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>derivative</name>
      <anchorfile>classCantera_1_1Product1.html</anchorfile>
      <anchor>a79b93814a3999ee82ef932b9b861d9b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>order</name>
      <anchorfile>classCantera_1_1Product1.html</anchorfile>
      <anchor>a177cd31efbfb81626a24dea53fcabfe8</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::PureFluid</name>
    <filename>classCantera_1_1PureFluid.html</filename>
    <base>Cantera::PureFluidPhase</base>
    <member kind="function">
      <type>bool</type>
      <name>ready</name>
      <anchorfile>classCantera_1_1PureFluid.html</anchorfile>
      <anchor>ae0659ce466366fc566dc1425c658a019</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::PureFluidPhase</name>
    <filename>classCantera_1_1PureFluidPhase.html</filename>
    <base>Cantera::ThermoPhase</base>
    <member kind="function">
      <type></type>
      <name>PureFluidPhase</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a6f2308cdfa0af9a9ed2dbfaac14cf52d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSubstance</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>ac1dc7ce67aa1531d0a29bfbd64192a88</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>minTemp</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a96ee191333f5a1df27e866831d190722</anchor>
      <arglist>(size_t k=npos) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>maxTemp</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>ac865c1957b95d3776f9ff6abf326102a</anchor>
      <arglist>(size_t k=npos) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>af3b7fb6d3a5817a1fb3edff83294a1d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>aaf04e92fc17efaa2c07df42c06c0d563</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a3b9a2b69e6daaaee510f7825aa48d4f5</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarIntEnergies</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a36c63d1f3f4faa1f29300b30358536e5</anchor>
      <arglist>(doublereal *ubar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivities</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a25599694fc3e55d19f9af8f0ab5dced1</anchor>
      <arglist>(doublereal *a) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>isothermalCompressibility</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>afbf834ae5cd73373fa5681bbdc329f1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalExpansionCoeff</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a661ba8332a19cb48e3e03136c1bce6a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tpx::Substance &amp;</type>
      <name>TPX_Substance</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>ade90920506e34d86450b635b76b05a3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>abe11f2065246742c73c778c5de62f5b7</anchor>
      <arglist>(const XML_Node &amp;eosdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>report</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a288ad853571d32273b68fdcaf9dae337</anchor>
      <arglist>(bool show_thermo=true, doublereal threshold=1e-14) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>compatibleWithMultiPhase</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a6107e1b1da2244719399c92776d5591c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>ac2dc95575420c5c767a7fe4e6161e892</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a2ee9dfc481fbf2c9e915c1e15794d238</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>af9328613fd7ac31d213f4fd284d8ad63</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT_ref</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a15142ba0b60259900efafd8026b51c96</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_ref</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>ae4ec4c8979d7a4b5deb6faf52697a068</anchor>
      <arglist>(doublereal *g) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R_ref</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a9d67a94aa582d60860f4658ea11e1aa3</anchor>
      <arglist>(doublereal *er) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_HP</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a0d841cf33d6a03652dc1b8c5a1fa8b39</anchor>
      <arglist>(double h, double p, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_UV</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a1122d8ed8cb21c4f89499f0a205666ab</anchor>
      <arglist>(double u, double v, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_SV</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>af093205eee5fdcdaa229e46ae68849d0</anchor>
      <arglist>(double s, double v, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_SP</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a9b4668013babc7cd22e7c0c8d3c2dd35</anchor>
      <arglist>(double s, double p, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_ST</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>afb9fbcec8a327924fa419f0b4e85c624</anchor>
      <arglist>(double s, double t, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TV</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>af06f8c527aa1cc67f15fcb517b5f76d7</anchor>
      <arglist>(double t, double v, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_PV</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a01c98a47ef9cd87a62ac12704a5d0a1a</anchor>
      <arglist>(double p, double v, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_UP</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a388cc166dad6c8e97d07c64d37683f5f</anchor>
      <arglist>(double u, double p, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_VH</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a12f49c5038ff29882bf1c3b0099ee108</anchor>
      <arglist>(double v, double h, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TH</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>afe9e8a097dc3c07c5722f299c62edff9</anchor>
      <arglist>(double t, double h, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_SH</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a619d5ac1d0306033fd2ec56ce5cf6488</anchor>
      <arglist>(double s, double h, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critTemperature</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a92cc18825b968c6195896358fbfe1744</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critPressure</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a44de713a0ca6361efcabe18dfc265b1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critDensity</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>ae7ff0cbd1630614df97698d026f47114</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>satTemperature</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a709e5f72e8a8dc5a9d8b39be14d8f5d8</anchor>
      <arglist>(doublereal p) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>satPressure</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>accb8f654e680f86cca2b67f938e34a23</anchor>
      <arglist>(doublereal t)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>vaporFraction</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a5774dc8fff30f1d0d10de2f91975a9d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_Tsat</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>aac019586af101cbfa5c277a85ca11a88</anchor>
      <arglist>(doublereal t, doublereal x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_Psat</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>ac3b692c981f55f758dbb8ca6dc30f908</anchor>
      <arglist>(doublereal p, doublereal x)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a088be851db671c758c0eb09b292b2a4a</anchor>
      <arglist>(tpx::PropertyPair::type n, double x, double y) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setTPXState</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>acbf25d090a92a94a56ce455301e5c5b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unique_ptr&lt; tpx::Substance &gt;</type>
      <name>m_sub</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>ac1357e3ebc66abdbc7269764d3e6a691</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_subflag</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>aec238d78fb5dbc2c17cb1e582d6863f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_tpx_name</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a1bbb7d56708b489e53b5c34130701b69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_mw</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>abf5389c2ce4d647032551bcb1db5cad3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_verbose</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>af5a4aaa10c7932bb9d0d5da5db5ffc90</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>ac2dc95575420c5c767a7fe4e6161e892</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a2ee9dfc481fbf2c9e915c1e15794d238</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>af9328613fd7ac31d213f4fd284d8ad63</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT_ref</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a15142ba0b60259900efafd8026b51c96</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_ref</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>ae4ec4c8979d7a4b5deb6faf52697a068</anchor>
      <arglist>(doublereal *g) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R_ref</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a9d67a94aa582d60860f4658ea11e1aa3</anchor>
      <arglist>(doublereal *er) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_HP</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a0d841cf33d6a03652dc1b8c5a1fa8b39</anchor>
      <arglist>(double h, double p, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_UV</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a1122d8ed8cb21c4f89499f0a205666ab</anchor>
      <arglist>(double u, double v, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_SV</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>af093205eee5fdcdaa229e46ae68849d0</anchor>
      <arglist>(double s, double v, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_SP</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a9b4668013babc7cd22e7c0c8d3c2dd35</anchor>
      <arglist>(double s, double p, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_ST</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>afb9fbcec8a327924fa419f0b4e85c624</anchor>
      <arglist>(double s, double t, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TV</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>af06f8c527aa1cc67f15fcb517b5f76d7</anchor>
      <arglist>(double t, double v, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_PV</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a01c98a47ef9cd87a62ac12704a5d0a1a</anchor>
      <arglist>(double p, double v, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_UP</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a388cc166dad6c8e97d07c64d37683f5f</anchor>
      <arglist>(double u, double p, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_VH</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a12f49c5038ff29882bf1c3b0099ee108</anchor>
      <arglist>(double v, double h, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TH</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>afe9e8a097dc3c07c5722f299c62edff9</anchor>
      <arglist>(double t, double h, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_SH</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a619d5ac1d0306033fd2ec56ce5cf6488</anchor>
      <arglist>(double s, double h, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critTemperature</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a92cc18825b968c6195896358fbfe1744</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critPressure</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a44de713a0ca6361efcabe18dfc265b1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critDensity</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>ae7ff0cbd1630614df97698d026f47114</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>satTemperature</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a709e5f72e8a8dc5a9d8b39be14d8f5d8</anchor>
      <arglist>(doublereal p) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>satPressure</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>accb8f654e680f86cca2b67f938e34a23</anchor>
      <arglist>(doublereal t)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>vaporFraction</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>a5774dc8fff30f1d0d10de2f91975a9d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_Tsat</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>aac019586af101cbfa5c277a85ca11a88</anchor>
      <arglist>(doublereal t, doublereal x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_Psat</name>
      <anchorfile>classCantera_1_1PureFluidPhase.html</anchorfile>
      <anchor>ac3b692c981f55f758dbb8ca6dc30f908</anchor>
      <arglist>(doublereal p, doublereal x)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Rate1</name>
    <filename>classCantera_1_1Rate1.html</filename>
    <templarg>R</templarg>
    <member kind="function">
      <type>void</type>
      <name>install</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>af81bc0dd28bd940c3d6f6291c0e5bab6</anchor>
      <arglist>(size_t rxnNumber, const R &amp;rate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replace</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a998297d0d63db051793d7b7e62d9bee7</anchor>
      <arglist>(size_t rxnNumber, const R &amp;rate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_C</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a34f4a70d7ddceff8933b2355763ed69f</anchor>
      <arglist>(const doublereal *c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a9af886c1f8a40bd2da1acb497a4745fa</anchor>
      <arglist>(doublereal T, doublereal logT, doublereal *values)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>effectivePreExponentialFactor</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>abfc1ee2c922be69da429b0e66871db44</anchor>
      <arglist>(size_t irxn)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>effectiveActivationEnergy_R</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>aa846c6353dee42f09fb6a1ee4c5356aa</anchor>
      <arglist>(size_t irxn)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>effectiveTemperatureExponent</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a13313dd31d169a480a60162fc3f2c5f4</anchor>
      <arglist>(size_t irxn)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; size_t, size_t &gt;</type>
      <name>m_indices</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a623c3ac2ad3e16e78ddfc91de68ff2a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Ratio1</name>
    <filename>classCantera_1_1Ratio1.html</filename>
    <base>Cantera::Func1</base>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1Ratio1.html</anchorfile>
      <anchor>acd39f99891dcb367c57588ec8c79b0c6</anchor>
      <arglist>(doublereal t) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>duplicate</name>
      <anchorfile>classCantera_1_1Ratio1.html</anchorfile>
      <anchor>a4aa86693947c32c642a3d6ee556a8eed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>derivative</name>
      <anchorfile>classCantera_1_1Ratio1.html</anchorfile>
      <anchor>a79b93814a3999ee82ef932b9b861d9b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>order</name>
      <anchorfile>classCantera_1_1Ratio1.html</anchorfile>
      <anchor>a177cd31efbfb81626a24dea53fcabfe8</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ReactingSurf1D</name>
    <filename>classCantera_1_1ReactingSurf1D.html</filename>
    <base>Cantera::Bdry1D</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>componentName</name>
      <anchorfile>classCantera_1_1ReactingSurf1D.html</anchorfile>
      <anchor>a8b0c3fc1d7eb037a7e987fef3b74baa7</anchor>
      <arglist>(size_t n) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1ReactingSurf1D.html</anchorfile>
      <anchor>a02fd73d861ef2e4aabb38c0c9ff82947</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetBadValues</name>
      <anchorfile>classCantera_1_1ReactingSurf1D.html</anchorfile>
      <anchor>ac62a6125038fdf0ccce236710017c0de</anchor>
      <arglist>(double *xg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1ReactingSurf1D.html</anchorfile>
      <anchor>aa62f69dbb402c9c9de00311a7f5193ad</anchor>
      <arglist>(size_t jg, doublereal *xg, doublereal *rg, integer *diagg, doublereal rdt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual XML_Node &amp;</type>
      <name>save</name>
      <anchorfile>classCantera_1_1ReactingSurf1D.html</anchorfile>
      <anchor>ac2ec60b9aa9b81c157997c4c10594883</anchor>
      <arglist>(XML_Node &amp;o, const doublereal *const soln)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>restore</name>
      <anchorfile>classCantera_1_1ReactingSurf1D.html</anchorfile>
      <anchor>a7f87adb9173d936c9f741a204b94d69c</anchor>
      <arglist>(const XML_Node &amp;dom, doublereal *soln, int loglevel)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>_getInitialSoln</name>
      <anchorfile>classCantera_1_1ReactingSurf1D.html</anchorfile>
      <anchor>a05bdc26a643fdf262f3dd0b8dea46341</anchor>
      <arglist>(doublereal *x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>_finalize</name>
      <anchorfile>classCantera_1_1ReactingSurf1D.html</anchorfile>
      <anchor>a55f842b28fbd6c8287dc8aec065dfaef</anchor>
      <arglist>(const doublereal *x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showSolution</name>
      <anchorfile>classCantera_1_1ReactingSurf1D.html</anchorfile>
      <anchor>a222f24b70509e9f2ec32f8fb3a8bf194</anchor>
      <arglist>(const doublereal *x)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Reaction</name>
    <filename>classCantera_1_1Reaction.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>reactantString</name>
      <anchorfile>classCantera_1_1Reaction.html</anchorfile>
      <anchor>a27cd9a34920a63f5e32b432aa406d85a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>productString</name>
      <anchorfile>classCantera_1_1Reaction.html</anchorfile>
      <anchor>a788c295af7341bdb50e6b88d6970dab8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>equation</name>
      <anchorfile>classCantera_1_1Reaction.html</anchorfile>
      <anchor>aef92fa3cf14a93650af010e24f9c8583</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>validate</name>
      <anchorfile>classCantera_1_1Reaction.html</anchorfile>
      <anchor>a41d45236c37b75848f4b1667a11fb50e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>reaction_type</name>
      <anchorfile>classCantera_1_1Reaction.html</anchorfile>
      <anchor>aed586962f458fa55dc9557e990d6ec98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Composition</type>
      <name>reactants</name>
      <anchorfile>classCantera_1_1Reaction.html</anchorfile>
      <anchor>ad52a8bceda6b7c2911cae98f603751fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Composition</type>
      <name>products</name>
      <anchorfile>classCantera_1_1Reaction.html</anchorfile>
      <anchor>ac966264aa32b0ec0aa02eea272b90668</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Composition</type>
      <name>orders</name>
      <anchorfile>classCantera_1_1Reaction.html</anchorfile>
      <anchor>a36f237860dcfe2063d12a269ac5fdba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>classCantera_1_1Reaction.html</anchorfile>
      <anchor>afd0d68c6d31ff249f3ae8662162663c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>reversible</name>
      <anchorfile>classCantera_1_1Reaction.html</anchorfile>
      <anchor>a8f8edb8b3012f77dc8172037826df5d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>duplicate</name>
      <anchorfile>classCantera_1_1Reaction.html</anchorfile>
      <anchor>ae972378e1b2498cd13d14cbf9a7360a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>allow_nonreactant_orders</name>
      <anchorfile>classCantera_1_1Reaction.html</anchorfile>
      <anchor>a92b874af24c3cca8dafcf211320789ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>allow_negative_orders</name>
      <anchorfile>classCantera_1_1Reaction.html</anchorfile>
      <anchor>ac5a6d942058de3ec422d01d0540ecf6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ReactionPathDiagram</name>
    <filename>classCantera_1_1ReactionPathDiagram.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ReactionPathDiagram</name>
      <anchorfile>classCantera_1_1ReactionPathDiagram.html</anchorfile>
      <anchor>aa9d1a8c873fb03cb670004198662b3fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>maxFlow</name>
      <anchorfile>classCantera_1_1ReactionPathDiagram.html</anchorfile>
      <anchor>a0db420d68eaf688f2e17a7af4fb5263e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>netFlow</name>
      <anchorfile>classCantera_1_1ReactionPathDiagram.html</anchorfile>
      <anchor>a3a906694bdbcef7e9edf4e52bc27e1b8</anchor>
      <arglist>(size_t k1, size_t k2)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>flow</name>
      <anchorfile>classCantera_1_1ReactionPathDiagram.html</anchorfile>
      <anchor>afe2870968670717c18816df34e934099</anchor>
      <arglist>(size_t k1, size_t k2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasNode</name>
      <anchorfile>classCantera_1_1ReactionPathDiagram.html</anchorfile>
      <anchor>a6b9edd1f330a3b2d52e85ba57e55a8e8</anchor>
      <arglist>(size_t k)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exportToDot</name>
      <anchorfile>classCantera_1_1ReactionPathDiagram.html</anchorfile>
      <anchor>a5ae4a4a92a44e78b6085f0229e68a7d7</anchor>
      <arglist>(std::ostream &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Reactor</name>
    <filename>classCantera_1_1Reactor.html</filename>
    <base>Cantera::ReactorBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>type</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>a67b824a3d6f5f8dc7b9f435353c62676</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>a1fc617739ff239e4feeed9d39b31f89b</anchor>
      <arglist>(G &amp;contents)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChemistry</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>ae7efbee8ee360c995af3407b962a67d6</anchor>
      <arglist>(bool cflag=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>chemistryEnabled</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>a0af84d44f0b3dc4bb7fe44a858cfd7f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnergy</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>a73f379b3d9dc2962b749fc31399065bc</anchor>
      <arglist>(int eflag=1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>energyEnabled</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>a39522e4ac9be0ae9fa03ffaa28a1afb3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>neq</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>a627b491f11b9ed84f1f7ca7f63d4f536</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getState</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>a62334bd67a22db256d39b9e673e6a7d3</anchor>
      <arglist>(doublereal *y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>ab2df902e719cd522b0df4d234b016c26</anchor>
      <arglist>(doublereal t0=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evalEqs</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>ab56bbca2717dd3f4851029f65728f745</anchor>
      <arglist>(doublereal t, doublereal *y, doublereal *ydot, doublereal *params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>syncState</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>a9c77f6ac25536bbe5e4923f338932b63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateState</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>a0ff521286d89a1422948c0497385cb28</anchor>
      <arglist>(doublereal *y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>nSensParams</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>aca3001d1dbda7491cf239620fb6dc80c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addSensitivityReaction</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>a72c13195f85f031f275bc073487f64bc</anchor>
      <arglist>(size_t rxn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addSensitivitySpeciesEnthalpy</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>a4bb1b3ff0702700b95faf810bef40cc3</anchor>
      <arglist>(size_t k)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>componentIndex</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>a00653754ecb40ea0445540af4d9cf353</anchor>
      <arglist>(const std::string &amp;nm) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>componentName</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>a88152e299410846a224a41e71e2f1151</anchor>
      <arglist>(size_t k)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>applySensitivity</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>a221894ebae50f192731b829ab4f319ab</anchor>
      <arglist>(double *params)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>resetSensitivity</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>aaec44e718cdcd56423d24433db93e8f5</anchor>
      <arglist>(double *params)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual size_t</type>
      <name>speciesIndex</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>acb329c10e56a680fac6e3343dd403827</anchor>
      <arglist>(const std::string &amp;nm) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>evalWalls</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>a317600ba224a1671399dff2d2798f0e1</anchor>
      <arglist>(double t)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>evalSurfaces</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>a219bba587bf0f627c07870de59ebc2cd</anchor>
      <arglist>(double t, double *ydot)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateSurfaceState</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>a1c4f8ff5f9bfedd7e3131128bc0fe5c5</anchor>
      <arglist>(double *y)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getSurfaceInitialConditions</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>ac3c71ed4ea453f2058a7e8c67f1b2f93</anchor>
      <arglist>(double *y)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Kinetics *</type>
      <name>m_kin</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>a2caf634900eea31d5c76527d1156c996</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_vdot</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>aff2152234e4a791a491756f8ee0df6be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_Q</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>a7441846a3f25996b186ba9d28f2fce0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_mass</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>a70b68e64390c33efe10bf8425ff0ed55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_sdot</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>a9266c99848016e35764f9de87726ec2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_wdot</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>aef2008e3a0dfad3e4dee24816a5e9ae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_uk</name>
      <anchorfile>classCantera_1_1Reactor.html</anchorfile>
      <anchor>af7dd637d7a7279532697899e09d06796</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ReactorBase</name>
    <filename>classCantera_1_1ReactorBase.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>type</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a67b824a3d6f5f8dc7b9f435353c62676</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a1d89c28bd42ba9a52da008bb69367171</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a9d3a2685df23b5e7cbf59c19c4a1f9b5</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restoreState</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>ac205579c212bafefc499b71790a05fa9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>syncState</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a9c77f6ac25536bbe5e4923f338932b63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>thermo_t &amp;</type>
      <name>contents</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a08a589db1d1605310938708740f6a5b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>residenceTime</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a57087ba348c849490e5e7bc239452c6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReactorNet &amp;</type>
      <name>network</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>ac6c8fd91fe8f4c3defd40764f40f21a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNetwork</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a45e6cf16b84379a10882a25fdaf52e60</anchor>
      <arglist>(ReactorNet *net)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVolume</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>aad53e4816405e46921bcecb30da89c22</anchor>
      <arglist>(doublereal vol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThermoMgr</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>ab954efc2c4ca17627c1fe360a5fa4717</anchor>
      <arglist>(thermo_t &amp;thermo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInlet</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a885dc157b8af5fca0aa8d8af53cf951c</anchor>
      <arglist>(FlowDevice &amp;inlet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addOutlet</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a32ecaabddf6c59d01d57c905bc21dc89</anchor>
      <arglist>(FlowDevice &amp;outlet)</arglist>
    </member>
    <member kind="function">
      <type>FlowDevice &amp;</type>
      <name>inlet</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a6547b4766770639bbc455674321b7455</anchor>
      <arglist>(size_t n=0)</arglist>
    </member>
    <member kind="function">
      <type>FlowDevice &amp;</type>
      <name>outlet</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a0ab93a69c96763067f389520847db005</anchor>
      <arglist>(size_t n=0)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nInlets</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>ad38d2221bb575706ae577107be17fc31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nOutlets</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>ace0e748931ee2bb97f0d28ece474c3ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nWalls</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a1b70a5fac843c666cc9e075a72e56eb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWall</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>aa8491620c1c9f06ca0bbdb6c9d10259b</anchor>
      <arglist>(Wall &amp;w, int lr)</arglist>
    </member>
    <member kind="function">
      <type>Wall &amp;</type>
      <name>wall</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>aaaa4956162400cb5e4b29034968c3d7c</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function">
      <type>ReactorSurface *</type>
      <name>surface</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>ad942e48e8e872c9e09927aca56330ad3</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a38487c832e58dbaddcc02e7a4f9d7054</anchor>
      <arglist>(doublereal t0=0.0)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>volume</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>ac05f51a9dd0a527596179ce9ebf302d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>density</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>ac27248f236e9f0dbcf5521410c52ee2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>temperature</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>ad0673abef723187fd991cb90c658c9c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>enthalpy_mass</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>ad7a2e379d28c820190d681034479f75d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>intEnergy_mass</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>ac81eb9d6a2eb5bce4e0ef1909734ac54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>mass</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>ae97260897f9436f03675cfc6dcf3aa74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const doublereal *</type>
      <name>massFractions</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a12f6d2e86f3e1abbeaa5aab894803d45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>massFraction</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a02545310dd4a0cec79111ce57696a7de</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_nsp</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>ab3e6c2c66c42af05f67bbe604928bd21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ReactorNet *</type>
      <name>m_net</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a4381ad28b9693b7ea95fbb6a4f3cc7dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVolume</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>aad53e4816405e46921bcecb30da89c22</anchor>
      <arglist>(doublereal vol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThermoMgr</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>ab954efc2c4ca17627c1fe360a5fa4717</anchor>
      <arglist>(thermo_t &amp;thermo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInlet</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a885dc157b8af5fca0aa8d8af53cf951c</anchor>
      <arglist>(FlowDevice &amp;inlet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addOutlet</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a32ecaabddf6c59d01d57c905bc21dc89</anchor>
      <arglist>(FlowDevice &amp;outlet)</arglist>
    </member>
    <member kind="function">
      <type>FlowDevice &amp;</type>
      <name>inlet</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a6547b4766770639bbc455674321b7455</anchor>
      <arglist>(size_t n=0)</arglist>
    </member>
    <member kind="function">
      <type>FlowDevice &amp;</type>
      <name>outlet</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a0ab93a69c96763067f389520847db005</anchor>
      <arglist>(size_t n=0)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nInlets</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>ad38d2221bb575706ae577107be17fc31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nOutlets</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>ace0e748931ee2bb97f0d28ece474c3ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nWalls</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a1b70a5fac843c666cc9e075a72e56eb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWall</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>aa8491620c1c9f06ca0bbdb6c9d10259b</anchor>
      <arglist>(Wall &amp;w, int lr)</arglist>
    </member>
    <member kind="function">
      <type>Wall &amp;</type>
      <name>wall</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>aaaa4956162400cb5e4b29034968c3d7c</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function">
      <type>ReactorSurface *</type>
      <name>surface</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>ad942e48e8e872c9e09927aca56330ad3</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a38487c832e58dbaddcc02e7a4f9d7054</anchor>
      <arglist>(doublereal t0=0.0)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>volume</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>ac05f51a9dd0a527596179ce9ebf302d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>density</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>ac27248f236e9f0dbcf5521410c52ee2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>temperature</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>ad0673abef723187fd991cb90c658c9c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>enthalpy_mass</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>ad7a2e379d28c820190d681034479f75d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>intEnergy_mass</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>ac81eb9d6a2eb5bce4e0ef1909734ac54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>mass</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>ae97260897f9436f03675cfc6dcf3aa74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const doublereal *</type>
      <name>massFractions</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a12f6d2e86f3e1abbeaa5aab894803d45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>massFraction</name>
      <anchorfile>classCantera_1_1ReactorBase.html</anchorfile>
      <anchor>a02545310dd4a0cec79111ce57696a7de</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ReactorNet</name>
    <filename>classCantera_1_1ReactorNet.html</filename>
    <base>Cantera::FuncEval</base>
    <member kind="function">
      <type>void</type>
      <name>addReactor</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a60c76483a60ec0ce596589fb6d49ccae</anchor>
      <arglist>(Reactor &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>Reactor &amp;</type>
      <name>reactor</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a7f113d994e810663662f8187c7ac5480</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verbose</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>aaa901ba8de3085a67e2463332b37612a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVerbose</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>ae05c57051e8d73830053f8fa950a3e58</anchor>
      <arglist>(bool v=true)</arglist>
    </member>
    <member kind="function">
      <type>Integrator &amp;</type>
      <name>integrator</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>ad8254cb4f5d0eeef4bc1a9a0b9d415c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateState</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a0ff521286d89a1422948c0497385cb28</anchor>
      <arglist>(doublereal *y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sensitivity</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a9284a812209936bc5af77da32cc54049</anchor>
      <arglist>(size_t k, size_t p)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sensitivity</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>acca07a6554477d05622ef5fc31dc02a6</anchor>
      <arglist>(const std::string &amp;component, size_t p, int reactor=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalJacobian</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>aa54e32145aaa4f648a7e6a9bbdf9b97c</anchor>
      <arglist>(doublereal t, doublereal *y, doublereal *ydot, doublereal *p, Array2D *j)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>neq</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a627b491f11b9ed84f1f7ca7f63d4f536</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>aeb7106d9e7ebea0aeaeada1335835ba2</anchor>
      <arglist>(doublereal t, doublereal *y, doublereal *ydot, doublereal *p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getState</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a62334bd67a22db256d39b9e673e6a7d3</anchor>
      <arglist>(doublereal *y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>nparams</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a0ef15bb07fef73a94d1f06eb499dcba6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>globalComponentIndex</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a75e1f40794f69cee675b351986a48875</anchor>
      <arglist>(const std::string &amp;component, size_t reactor=0)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>componentName</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a5bc11a683b1b75f05b79d433e0915684</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>registerSensitivityParameter</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>ad8d34f52992f51a54cbf6320cd7d6fad</anchor>
      <arglist>(const std::string &amp;name, double value, double scale)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>sensitivityParameterName</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>ab3f35a8f08572be19c71c9f49ebedf01</anchor>
      <arglist>(size_t p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reinitialize</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>ad9882f00bb27345adbf4a46a7ac4124e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNeedsReinit</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a42baa6e45447ab896d150070b6260f6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialTime</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a6ede3289160f7849811d0a923dd5fc7e</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxTimeStep</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>ace6efa995789d7b0d09d0d0c8479909e</anchor>
      <arglist>(double maxstep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxErrTestFails</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a702f8b11a39d6bb8af348ea41d2da8aa</anchor>
      <arglist>(int nmax)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTolerances</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>afab163132595ce92b7402c4f959038b3</anchor>
      <arglist>(double rtol, double atol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSensitivityTolerances</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a7eb44f8102279827e25fe4ca48256549</anchor>
      <arglist>(double rtol, double atol)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>time</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>aa63c9f302f7d9a1c8db65d5d870a626d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>rtol</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a4d7bd81259e8942445eab714e947490b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>atol</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>aece9147e65d5aa87652e6c4a084de9d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>rtolSensitivity</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a9234d17a2751d9488771d5e4a335a56c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>atolSensitivity</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a78df147ea6058a432feac9c34d0da421</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>advance</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a279deada6c346b722995ef0afcc736d2</anchor>
      <arglist>(doublereal time)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>step</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a12ed03278dd03ca6e79b288c0dc2bc5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a25a40b6614565f755233080a384c35f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_integrator_init</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>ad9857816987fada3b48ca3fd5759393d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_start</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a1983dc08525faaaa783e9e4c916157ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_maxstep</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a5355ef6cd918be18187dc92b8f0c6f3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_paramNames</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a42a581d721091d919964b742cbe35658</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialTime</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a6ede3289160f7849811d0a923dd5fc7e</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxTimeStep</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>ace6efa995789d7b0d09d0d0c8479909e</anchor>
      <arglist>(double maxstep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxErrTestFails</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a702f8b11a39d6bb8af348ea41d2da8aa</anchor>
      <arglist>(int nmax)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTolerances</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>afab163132595ce92b7402c4f959038b3</anchor>
      <arglist>(double rtol, double atol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSensitivityTolerances</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a7eb44f8102279827e25fe4ca48256549</anchor>
      <arglist>(double rtol, double atol)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>time</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>aa63c9f302f7d9a1c8db65d5d870a626d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>rtol</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a4d7bd81259e8942445eab714e947490b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>atol</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>aece9147e65d5aa87652e6c4a084de9d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>rtolSensitivity</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a9234d17a2751d9488771d5e4a335a56c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>atolSensitivity</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a78df147ea6058a432feac9c34d0da421</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>advance</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a279deada6c346b722995ef0afcc736d2</anchor>
      <arglist>(doublereal time)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>step</name>
      <anchorfile>classCantera_1_1ReactorNet.html</anchorfile>
      <anchor>a12ed03278dd03ca6e79b288c0dc2bc5a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::RedlichKisterVPSSTP</name>
    <filename>classCantera_1_1RedlichKisterVPSSTP.html</filename>
    <base>Cantera::GibbsExcessVPSSTP</base>
    <member kind="function">
      <type></type>
      <name>RedlichKisterVPSSTP</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a2cd9a949a496c715a76b4501bc4132e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RedlichKisterVPSSTP</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a59fca698cfdca0b4b10f9d003b5c27ad</anchor>
      <arglist>(const std::string &amp;inputFile, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RedlichKisterVPSSTP</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a55ab4f02014b7783b60591d1e7a9935a</anchor>
      <arglist>(XML_Node &amp;phaseRef, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getLnActivityCoefficients</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a2875fc50fe1a245ae531610323d7703e</anchor>
      <arglist>(doublereal *lnac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getd2lnActCoeffdT2</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a22950a59c8b7816b05fae7348699ff81</anchor>
      <arglist>(doublereal *d2lnActCoeffdT2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdT</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a3e608e528b93cf0ae38dcde50abaa77a</anchor>
      <arglist>(doublereal *dlnActCoeffdT) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBinaryInteraction</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>af64146ebf7429cb0578445a4d0cfe5af</anchor>
      <arglist>(const std::string &amp;speciesA, const std::string &amp;speciesB, const double *excess_enthalpy, size_t n_enthalpy, const double *excess_entropy, size_t n_entropy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffds</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>ac33a2e58cc6eb31260200425bb058ddc</anchor>
      <arglist>(const doublereal dTds, const doublereal *const dXds, doublereal *dlnActCoeffds) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnX_diag</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a57a7fa2f18d1b1635b848748ac679ca2</anchor>
      <arglist>(doublereal *dlnActCoeffdlnX_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN_diag</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>abd4c877b1646e599caf7c87d872c7dc3</anchor>
      <arglist>(doublereal *dlnActCoeffdlnN_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a4a2e93544bb41c14ed880a4595e110cc</anchor>
      <arglist>(const size_t ld, doublereal *const dlnActCoeffdlnN)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>numBinaryInteractions_</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a3e97be8157a9776967250e5fe6092269</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_pSpecies_A_ij</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a73336923c81bc0951ab24ad6923679a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_pSpecies_B_ij</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>ac81ff27778f560c50d60d5668c870e45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_N_ij</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a4e38c081acb2c4b52a8288926763c200</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; vector_fp &gt;</type>
      <name>m_HE_m_ij</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a4a1ee3e8116bce7bbeeee12082c1e8c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; vector_fp &gt;</type>
      <name>m_SE_m_ij</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>af5d281e9902a895296cb1957a27da05f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>formRedlichKister_</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a2ed9a07aa8564ad6e71a2025940a607a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>formTempModel_</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a31d1c8b9a4ccfcda99571e009d4b614c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Array2D</type>
      <name>dlnActCoeff_dX_</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a1c857db465e5fc2b32aa0417180698ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>readXMLBinarySpecies</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a4e304c5a0044d22bb156cbd8a977b851</anchor>
      <arglist>(XML_Node &amp;xmlBinarySpecies)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>initLengths</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>acbd8d9f6e3bcaf6f2115a657e7ce12cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_lnActCoeff</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>ace353fd1300f76a737cd21837ca5011c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnActCoeff_dT</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a734985fc69ffbef2993d9e396d12c442</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnActCoeff_dX_</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a07e19dc878b4dad24fa8a7380556f22b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>s_update_dlnActCoeff_dlnX_diag</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>acdf440da23b10d619f95e8043906f8fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getLnActivityCoefficients</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a2875fc50fe1a245ae531610323d7703e</anchor>
      <arglist>(doublereal *lnac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getd2lnActCoeffdT2</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a22950a59c8b7816b05fae7348699ff81</anchor>
      <arglist>(doublereal *d2lnActCoeffdT2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdT</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a3e608e528b93cf0ae38dcde50abaa77a</anchor>
      <arglist>(doublereal *dlnActCoeffdT) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBinaryInteraction</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>af64146ebf7429cb0578445a4d0cfe5af</anchor>
      <arglist>(const std::string &amp;speciesA, const std::string &amp;speciesB, const double *excess_enthalpy, size_t n_enthalpy, const double *excess_entropy, size_t n_entropy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffds</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>ac33a2e58cc6eb31260200425bb058ddc</anchor>
      <arglist>(const doublereal dTds, const doublereal *const dXds, doublereal *dlnActCoeffds) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnX_diag</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a57a7fa2f18d1b1635b848748ac679ca2</anchor>
      <arglist>(doublereal *dlnActCoeffdlnX_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN_diag</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>abd4c877b1646e599caf7c87d872c7dc3</anchor>
      <arglist>(doublereal *dlnActCoeffdlnN_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN</name>
      <anchorfile>classCantera_1_1RedlichKisterVPSSTP.html</anchorfile>
      <anchor>a4a2e93544bb41c14ed880a4595e110cc</anchor>
      <arglist>(const size_t ld, doublereal *const dlnActCoeffdlnN)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::RedlichKwongMFTP</name>
    <filename>classCantera_1_1RedlichKwongMFTP.html</filename>
    <base>Cantera::MixtureFugacityTP</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a20b3c290780f2f094b028e19b63b8e6e</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>liquidVolEst</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a893b965a1c37f7c9b553597a79f4d1ff</anchor>
      <arglist>(doublereal TKelvin, doublereal &amp;pres) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>densityCalc</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a456eae4d883352cded7ed0d3c6dcde27</anchor>
      <arglist>(doublereal TKelvin, doublereal pressure, int phase, doublereal rhoguess)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>densSpinodalLiquid</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>ae086ec5dc7ddb7d22685405d6bbcd1e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>densSpinodalGas</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>aa561ac734f7f8f0d6cb6fea4fce76df4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressureCalc</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>ab6e7cfa95d61b2dd630efaff655a748e</anchor>
      <arglist>(doublereal TKelvin, doublereal molarVol) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>dpdVCalc</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a6237d5174d00b5576c8e920feb3dcafd</anchor>
      <arglist>(doublereal TKelvin, doublereal molarVol, doublereal &amp;presCalc) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pressureDerivatives</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a751abb493a599942081b3a0bd6372f85</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateAB</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a23d5a5a4fa41b608d2f81b7b110df829</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calculateAB</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>ace224b322b8a34428dd74a0960bc31a8</anchor>
      <arglist>(doublereal temp, doublereal &amp;aCalc, doublereal &amp;bCalc) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NicholsSolve</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>ab128f3abed11add097607f09aeb3c0d5</anchor>
      <arglist>(double TKelvin, double pres, doublereal a, doublereal b, doublereal Vroot[3]) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RedlichKwongMFTP</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>aaac3df0f6362120c6d3bdaf344c68fe7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RedlichKwongMFTP</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>ae65ddbca9ba8b271fdcea2643e17f2de</anchor>
      <arglist>(const std::string &amp;infile, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RedlichKwongMFTP</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>adc08eac3b0fe3fb2d6ba84a423cd5ef5</anchor>
      <arglist>(XML_Node &amp;phaseRef, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials_RT</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>acf1ae24d0fbef55963df3598f134d699</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarIntEnergies</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a36c63d1f3f4faa1f29300b30358536e5</anchor>
      <arglist>(doublereal *ubar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critTemperature</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a92cc18825b968c6195896358fbfe1744</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critPressure</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a44de713a0ca6361efcabe18dfc265b1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critVolume</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a385eb5919dc7b8c2db1090cb152b4894</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critCompressibility</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>ade8e69de225871fcd5a76976bc524a50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critDensity</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>ae7ff0cbd1630614df97698d026f47114</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const doublereal</type>
      <name>omega_a</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>aef697910a3acf6fabd0fcbc6c9114102</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const doublereal</type>
      <name>omega_b</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a245dea156d9b0471288f8b5440cd9bd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const doublereal</type>
      <name>omega_vc</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a85b8ce52991030d081b8a5b8408dd77a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>calcDensity</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>afac1b45437d49cc161e7ca2d5c00906a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setTemperature</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>aaefc9c80c1f44914510e3e9918162af8</anchor>
      <arglist>(const doublereal temp)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>compositionChanged</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>ac901f42e1d2a9513f06eacccf09e11a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>sresid</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a65a87cb96a3df3b1246ed19b69890f60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>hresid</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a2f8b9901214720870ca3a37b3f80a665</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_formTempParam</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a2e7a4d3943d68025e25a7660df940167</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_b_current</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a2fd5c6d3a07ef69308c6b2fe4f72c10f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_a_current</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a952add4267c00fd64adfa64eb1f6fff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_pp</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a4c2fe18cac13b980b541398c872e4849</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_tmpV</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>aeeda95f871688922796bc3c0e6ecb444</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>dpdV_</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>ade50f7a831acb615f5a3b16205e6e515</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>dpdT_</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a30e90cf292e30859d43bd10b9f2a6a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>dpdni_</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>af4672b18aa84ee89fbdfd2bb0f8bd00b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RedlichKwongMFTP</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>aaac3df0f6362120c6d3bdaf344c68fe7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RedlichKwongMFTP</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>ae65ddbca9ba8b271fdcea2643e17f2de</anchor>
      <arglist>(const std::string &amp;infile, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RedlichKwongMFTP</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>adc08eac3b0fe3fb2d6ba84a423cd5ef5</anchor>
      <arglist>(XML_Node &amp;phaseRef, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials_RT</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>acf1ae24d0fbef55963df3598f134d699</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarIntEnergies</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a36c63d1f3f4faa1f29300b30358536e5</anchor>
      <arglist>(doublereal *ubar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critTemperature</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a92cc18825b968c6195896358fbfe1744</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critPressure</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a44de713a0ca6361efcabe18dfc265b1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critVolume</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a385eb5919dc7b8c2db1090cb152b4894</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critCompressibility</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>ade8e69de225871fcd5a76976bc524a50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critDensity</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>ae7ff0cbd1630614df97698d026f47114</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>af85cf0eab4dfda8ff1897ee7e251d5f5</anchor>
      <arglist>(const XML_Node &amp;thermoNode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setToEquilState</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a02da43a545df400427d067e2b07b8a08</anchor>
      <arglist>(const doublereal *lambda_RT)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpeciesCoeffs</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>aaab7d0af02731c3c0867ed314326dc8d</anchor>
      <arglist>(const std::string &amp;species, double a0, double a1, double b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBinaryCoeffs</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a6df467447058ae7c4e37b331349544ca</anchor>
      <arglist>(const std::string &amp;species_i, const std::string &amp;species_j, double a0, double a1)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>readXMLPureFluid</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a5e6fd91a86958b604dc8d22ecaed6c6c</anchor>
      <arglist>(XML_Node &amp;pureFluidParam)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>readXMLCrossFluid</name>
      <anchorfile>classCantera_1_1RedlichKwongMFTP.html</anchorfile>
      <anchor>a46e85b874de2763c698e88f429929be2</anchor>
      <arglist>(XML_Node &amp;pureFluidParam)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Refiner</name>
    <filename>classCantera_1_1Refiner.html</filename>
    <member kind="function">
      <type>void</type>
      <name>setCriteria</name>
      <anchorfile>classCantera_1_1Refiner.html</anchorfile>
      <anchor>af5d9f5cbfac0f40e5269c423606b159b</anchor>
      <arglist>(doublereal ratio=10.0, doublereal slope=0.8, doublereal curve=0.8, doublereal prune=-0.1)</arglist>
    </member>
    <member kind="function">
      <type>vector_fp</type>
      <name>getCriteria</name>
      <anchorfile>classCantera_1_1Refiner.html</anchorfile>
      <anchor>a5b8c451171e6b1e33261c345ca6d3cf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxPoints</name>
      <anchorfile>classCantera_1_1Refiner.html</anchorfile>
      <anchor>a8e4deebad5e7251fafadbcec06bfc629</anchor>
      <arglist>(int npmax)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>maxPoints</name>
      <anchorfile>classCantera_1_1Refiner.html</anchorfile>
      <anchor>a2c78da809fad4588bbb205b1209e8902</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGridMin</name>
      <anchorfile>classCantera_1_1Refiner.html</anchorfile>
      <anchor>af8c214d272e3473301059a6601259654</anchor>
      <arglist>(double gridmin)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>gridMin</name>
      <anchorfile>classCantera_1_1Refiner.html</anchorfile>
      <anchor>ac8dcd99668c48062169e2221575743cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_gridmin</name>
      <anchorfile>classCantera_1_1Refiner.html</anchorfile>
      <anchor>aaa5e019d579935d9a69873e7ee2447eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ResidData</name>
    <filename>classCantera_1_1ResidData.html</filename>
  </compound>
  <compound kind="class">
    <name>Cantera::ResidEval</name>
    <filename>classCantera_1_1ResidEval.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>constrain</name>
      <anchorfile>classCantera_1_1ResidEval.html</anchorfile>
      <anchor>ae4bc126cc623e7583c462e09f109cc2c</anchor>
      <arglist>(const int k, const int flag)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initSizes</name>
      <anchorfile>classCantera_1_1ResidEval.html</anchorfile>
      <anchor>ae7c3e3f3e3a8392d6a356af2adc00130</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAlgebraic</name>
      <anchorfile>classCantera_1_1ResidEval.html</anchorfile>
      <anchor>a9b86dc3ad6e9a38896b6ac46263e7ecc</anchor>
      <arglist>(const int k)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1ResidEval.html</anchorfile>
      <anchor>a0d94868c7af3f2753126c919ba1f9e00</anchor>
      <arglist>(const doublereal t, const doublereal *const y, const doublereal *const ydot, doublereal *const r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getInitialConditions</name>
      <anchorfile>classCantera_1_1ResidEval.html</anchorfile>
      <anchor>a968ff59dc84c907cf638fdb132a7ccf5</anchor>
      <arglist>(const doublereal t0, doublereal *const y, doublereal *const ydot)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>nEquations</name>
      <anchorfile>classCantera_1_1ResidEval.html</anchorfile>
      <anchor>aae6378ca6ad0e18b4f7a5dc380497fd4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>writeSolution</name>
      <anchorfile>classCantera_1_1ResidEval.html</anchorfile>
      <anchor>a935074b07d6b2f3fa4471316c6fec0e4</anchor>
      <arglist>(int ievent, const double time, const double deltaT, const int time_step_num, const double *y, const double *ydot)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nparams</name>
      <anchorfile>classCantera_1_1ResidEval.html</anchorfile>
      <anchor>ab087d38e4921ef0b13b90d63318cf15b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_int</type>
      <name>m_alg</name>
      <anchorfile>classCantera_1_1ResidEval.html</anchorfile>
      <anchor>adb0ee2f55d767f6096dc2b85177e8cf2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ResidJacEval</name>
    <filename>classCantera_1_1ResidJacEval.html</filename>
    <base>Cantera::ResidEval</base>
    <member kind="function">
      <type></type>
      <name>ResidJacEval</name>
      <anchorfile>classCantera_1_1ResidJacEval.html</anchorfile>
      <anchor>accad7ebaed9de19160e3082f40a50264</anchor>
      <arglist>(doublereal atol=1.0e-13)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>nEquations</name>
      <anchorfile>classCantera_1_1ResidJacEval.html</anchorfile>
      <anchor>a453750169345df044faeca9e5cf16ae9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>evalResidNJ</name>
      <anchorfile>classCantera_1_1ResidJacEval.html</anchorfile>
      <anchor>ab9fd438b2d9fc96ba5d0ed9fe70e1e26</anchor>
      <arglist>(const doublereal t, const doublereal delta_t, const doublereal *const y, const doublereal *const ydot, doublereal *const resid, const ResidEval_Type_Enum evalType=Base_ResidEval, const int id_x=-1, const doublereal delta_x=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1ResidJacEval.html</anchorfile>
      <anchor>aa0e91a33ffa1cc1fb4e451c42a8cc1e0</anchor>
      <arglist>(const doublereal t, const doublereal *const y, const doublereal *const ydot, doublereal *const r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getInitialConditions</name>
      <anchorfile>classCantera_1_1ResidJacEval.html</anchorfile>
      <anchor>adf10b037b575e7b67ad0f9188289f5ce</anchor>
      <arglist>(const doublereal t0, doublereal *const y, doublereal *const ydot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>filterNewStep</name>
      <anchorfile>classCantera_1_1ResidJacEval.html</anchorfile>
      <anchor>add9cb19e1965d29d9c11db8aad66e52f</anchor>
      <arglist>(const doublereal t, const doublereal *const ybase, doublereal *const step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>filterSolnPrediction</name>
      <anchorfile>classCantera_1_1ResidJacEval.html</anchorfile>
      <anchor>a1606370088241b6e98415bb35e29c99d</anchor>
      <arglist>(const doublereal t, doublereal *const y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAtol</name>
      <anchorfile>classCantera_1_1ResidJacEval.html</anchorfile>
      <anchor>ab4c078c9e29d33e9ac11eff07a0eec40</anchor>
      <arglist>(doublereal atol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>evalTimeTrackingEqns</name>
      <anchorfile>classCantera_1_1ResidJacEval.html</anchorfile>
      <anchor>a7d91ba9edd81846560c96e3ba2b02f88</anchor>
      <arglist>(const doublereal t, const doublereal delta_t, const doublereal *const y, const doublereal *const ydot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>evalStoppingCritera</name>
      <anchorfile>classCantera_1_1ResidJacEval.html</anchorfile>
      <anchor>a8caeb408e627ebc1e1e25bcd20424c08</anchor>
      <arglist>(const doublereal t, const doublereal delta_t, const doublereal *const y, const doublereal *const ydot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>calcDeltaSolnVariables</name>
      <anchorfile>classCantera_1_1ResidJacEval.html</anchorfile>
      <anchor>ac7057a6c327e85a2a0e2a363ae6a3de9</anchor>
      <arglist>(const doublereal t, const doublereal *const y, const doublereal *const ydot, doublereal *const delta_y, const doublereal *const solnWeights=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>calcSolnScales</name>
      <anchorfile>classCantera_1_1ResidJacEval.html</anchorfile>
      <anchor>a0fe220dfb361ed9d600e4d571e93ed08</anchor>
      <arglist>(const doublereal t, const doublereal *const y, const doublereal *const y_old, doublereal *const yScales)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>user_out2</name>
      <anchorfile>classCantera_1_1ResidJacEval.html</anchorfile>
      <anchor>a523c8ac193bcbbf254bbc030743b9fb6</anchor>
      <arglist>(const int ifunc, const doublereal t, const doublereal delta_t, const doublereal *const y, const doublereal *const ydot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>user_out</name>
      <anchorfile>classCantera_1_1ResidJacEval.html</anchorfile>
      <anchor>a31b79a61922a7e0b2544b03e93540328</anchor>
      <arglist>(const int ifunc, const doublereal t, const doublereal *y, const doublereal *ydot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>matrixConditioning</name>
      <anchorfile>classCantera_1_1ResidJacEval.html</anchorfile>
      <anchor>a1eb0811ff5571ee2b5cb0648c2028063</anchor>
      <arglist>(doublereal *const matrix, const int nrows, doublereal *const rhs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>evalJacobian</name>
      <anchorfile>classCantera_1_1ResidJacEval.html</anchorfile>
      <anchor>a7833f949d75302b13d53bf7e720db3e3</anchor>
      <arglist>(const doublereal t, const doublereal delta_t, doublereal cj, const doublereal *const y, const doublereal *const ydot, DenseMatrix &amp;J, doublereal *const resid)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>evalJacobianDP</name>
      <anchorfile>classCantera_1_1ResidJacEval.html</anchorfile>
      <anchor>a2f22a03f521fceae49989b0b1879e23d</anchor>
      <arglist>(const doublereal t, const doublereal delta_t, doublereal cj, const doublereal *const y, const doublereal *const ydot, doublereal *const *jacobianColPts, doublereal *const resid)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_atol</name>
      <anchorfile>classCantera_1_1ResidJacEval.html</anchorfile>
      <anchor>afb7bd5b7f4cac79454aca2f0a5329217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>neq_</name>
      <anchorfile>classCantera_1_1ResidJacEval.html</anchorfile>
      <anchor>adda0c492f19d36947cd73f24338cf6b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ShomatePoly</name>
    <filename>classCantera_1_1ShomatePoly.html</filename>
    <base>Cantera::SpeciesThermoInterpType</base>
    <member kind="function">
      <type></type>
      <name>ShomatePoly</name>
      <anchorfile>classCantera_1_1ShomatePoly.html</anchorfile>
      <anchor>a7d5ac5e8892dbfc8b6e0c93729b45f5a</anchor>
      <arglist>(double tlow, double thigh, double pref, const double *coeffs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>reportType</name>
      <anchorfile>classCantera_1_1ShomatePoly.html</anchorfile>
      <anchor>ae2d249a609d29261db259191f2100f4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>temperaturePolySize</name>
      <anchorfile>classCantera_1_1ShomatePoly.html</anchorfile>
      <anchor>ada65d8cf4350202fe06325d2f351297e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTemperaturePoly</name>
      <anchorfile>classCantera_1_1ShomatePoly.html</anchorfile>
      <anchor>a4ce0153b0f7baf76da320e23a75b34f8</anchor>
      <arglist>(double T, double *T_poly) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateProperties</name>
      <anchorfile>classCantera_1_1ShomatePoly.html</anchorfile>
      <anchor>a7d70998506f939bbcc8bf157091762aa</anchor>
      <arglist>(const doublereal *tt, doublereal *cp_R, doublereal *h_RT, doublereal *s_R) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updatePropertiesTemp</name>
      <anchorfile>classCantera_1_1ShomatePoly.html</anchorfile>
      <anchor>a1e2cbe10b154bf1b343958bd700126f8</anchor>
      <arglist>(const doublereal temp, doublereal *cp_R, doublereal *h_RT, doublereal *s_R) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reportParameters</name>
      <anchorfile>classCantera_1_1ShomatePoly.html</anchorfile>
      <anchor>abf027902c17434dd571d928ce0d9363d</anchor>
      <arglist>(size_t &amp;n, int &amp;type, doublereal &amp;tlow, doublereal &amp;thigh, doublereal &amp;pref, doublereal *const coeffs) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>reportHf298</name>
      <anchorfile>classCantera_1_1ShomatePoly.html</anchorfile>
      <anchor>ae7075110d5d4aaec18f16535276f18b1</anchor>
      <arglist>(doublereal *const h298=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>modifyOneHf298</name>
      <anchorfile>classCantera_1_1ShomatePoly.html</anchorfile>
      <anchor>ac87e5a3dd35b2e65689cc86f09b473e6</anchor>
      <arglist>(const size_t k, const doublereal Hf298New)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetHf298</name>
      <anchorfile>classCantera_1_1ShomatePoly.html</anchorfile>
      <anchor>a92bfae5a63c2368cbb95a13baa08ad14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_coeff</name>
      <anchorfile>classCantera_1_1ShomatePoly.html</anchorfile>
      <anchor>a335c61da2820e79426f89e05c95cdaa7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ShomatePoly2</name>
    <filename>classCantera_1_1ShomatePoly2.html</filename>
    <base>Cantera::SpeciesThermoInterpType</base>
    <member kind="function">
      <type></type>
      <name>ShomatePoly2</name>
      <anchorfile>classCantera_1_1ShomatePoly2.html</anchorfile>
      <anchor>a8e2db3cde0215df2a25cc5f2ef1f2143</anchor>
      <arglist>(double tlow, double thigh, double pref, const double *coeffs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>reportType</name>
      <anchorfile>classCantera_1_1ShomatePoly2.html</anchorfile>
      <anchor>ae2d249a609d29261db259191f2100f4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>temperaturePolySize</name>
      <anchorfile>classCantera_1_1ShomatePoly2.html</anchorfile>
      <anchor>ada65d8cf4350202fe06325d2f351297e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTemperaturePoly</name>
      <anchorfile>classCantera_1_1ShomatePoly2.html</anchorfile>
      <anchor>a4ce0153b0f7baf76da320e23a75b34f8</anchor>
      <arglist>(double T, double *T_poly) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateProperties</name>
      <anchorfile>classCantera_1_1ShomatePoly2.html</anchorfile>
      <anchor>a7d70998506f939bbcc8bf157091762aa</anchor>
      <arglist>(const doublereal *tt, doublereal *cp_R, doublereal *h_RT, doublereal *s_R) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updatePropertiesTemp</name>
      <anchorfile>classCantera_1_1ShomatePoly2.html</anchorfile>
      <anchor>a1e2cbe10b154bf1b343958bd700126f8</anchor>
      <arglist>(const doublereal temp, doublereal *cp_R, doublereal *h_RT, doublereal *s_R) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reportParameters</name>
      <anchorfile>classCantera_1_1ShomatePoly2.html</anchorfile>
      <anchor>abf027902c17434dd571d928ce0d9363d</anchor>
      <arglist>(size_t &amp;n, int &amp;type, doublereal &amp;tlow, doublereal &amp;thigh, doublereal &amp;pref, doublereal *const coeffs) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>reportHf298</name>
      <anchorfile>classCantera_1_1ShomatePoly2.html</anchorfile>
      <anchor>ae7075110d5d4aaec18f16535276f18b1</anchor>
      <arglist>(doublereal *const h298=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>modifyOneHf298</name>
      <anchorfile>classCantera_1_1ShomatePoly2.html</anchorfile>
      <anchor>ac87e5a3dd35b2e65689cc86f09b473e6</anchor>
      <arglist>(const size_t k, const doublereal Hf298New)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetHf298</name>
      <anchorfile>classCantera_1_1ShomatePoly2.html</anchorfile>
      <anchor>a92bfae5a63c2368cbb95a13baa08ad14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_midT</name>
      <anchorfile>classCantera_1_1ShomatePoly2.html</anchorfile>
      <anchor>acbb163e5399a3ea7708cf8d63a774da3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ShomatePoly</type>
      <name>msp_low</name>
      <anchorfile>classCantera_1_1ShomatePoly2.html</anchorfile>
      <anchor>a1f12ed595a22fdf85d382ae0d342f111</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ShomatePoly</type>
      <name>msp_high</name>
      <anchorfile>classCantera_1_1ShomatePoly2.html</anchorfile>
      <anchor>ab4d49823a51ddbe357f6938e61ccdc63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_coeff</name>
      <anchorfile>classCantera_1_1ShomatePoly2.html</anchorfile>
      <anchor>a335c61da2820e79426f89e05c95cdaa7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Sim1D</name>
    <filename>classCantera_1_1Sim1D.html</filename>
    <base>Cantera::OneDim</base>
    <member kind="function">
      <type></type>
      <name>Sim1D</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>adda3c081fec27c1466e5a28e5889e1bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sim1D</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>a9c507a96d36541aaf731d1946fde3709</anchor>
      <arglist>(std::vector&lt; Domain1D *&gt; &amp;domains)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showSolution</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>ace958dbbc11f8533883565647ee122a0</anchor>
      <arglist>(std::ostream &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>refine</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>a4405d627a59bab86f7aa3ed2e294e59a</anchor>
      <arglist>(int loglevel=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setFixedTemperature</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>aa5734bdcff6ab95f62c496f1feeeeed7</anchor>
      <arglist>(doublereal t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRefineCriteria</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>a44e2caaf5e24f37e5486a3c7cc1e84ef</anchor>
      <arglist>(int dom=-1, doublereal ratio=10.0, doublereal slope=0.8, doublereal curve=0.8, doublereal prune=-0.1)</arglist>
    </member>
    <member kind="function">
      <type>vector_fp</type>
      <name>getRefineCriteria</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>a7ec482285c1243e87dff738063712cc2</anchor>
      <arglist>(int dom)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxGridPoints</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>a88db6aa2ebb1308486e6562e55d9ca68</anchor>
      <arglist>(int dom, int npoints)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>maxGridPoints</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>abe621164fd44a6b1b9d2221f01f710c1</anchor>
      <arglist>(size_t dom)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGridMin</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>adf6ce28555d86c5463921a17b62d21a0</anchor>
      <arglist>(int dom, double gridmin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restore</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>aa7b84abea26c9be6de44475663753811</anchor>
      <arglist>(const std::string &amp;fname, const std::string &amp;id, int loglevel=2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restoreTimeSteppingSolution</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>a175383274f5e279448c41934f30202f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restoreSteadySolution</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>abb7db149afa171384f4a55c75b3bd079</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solveAdjoint</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>ab1e40a1f03b9049a967ae644adddddab</anchor>
      <arglist>(const double *b, double *lambda)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>a0fc3d585aa53859602ac79c9c421f2a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSteadyCallback</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>a3afd71478794acc896958f452514ab57</anchor>
      <arglist>(Func1 *callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialGuess</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>af9afb8237d773d65315ddcf2e456f074</anchor>
      <arglist>(const std::string &amp;component, vector_fp &amp;locs, vector_fp &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>ad7797e653a3dab21c156de317401c0b8</anchor>
      <arglist>(size_t dom, size_t comp, size_t localPoint, doublereal value)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>value</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>ad0593a7bfda171cd9ccb61e156a05189</anchor>
      <arglist>(size_t dom, size_t comp, size_t localPoint) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProfile</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>a7a77300b13f17d1149e44c79b0d70148</anchor>
      <arglist>(size_t dom, size_t comp, const vector_fp &amp;pos, const vector_fp &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFlatProfile</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>ae6d8b1b52d86890570d1d111f6f0c9e9</anchor>
      <arglist>(size_t dom, size_t comp, doublereal v)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_x</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>a235e43d360bbe2f315ff6156d60c7207</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_xlast_ts</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>a67cb2ad04f17cce2c05144a7693ba098</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_xlast_ss</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>a010537761e2b8bc3b67f296fb939b09e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; vector_fp &gt;</type>
      <name>m_grid_last_ss</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>a9b45f70406549ad5edb63bf9b5e7874a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_xnew</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>a6abe6cdc42d3e664e7c39225287c9b71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_tstep</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>aedfb3c01c13aed1e902066cf3aefdfb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_int</type>
      <name>m_steps</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>a38b12611985b36d27ef538afe601c053</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Func1 *</type>
      <name>m_steady_callback</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>ab48bcfe0dfbcbda83a8252e04d2370c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>finalize</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>a32d626626eee0bc4ade146973f6abb1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>newtonSolve</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>a998030caa4d7b0cf97601614b4180ed0</anchor>
      <arglist>(int loglevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialGuess</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>af9afb8237d773d65315ddcf2e456f074</anchor>
      <arglist>(const std::string &amp;component, vector_fp &amp;locs, vector_fp &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>ad7797e653a3dab21c156de317401c0b8</anchor>
      <arglist>(size_t dom, size_t comp, size_t localPoint, doublereal value)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>value</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>ad0593a7bfda171cd9ccb61e156a05189</anchor>
      <arglist>(size_t dom, size_t comp, size_t localPoint) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProfile</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>a7a77300b13f17d1149e44c79b0d70148</anchor>
      <arglist>(size_t dom, size_t comp, const vector_fp &amp;pos, const vector_fp &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFlatProfile</name>
      <anchorfile>classCantera_1_1Sim1D.html</anchorfile>
      <anchor>ae6d8b1b52d86890570d1d111f6f0c9e9</anchor>
      <arglist>(size_t dom, size_t comp, doublereal v)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::SimpleTransport</name>
    <filename>classCantera_1_1SimpleTransport.html</filename>
    <base>Cantera::Transport</base>
    <member kind="function">
      <type></type>
      <name>SimpleTransport</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>adf8bcc4cd174219caef9ce494b41849a</anchor>
      <arglist>(thermo_t *thermo=0, int ndim=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>initLiquid</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a1b2a2c85417a0f8aa0c3350abd31778e</anchor>
      <arglist>(LiquidTransportParams &amp;tr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>transportType</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>aaa616493275cb1d7fb3ba980ec3cd467</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>viscosity</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>ad8dadb8c432b45ddc85f81e5a863cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesViscosities</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>ab38610000c078cb8823aecb51d6c05ca</anchor>
      <arglist>(doublereal *const visc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getBinaryDiffCoeffs</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a450f94e1a146e7bb44e24d153678609b</anchor>
      <arglist>(const size_t ld, doublereal *const d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMixDiffCoeffs</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a699001499937e42f790551f01bce4424</anchor>
      <arglist>(doublereal *const d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getThermalDiffCoeffs</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a0242eeac6a86b61e2d2d613ad7a4fb0d</anchor>
      <arglist>(doublereal *const dt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalConductivity</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a2485777400132063dc233a7af516e66d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMobilities</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>aa211291a51ee3de00d8b2c653cac5e0b</anchor>
      <arglist>(doublereal *const mobil_e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFluidMobilities</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a0aa27914eeba4f96de83106c7266b933</anchor>
      <arglist>(doublereal *const mobil_f)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_Grad_V</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a5b90473cc16d5ec42023986afb944fc3</anchor>
      <arglist>(const doublereal *const grad_V)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_Grad_T</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a14f1afec90d8a408f623d149dcb6b6d7</anchor>
      <arglist>(const doublereal *const grad_T)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_Grad_X</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>aba4d63407e831798fb0a90c730f205d1</anchor>
      <arglist>(const doublereal *const grad_X)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesVdiff</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a58ba7fd135265e124e0e714ec26c49bd</anchor>
      <arglist>(size_t ndim, const doublereal *grad_T, int ldx, const doublereal *grad_X, int ldf, doublereal *Vdiff)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesVdiffES</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a90a565d33bd918a11ae9ff7ca24d87d5</anchor>
      <arglist>(size_t ndim, const doublereal *grad_T, int ldx, const doublereal *grad_X, int ldf, const doublereal *grad_Phi, doublereal *Vdiff)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesFluxes</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>ac10f3352c5356776215dfdad3fb61e40</anchor>
      <arglist>(size_t ndim, const doublereal *const grad_T, size_t ldx, const doublereal *const grad_X, size_t ldf, doublereal *const fluxes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesFluxesExt</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>ac805e6765f94e4e1f0c1e2374b5116ae</anchor>
      <arglist>(size_t ldf, doublereal *fluxes)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>update_T</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a0b1601aa0af9acafbf32a9a198f2b448</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>update_C</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a9ba58c87c7950edec69e9d0e00962943</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateViscosity_T</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a63ac7f8d6ccfecb0a7aac8580e1640e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCond_T</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a90d943c4451c8de9675e8a7afe50aa2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateDiff_T</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a413dd59dcbc0b8d0a0b4b87424bac936</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>enum LiquidTranMixingModel</type>
      <name>compositionDepType_</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>ab2cf980da320446f01db1e6124c3d1f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useHydroRadius_</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>abdcaf3f11273a59ff2df85a17e7534b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>doMigration_</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>af06c9b1e54e1a0ae901117a17471cca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_mw</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a090dee67d018151c78cc56fe95ae4757</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; LTPspecies * &gt;</type>
      <name>m_coeffVisc_Ns</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>aadfa83853eb13e5773001c8044569ba8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; LTPspecies * &gt;</type>
      <name>m_coeffLambda_Ns</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>adf4409f70c2e6618e3467647d9a9723a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; LTPspecies * &gt;</type>
      <name>m_coeffDiff_Ns</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a367643a9509ee4d702c4e67f954cac18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; LTPspecies * &gt;</type>
      <name>m_coeffHydroRadius_Ns</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>ad020ab036956d1b916992cedde40ab93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Grad_X</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>ae374a915664cc50e1ebda0ab37958012</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Grad_T</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a5396d5cb9e54ce7082d83bd093a7371c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Grad_P</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>aca45fdbf5522e3c0bb25dbf7c6a2fd28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Grad_V</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a848a57fe2cb4e62c88004cb846972813</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_diffSpecies</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>ab3ff077de4dcefa457e5a56d32df6061</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_viscSpecies</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a651e72d1ed71ae7635c54e59440d3d91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_condSpecies</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a5862118eddad6a21ff50abd73635dacd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_iStateMF</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>ae9fc27f7e3cd3f38c68cf9038717981a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_molefracs</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a12c50f38c6cb71d8535bf8beae6bcb0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_concentrations</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a5fd38ec5a190331edb1919789aa49b5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>concTot_</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a0f9bae3c8270ddbe09413afe7d07727b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>meanMolecularWeight_</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a9d94212f5042c5e4c8093a67862ad56c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>dens_</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a95742be174422778141fcd7175eb376f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_chargeSpecies</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>aa634101f880f7344c1e8a08cef7c92e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_temp</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a4d64276995e8b70bb4a09b47c20547f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_press</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a0edab2fddaaaa5321a40af0cbca697cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_lambda</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a9ed9b13e7f50d75387c7d3c9d45f275b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_viscmix</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>adb781f17290f2cdd6ebac13511fa3b2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_spwork</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>ae06300fb9d5a56b3ef36780110841a5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_visc_mix_ok</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a75ffd06358da51a4c47597e6572c1c0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_visc_temp_ok</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>ad44dc3b5d55985146c9035139e49539e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_diff_mix_ok</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a3decf8203002e6f66511e0aad40bb981</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_diff_temp_ok</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a000b9acfd137be089f25d3ffad261450</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_cond_temp_ok</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>aaed0fce9c4d981fc6aa53b9f1bcf0377</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_cond_mix_ok</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>adf1b8a6b3eccccc73409e09622d58526</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>m_nDim</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>a1b133a38f0f12c50a56555bc170d3157</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>rhoVc</name>
      <anchorfile>classCantera_1_1SimpleTransport.html</anchorfile>
      <anchor>aa5ac46781a7da19ab8d6762f0576a265</anchor>
      <arglist>[3]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Sin1</name>
    <filename>classCantera_1_1Sin1.html</filename>
    <base>Cantera::Func1</base>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>duplicate</name>
      <anchorfile>classCantera_1_1Sin1.html</anchorfile>
      <anchor>a4aa86693947c32c642a3d6ee556a8eed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1Sin1.html</anchorfile>
      <anchor>acd39f99891dcb367c57588ec8c79b0c6</anchor>
      <arglist>(doublereal t) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>derivative</name>
      <anchorfile>classCantera_1_1Sin1.html</anchorfile>
      <anchor>add413b6d193ee81507d1b6c2e6a7077e</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::SingleSpeciesTP</name>
    <filename>classCantera_1_1SingleSpeciesTP.html</filename>
    <base>Cantera::ThermoPhase</base>
    <member kind="function">
      <type></type>
      <name>SingleSpeciesTP</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>ac1625a8b082b9458fc958811f903e473</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>af3b7fb6d3a5817a1fb3edff83294a1d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>aaf04e92fc17efaa2c07df42c06c0d563</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivities</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a00d3b8044047377ace1c854bd3e3136d</anchor>
      <arglist>(doublereal *a) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a3f656e49d81e5827ed5754e84aa70a14</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials_RT</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a949dd4d771070e7d4f038361c61c0cd1</anchor>
      <arglist>(doublereal *murt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarIntEnergies</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a36c63d1f3f4faa1f29300b30358536e5</anchor>
      <arglist>(doublereal *ubar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPureGibbs</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>aeb7a9744545e2854ced11ea7634dfe49</anchor>
      <arglist>(doublereal *gpure) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>ac0892d9c5b503b830fd46afa40f14763</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>af9328613fd7ac31d213f4fd284d8ad63</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT_ref</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a15142ba0b60259900efafd8026b51c96</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_ref</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>ae4ec4c8979d7a4b5deb6faf52697a068</anchor>
      <arglist>(doublereal *g) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R_ref</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a9d67a94aa582d60860f4658ea11e1aa3</anchor>
      <arglist>(doublereal *er) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R_ref</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>ab511be0c8fe8538e41b1b74d5bc4f7df</anchor>
      <arglist>(doublereal *cprt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMassFractions</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a1469e0717c5fec4e6aa52d12e42d13ef</anchor>
      <arglist>(const doublereal *const y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMoleFractions</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>aeb42a71fafb5c1207b4b503477acf963</anchor>
      <arglist>(const doublereal *const x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_HP</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a0d841cf33d6a03652dc1b8c5a1fa8b39</anchor>
      <arglist>(double h, double p, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_UV</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a1122d8ed8cb21c4f89499f0a205666ab</anchor>
      <arglist>(double u, double v, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_SP</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a9b4668013babc7cd22e7c0c8d3c2dd35</anchor>
      <arglist>(double s, double p, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_SV</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>af093205eee5fdcdaa229e46ae68849d0</anchor>
      <arglist>(double s, double v, double tol=1e-9)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_updateThermo</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>adc787a3ca8a5489e2763cc7e712685bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_press</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a0edab2fddaaaa5321a40af0cbca697cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_h0_RT</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a7c4c85e43604336b267d7f852373c633</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_cp0_R</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>ab88d4fa54b8ccc55c2735da8e5f57e0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_s0_R</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a902fb2630ac8d020f42a7cc9d3b03698</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>af3b7fb6d3a5817a1fb3edff83294a1d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>aaf04e92fc17efaa2c07df42c06c0d563</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivities</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a00d3b8044047377ace1c854bd3e3136d</anchor>
      <arglist>(doublereal *a) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a3f656e49d81e5827ed5754e84aa70a14</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials_RT</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a949dd4d771070e7d4f038361c61c0cd1</anchor>
      <arglist>(doublereal *murt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarIntEnergies</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a36c63d1f3f4faa1f29300b30358536e5</anchor>
      <arglist>(doublereal *ubar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPureGibbs</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>aeb7a9744545e2854ced11ea7634dfe49</anchor>
      <arglist>(doublereal *gpure) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>ac0892d9c5b503b830fd46afa40f14763</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>af9328613fd7ac31d213f4fd284d8ad63</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT_ref</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a15142ba0b60259900efafd8026b51c96</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_ref</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>ae4ec4c8979d7a4b5deb6faf52697a068</anchor>
      <arglist>(doublereal *g) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R_ref</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a9d67a94aa582d60860f4658ea11e1aa3</anchor>
      <arglist>(doublereal *er) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R_ref</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>ab511be0c8fe8538e41b1b74d5bc4f7df</anchor>
      <arglist>(doublereal *cprt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMassFractions</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a1469e0717c5fec4e6aa52d12e42d13ef</anchor>
      <arglist>(const doublereal *const y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMoleFractions</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>aeb42a71fafb5c1207b4b503477acf963</anchor>
      <arglist>(const doublereal *const x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_HP</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a0d841cf33d6a03652dc1b8c5a1fa8b39</anchor>
      <arglist>(double h, double p, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_UV</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a1122d8ed8cb21c4f89499f0a205666ab</anchor>
      <arglist>(double u, double v, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_SP</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>a9b4668013babc7cd22e7c0c8d3c2dd35</anchor>
      <arglist>(double s, double p, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_SV</name>
      <anchorfile>classCantera_1_1SingleSpeciesTP.html</anchorfile>
      <anchor>af093205eee5fdcdaa229e46ae68849d0</anchor>
      <arglist>(double s, double v, double tol=1e-9)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::SolidTransport</name>
    <filename>classCantera_1_1SolidTransport.html</filename>
    <base>Cantera::Transport</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>transportType</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>aaa616493275cb1d7fb3ba980ec3cd467</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>ionConductivity</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>a5dea33cce075a0d113ee456416f7e12c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalConductivity</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>a2485777400132063dc233a7af516e66d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>electricalConductivity</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>a8f7c4ee7a1909f8cd8cd455135b20326</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>defectDiffusivity</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>aeab89acbb2886c707e1ee0177ccd3b9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>defectActivity</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>a2d6eaddf43c12a1aeae7ef291b1a27e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMixDiffCoeffs</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>a699001499937e42f790551f01bce4424</anchor>
      <arglist>(doublereal *const d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMobilities</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>a7f87ca1b4b1b288143ba5ec516e0faef</anchor>
      <arglist>(doublereal *const mobil)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParameters</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>abf0ee8d141c0c6b2152a393f700a01c4</anchor>
      <arglist>(const int n, const int k, const doublereal *const p)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>initSolid</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>a42e30487e5b7f163b706bb51703a8ff5</anchor>
      <arglist>(SolidTransportData &amp;tr)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LTPspecies *</type>
      <name>m_ionConductivity</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>a1fcb0b783fd56f4589e11652b8de8a0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LTPspecies *</type>
      <name>m_thermalConductivity</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>a3e850c0dcbb669f6f8f5024eee980d87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LTPspecies *</type>
      <name>m_electConductivity</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>ac72b3cb54f5c1ac2062d783f32c71518</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LTPspecies *</type>
      <name>m_defectDiffusivity</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>a798751fb08928f92d5c009af72ffd631</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LTPspecies *</type>
      <name>m_defectActivity</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>a4e8c52dc9d13f67491116334a3b490ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>m_nmobile</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>a948935666d34e4ff871ff4bdc0eac39a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Adiff</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>ae7324cbae255452b20418f39cfb28b20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Ndiff</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>a976f6db482b09d8abdabc1fc7d46bdae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_Ediff</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>af5e08922a1c751e9729e281b6e28ccee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_int</type>
      <name>m_sp</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>a0054b2725429ffabc47593cef292600d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_Alam</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>a9e8285e192b70efcbfd159e9e3a1b4f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_Nlam</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>a49140c9feba8941706ed58a1c379b8a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_Elam</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>ad7c15ef8ddde5416afa2944092ccc92b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_work</name>
      <anchorfile>classCantera_1_1SolidTransport.html</anchorfile>
      <anchor>a85e71e6abf9d224522f8d254f576c369</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::SolidTransportData</name>
    <filename>classCantera_1_1SolidTransportData.html</filename>
    <base>Cantera::TransportParams</base>
    <member kind="variable">
      <type>std::string</type>
      <name>speciesName</name>
      <anchorfile>classCantera_1_1SolidTransportData.html</anchorfile>
      <anchor>a3e9adc165c89c8fb94220c3df3706e39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LTPspecies *</type>
      <name>ionConductivity</name>
      <anchorfile>classCantera_1_1SolidTransportData.html</anchorfile>
      <anchor>a5da125afadd0ff6ddf1812dd719d8d5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LTPspecies *</type>
      <name>thermalConductivity</name>
      <anchorfile>classCantera_1_1SolidTransportData.html</anchorfile>
      <anchor>adce57d3a9fecba943b705e787146a9ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LTPspecies *</type>
      <name>electConductivity</name>
      <anchorfile>classCantera_1_1SolidTransportData.html</anchorfile>
      <anchor>af6912ba49da7cb583f21854502694a23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LTPspecies *</type>
      <name>defectDiffusivity</name>
      <anchorfile>classCantera_1_1SolidTransportData.html</anchorfile>
      <anchor>a42e00db74ce84712b14330f335765ef5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LTPspecies *</type>
      <name>defectActivity</name>
      <anchorfile>classCantera_1_1SolidTransportData.html</anchorfile>
      <anchor>af7d3dcbc7463fb0b17e5f2bfd394eea3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::solveSP</name>
    <filename>classCantera_1_1solveSP.html</filename>
    <member kind="function">
      <type></type>
      <name>solveSP</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a27afea50597a3e57b30d37814e5fdbd8</anchor>
      <arglist>(ImplicitSurfChem *surfChemPtr, int bulkFunc=BULK_ETCH)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~solveSP</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>af2b93bcaa6b7e1e6e2d4592d54469ac8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solveSurfProb</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>ab14e2cb79e4e5295a7695778ae2c7358</anchor>
      <arglist>(int ifunc, doublereal time_scale, doublereal TKelvin, doublereal PGas, doublereal reltol, doublereal abstol)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>solveSP</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>aafb7eab777b338f15e0506ff1dc9a265</anchor>
      <arglist>(const solveSP &amp;right)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>solveSP &amp;</type>
      <name>operator=</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>abb43813c2f66956dd34968c05467a7cc</anchor>
      <arglist>(const solveSP &amp;right)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>print_header</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a06ac7258c879047289e00d016d479a24</anchor>
      <arglist>(int ioflag, int ifunc, doublereal time_scale, int damping, doublereal reltol, doublereal abstol)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>printIteration</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a52719bc5898d2e9887c6f1e2992a2319</anchor>
      <arglist>(int ioflag, doublereal damp, int label_d, int label_t, doublereal inv_t, doublereal t_real, size_t iter, doublereal update_norm, doublereal resid_norm, bool do_time, bool final=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>doublereal</type>
      <name>calc_t</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a89ba75f6af785fc47d05583ad3f38eb4</anchor>
      <arglist>(doublereal netProdRateSolnSP[], doublereal XMolSolnSP[], int *label, int *label_old, doublereal *label_factor, int ioflag)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>calcWeights</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a50378cdbc2a13cef335905b8f3d1c1b2</anchor>
      <arglist>(doublereal wtSpecies[], doublereal wtResid[], const Array2D &amp;Jac, const doublereal CSolnSP[], const doublereal abstol, const doublereal reltol)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateState</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>aeee4d3606f8f954bfbc11bc8aa102831</anchor>
      <arglist>(const doublereal *cSurfSpec)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateMFSolnSP</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a15feada3dc739dac2d294bf4dbe50e94</anchor>
      <arglist>(doublereal *XMolSolnSP)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateMFKinSpecies</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a96ebebb6ae386ce3a39d21064eaf6a2a</anchor>
      <arglist>(doublereal *XMolKinSp, int isp)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>evalSurfLarge</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a39c88bf76b1c210f2c4bff3ba17bda3a</anchor>
      <arglist>(const doublereal *CSolnSP)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>fun_eval</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a022954dfdbb30c038805560727ff5747</anchor>
      <arglist>(doublereal *resid, const doublereal *CSolnSP, const doublereal *CSolnOldSP, const bool do_time, const doublereal deltaT)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>resjac_eval</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a488a6dc405e47302de37457d59847c58</anchor>
      <arglist>(DenseMatrix &amp;jac, doublereal *resid, doublereal *CSolnSP, const doublereal *CSolnSPOld, const bool do_time, const doublereal deltaT)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ImplicitSurfChem *</type>
      <name>m_SurfChemPtr</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>ab779026afb3d8ddc1b528c93b50cb995</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; InterfaceKinetics * &gt; &amp;</type>
      <name>m_objects</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>ae9f118496b12597af806099055984e63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>m_neq</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>add89b2f10e5ea353a52f71636d9dbd0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_bulkFunc</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a5a54a572b419916d383e643ca54bee55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>m_numSurfPhases</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>abef3802fe832886e7ccf82492d7d53c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>m_numTotSurfSpecies</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a15377933280ff2d90299115705f86014</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_indexKinObjSurfPhase</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a104389a88f40111f841d5b11262b0ddb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_nSpeciesSurfPhase</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a8f87dcfaea04012e8ffb43a45b1b978e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; SurfPhase * &gt;</type>
      <name>m_ptrsSurfPhase</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a5f68303c05e6638c8b748964f85ab1b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_eqnIndexStartSolnPhase</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>ade0e686e842481fd9a0bead6cf9c6156</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_kinObjPhaseIDSurfPhase</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>acb872d59fc6fd04ce894c6b63a96e7e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>m_numBulkPhasesSS</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>ada0bac79849cc87575c0c2fafbc1431a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_numBulkSpecies</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a857e9a830a7341988f1abe2655c2e86e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>m_numTotBulkSpeciesSS</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a9b0368f07cc516aeda6166719086374c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; ThermoPhase * &gt;</type>
      <name>m_bulkPhasePtrs</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a8284122e1ef47b69795cf18d329396f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_kinSpecIndex</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a88f969fad504c333a85909a29c39cc48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_kinObjIndex</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a365d16833a665e3dceb9191caab0f9fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_spSurfLarge</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>aa994b8ea1a209c52e5d5afb0012c0500</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_atol</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>afb7bd5b7f4cac79454aca2f0a5329217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_rtol</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a4d12e55d7fcc98bdfda31d8f7ad4878c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_maxstep</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a5355ef6cd918be18187dc92b8f0c6f3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>m_maxTotSpecies</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>af129879d6b8c65557ec801e00cf0b595</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_netProductionRatesSave</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a36eebb9f31e6862b8ca298749eb40474</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_numEqn1</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>acbaccd6cc2d0a49bdfb31ec2fbf348e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_numEqn2</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>ab575b078dcc5c18cb93b4ceea7a4004b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_CSolnSave</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a758f58d02aaac6ee5c3e1bd1f552f80f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_CSolnSP</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a67e2517b16eb8d985b6bf320febca262</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_CSolnSPInit</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>af9096736d379da6b76399757e5f25831</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_CSolnSPOld</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>af46b837b8c31dd6ad97885d0f3c5c5f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_wtResid</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a7188360a69395ae7af069bf89614a80d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_wtSpecies</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a91564c9868ff3ff9337d7965daf5cd9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_resid</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a738256a57014ad91e64eb5ca1a1690df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>m_XMolKinSpecies</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>a76cb995293eb40c80c6c9b82d4f0d61e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DenseMatrix</type>
      <name>m_Jac</name>
      <anchorfile>classCantera_1_1solveSP.html</anchorfile>
      <anchor>ad023b6ddcad1e45a2470767891bb3a3a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Species</name>
    <filename>classCantera_1_1Species.html</filename>
    <member kind="function">
      <type></type>
      <name>Species</name>
      <anchorfile>classCantera_1_1Species.html</anchorfile>
      <anchor>a66e44d21f916ab7073c5f5f93d7aa383</anchor>
      <arglist>(const std::string &amp;name, const compositionMap &amp;comp, double charge=0.0, double size=1.0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Species</name>
      <anchorfile>classCantera_1_1Species.html</anchorfile>
      <anchor>ac423c67dfb26a499b6bebe49e55f5e2d</anchor>
      <arglist>(const Species &amp;)=delete</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classCantera_1_1Species.html</anchorfile>
      <anchor>a9b45b3e13bd9167aab02e17e08916231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>compositionMap</type>
      <name>composition</name>
      <anchorfile>classCantera_1_1Species.html</anchorfile>
      <anchor>a40d02f9109081790d9fa99301bd02f9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>charge</name>
      <anchorfile>classCantera_1_1Species.html</anchorfile>
      <anchor>ab3eb30b2f3f9c5ff812ea037220be570</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>size</name>
      <anchorfile>classCantera_1_1Species.html</anchorfile>
      <anchor>aba3c5d750d5dbd6e86c11ecaca62885e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>shared_ptr&lt; SpeciesThermoInterpType &gt;</type>
      <name>thermo</name>
      <anchorfile>classCantera_1_1Species.html</anchorfile>
      <anchor>abcdb73effe849d112e433641271db2e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AnyMap</type>
      <name>extra</name>
      <anchorfile>classCantera_1_1Species.html</anchorfile>
      <anchor>a6d912d4f0ceb5a093d18ae5fcb91e2ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::SpeciesNode</name>
    <filename>classCantera_1_1SpeciesNode.html</filename>
    <member kind="function">
      <type></type>
      <name>SpeciesNode</name>
      <anchorfile>classCantera_1_1SpeciesNode.html</anchorfile>
      <anchor>ac8be53838e3f1b47de61808fae8189af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SpeciesNode</name>
      <anchorfile>classCantera_1_1SpeciesNode.html</anchorfile>
      <anchor>a1542cd5c483d9738b4ef24ba1732b15b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nPaths</name>
      <anchorfile>classCantera_1_1SpeciesNode.html</anchorfile>
      <anchor>aaa1f7051bb8e397791eb35723725e1fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPath</name>
      <anchorfile>classCantera_1_1SpeciesNode.html</anchorfile>
      <anchor>afe86fe8fde32e3985db18c40609ba3c8</anchor>
      <arglist>(Path *path)</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>number</name>
      <anchorfile>classCantera_1_1SpeciesNode.html</anchorfile>
      <anchor>aef165133d9edb7cf268c96f2e6df17a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classCantera_1_1SpeciesNode.html</anchorfile>
      <anchor>a9b45b3e13bd9167aab02e17e08916231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>doublereal</type>
      <name>value</name>
      <anchorfile>classCantera_1_1SpeciesNode.html</anchorfile>
      <anchor>a472003fd9e8b74ca76af79693be64cad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>visible</name>
      <anchorfile>classCantera_1_1SpeciesNode.html</anchorfile>
      <anchor>aa54a57ae048476d840caf6d4d2c47aa3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::SpeciesThermoInterpType</name>
    <filename>classCantera_1_1SpeciesThermoInterpType.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>minTemp</name>
      <anchorfile>classCantera_1_1SpeciesThermoInterpType.html</anchorfile>
      <anchor>ad4f3a5bd9d91b0ecfebf8fec4af4fa55</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>maxTemp</name>
      <anchorfile>classCantera_1_1SpeciesThermoInterpType.html</anchorfile>
      <anchor>a37813efd82d2109d873558923da72290</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>refPressure</name>
      <anchorfile>classCantera_1_1SpeciesThermoInterpType.html</anchorfile>
      <anchor>a74022a43e586d4229be263cecf7f9951</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>validate</name>
      <anchorfile>classCantera_1_1SpeciesThermoInterpType.html</anchorfile>
      <anchor>ace42f1cc2fb8e12d6aac312ad7d11e0f</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>reportType</name>
      <anchorfile>classCantera_1_1SpeciesThermoInterpType.html</anchorfile>
      <anchor>a4bca73e6f4ec11bb6e6d37a0d6f4e2f5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>temperaturePolySize</name>
      <anchorfile>classCantera_1_1SpeciesThermoInterpType.html</anchorfile>
      <anchor>ada65d8cf4350202fe06325d2f351297e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTemperaturePoly</name>
      <anchorfile>classCantera_1_1SpeciesThermoInterpType.html</anchorfile>
      <anchor>a4ce0153b0f7baf76da320e23a75b34f8</anchor>
      <arglist>(double T, double *T_poly) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateProperties</name>
      <anchorfile>classCantera_1_1SpeciesThermoInterpType.html</anchorfile>
      <anchor>acb928ca625bcbc618f12e9ec8feef13d</anchor>
      <arglist>(const doublereal *tt, doublereal *cp_R, doublereal *h_RT, doublereal *s_R) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updatePropertiesTemp</name>
      <anchorfile>classCantera_1_1SpeciesThermoInterpType.html</anchorfile>
      <anchor>ac1b6400d8596cd1077debf5d803a5d3d</anchor>
      <arglist>(const doublereal temp, doublereal *cp_R, doublereal *h_RT, doublereal *s_R) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reportParameters</name>
      <anchorfile>classCantera_1_1SpeciesThermoInterpType.html</anchorfile>
      <anchor>a0dc5828c131b21abd4a4dab2d6e7ffeb</anchor>
      <arglist>(size_t &amp;index, int &amp;type, doublereal &amp;minTemp, doublereal &amp;maxTemp, doublereal &amp;refPressure, doublereal *const coeffs) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>reportHf298</name>
      <anchorfile>classCantera_1_1SpeciesThermoInterpType.html</anchorfile>
      <anchor>a82cf17c36b8a588ef9e093ce455bb352</anchor>
      <arglist>(doublereal *const h298=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>modifyOneHf298</name>
      <anchorfile>classCantera_1_1SpeciesThermoInterpType.html</anchorfile>
      <anchor>a770cf32674ea8e0da12ee537e82216a1</anchor>
      <arglist>(const size_t k, const doublereal Hf298New)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetHf298</name>
      <anchorfile>classCantera_1_1SpeciesThermoInterpType.html</anchorfile>
      <anchor>a92bfae5a63c2368cbb95a13baa08ad14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_lowT</name>
      <anchorfile>classCantera_1_1SpeciesThermoInterpType.html</anchorfile>
      <anchor>a93400a214d7197d8cf16c8ee3e365318</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_highT</name>
      <anchorfile>classCantera_1_1SpeciesThermoInterpType.html</anchorfile>
      <anchor>adc5ea559351e8c2736c2a70a657c4056</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_Pref</name>
      <anchorfile>classCantera_1_1SpeciesThermoInterpType.html</anchorfile>
      <anchor>ae6416ed4db67e617a45e94e2c4c20dc8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::SRI</name>
    <filename>classCantera_1_1SRI.html</filename>
    <base>Cantera::Falloff</base>
    <member kind="function">
      <type></type>
      <name>SRI</name>
      <anchorfile>classCantera_1_1SRI.html</anchorfile>
      <anchor>aeef11ef9c4bdb315e2d1950523a5be0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1SRI.html</anchorfile>
      <anchor>a7ac06e6a12e196d182caea2dcd6b9963</anchor>
      <arglist>(const vector_fp &amp;c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTemp</name>
      <anchorfile>classCantera_1_1SRI.html</anchorfile>
      <anchor>a2ebb4aa6fbcba40cf6b9c06d22e0ee92</anchor>
      <arglist>(doublereal T, doublereal *work) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>F</name>
      <anchorfile>classCantera_1_1SRI.html</anchorfile>
      <anchor>aad37dda9f1125936a1372a206c8e58cd</anchor>
      <arglist>(doublereal pr, const doublereal *work) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>workSize</name>
      <anchorfile>classCantera_1_1SRI.html</anchorfile>
      <anchor>acc2e7aaf281139ac48852aa6a59ab1d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getType</name>
      <anchorfile>classCantera_1_1SRI.html</anchorfile>
      <anchor>a9f9971257c55cdbf47dedf35a6cb2695</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>nParameters</name>
      <anchorfile>classCantera_1_1SRI.html</anchorfile>
      <anchor>a1b106ba0179505313ae594098e405868</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getParameters</name>
      <anchorfile>classCantera_1_1SRI.html</anchorfile>
      <anchor>a7889728a3e9c9cadba9d442cfa09a859</anchor>
      <arglist>(double *params) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_a</name>
      <anchorfile>classCantera_1_1SRI.html</anchorfile>
      <anchor>af2bdd640938eeaa9b9b36516a8964eb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_b</name>
      <anchorfile>classCantera_1_1SRI.html</anchorfile>
      <anchor>a33ae780b9b649fb1a7e4b14f862a4304</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_c</name>
      <anchorfile>classCantera_1_1SRI.html</anchorfile>
      <anchor>a2e7aa53a8698a2ac206c233d2d187486</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_d</name>
      <anchorfile>classCantera_1_1SRI.html</anchorfile>
      <anchor>a690098597d4413a58fda61052eb571db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_e</name>
      <anchorfile>classCantera_1_1SRI.html</anchorfile>
      <anchor>ae0e9ce1923b0821aaff76c6d818458eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::StFlow</name>
    <filename>classCantera_1_1StFlow.html</filename>
    <base>Cantera::Domain1D</base>
    <member kind="function">
      <type></type>
      <name>StFlow</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a229fc598ce5baf8159a8aca82fa36715</anchor>
      <arglist>(IdealGasPhase *ph=0, size_t nsp=1, size_t points=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>componentName</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a8b0c3fc1d7eb037a7e987fef3b74baa7</anchor>
      <arglist>(size_t n) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showSolution</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a222f24b70509e9f2ec32f8fb3a8bf194</anchor>
      <arglist>(const doublereal *x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual XML_Node &amp;</type>
      <name>save</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a6f2845e1dc389d2366e58c34e3a53a19</anchor>
      <arglist>(XML_Node &amp;o, const doublereal *const sol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>restore</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a7f87adb9173d936c9f741a204b94d69c</anchor>
      <arglist>(const XML_Node &amp;dom, doublereal *soln, int loglevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableRadiation</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a5474028fa3d833e0beebd7f58a19ec82</anchor>
      <arglist>(bool doRadiation)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>radiationEnabled</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a76eaef396b946d200bc1d0eddd8294bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundaryEmissivities</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a4e8a901bc00a3f89178638994adf7c3b</anchor>
      <arglist>(doublereal e_left, doublereal e_right)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a999a32b06357990eb208a5fc86e0380c</anchor>
      <arglist>(size_t components, size_t points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGas</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a8c740632b398e13d0f7a5d5fae935c8e</anchor>
      <arglist>(const doublereal *x, size_t j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGasAtMidpoint</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a2ac7954e20b3132eb6a050f4c311a224</anchor>
      <arglist>(const doublereal *x, size_t j)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a5895dea0ade9d19613627e4f40aa0b04</anchor>
      <arglist>(size_t j, doublereal *x, doublereal *r, integer *mask, doublereal rdt)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>evalRightBoundary</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>ada5c2b2334881e261705af0d404069c9</anchor>
      <arglist>(doublereal *x, doublereal *res, integer *diag, doublereal rdt)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>evalContinuity</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>af06a0679eda43fc40244ea86f2440c3c</anchor>
      <arglist>(size_t j, doublereal *x, doublereal *r, integer *diag, doublereal rdt)=0</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>leftExcessSpecies</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>aaa960296693e3a1670db5dc5408ceab7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>rightExcessSpecies</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a2bf906f4ba0806889878d522957672c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupGrid</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>ae4b0c92ba45efb6445ec209ab9944c20</anchor>
      <arglist>(size_t n, const doublereal *z)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetBadValues</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>ac62a6125038fdf0ccce236710017c0de</anchor>
      <arglist>(double *xg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setThermo</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a82ecc82b85bf344091f3adf46d8a73ec</anchor>
      <arglist>(IdealGasPhase &amp;th)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setKinetics</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>ac583013c856f0d59d4fd3018df70261d</anchor>
      <arglist>(Kinetics &amp;kin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransport</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>ae80aebf737086298437b227045b6227e</anchor>
      <arglist>(Transport &amp;trans)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableSoret</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a41087c1849cc13e7b6afc9e38e641374</anchor>
      <arglist>(bool withSoret)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>_getInitialSoln</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>add1195cb7c6fc1469bef65648f31ef26</anchor>
      <arglist>(double *x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>_finalize</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a8850703927b0e31590d988ad9420a411</anchor>
      <arglist>(const doublereal *x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFixedTempProfile</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a94c3f5dd4a47741f6584eef3282c1e12</anchor>
      <arglist>(vector_fp &amp;zfixed, vector_fp &amp;tfixed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTemperature</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>ad0b1481bfad3318e368c4a455d15c97a</anchor>
      <arglist>(size_t j, doublereal t)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>T_fixed</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a330dc6cecd37b1bc305b8123e8448645</anchor>
      <arglist>(size_t j) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getWdot</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a81f7a634955b38354217c52335c845d7</anchor>
      <arglist>(doublereal *x, size_t j)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateProperties</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>add16afdfdee7b02ad5121741a6ea1e81</anchor>
      <arglist>(size_t jg, double *x, size_t jmin, size_t jmax)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>evalResidual</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a0342d59a8b5f652d7730b4fa2fdb0508</anchor>
      <arglist>(double *x, double *rsd, int *diag, double rdt, size_t jmin, size_t jmax)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateThermo</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>ab45577b494a450806d38c66f818d93dd</anchor>
      <arglist>(const doublereal *x, size_t j0, size_t j1)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateDiffFluxes</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a8ca815c2fe260079e4477724c8f0f3ae</anchor>
      <arglist>(const doublereal *x, size_t j0, size_t j1)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTransport</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>ab873c7b346a2910778de6dc0c390d298</anchor>
      <arglist>(doublereal *x, size_t j0, size_t j1)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_kRadiating</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a568e558d7c2c33138c06101bb6fffd12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_do_radiation</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>afefaea1d6133b954ecd00cc8cd39fa5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_qdotRadiation</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>abe89bebac360b470daa00b5740fd666e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_kExcessLeft</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a144db0a793310249a9bdba8e53c927fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupGrid</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>ae4b0c92ba45efb6445ec209ab9944c20</anchor>
      <arglist>(size_t n, const doublereal *z)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetBadValues</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>ac62a6125038fdf0ccce236710017c0de</anchor>
      <arglist>(double *xg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setThermo</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a82ecc82b85bf344091f3adf46d8a73ec</anchor>
      <arglist>(IdealGasPhase &amp;th)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setKinetics</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>ac583013c856f0d59d4fd3018df70261d</anchor>
      <arglist>(Kinetics &amp;kin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransport</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>ae80aebf737086298437b227045b6227e</anchor>
      <arglist>(Transport &amp;trans)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableSoret</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a41087c1849cc13e7b6afc9e38e641374</anchor>
      <arglist>(bool withSoret)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>_getInitialSoln</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>add1195cb7c6fc1469bef65648f31ef26</anchor>
      <arglist>(double *x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>_finalize</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a8850703927b0e31590d988ad9420a411</anchor>
      <arglist>(const doublereal *x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFixedTempProfile</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a94c3f5dd4a47741f6584eef3282c1e12</anchor>
      <arglist>(vector_fp &amp;zfixed, vector_fp &amp;tfixed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTemperature</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>ad0b1481bfad3318e368c4a455d15c97a</anchor>
      <arglist>(size_t j, doublereal t)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>T_fixed</name>
      <anchorfile>classCantera_1_1StFlow.html</anchorfile>
      <anchor>a330dc6cecd37b1bc305b8123e8448645</anchor>
      <arglist>(size_t j) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::STITbyPDSS</name>
    <filename>classCantera_1_1STITbyPDSS.html</filename>
    <base>Cantera::SpeciesThermoInterpType</base>
    <member kind="function">
      <type></type>
      <name>STITbyPDSS</name>
      <anchorfile>classCantera_1_1STITbyPDSS.html</anchorfile>
      <anchor>a6e2871f2b8187e6d4e06c35663f94207</anchor>
      <arglist>(PDSS *PDSS_ptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>minTemp</name>
      <anchorfile>classCantera_1_1STITbyPDSS.html</anchorfile>
      <anchor>a2177c1e9ecf43eb8ac9b70d770008bc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>maxTemp</name>
      <anchorfile>classCantera_1_1STITbyPDSS.html</anchorfile>
      <anchor>a0004797248f9be8173ddbdf40c0b629d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>refPressure</name>
      <anchorfile>classCantera_1_1STITbyPDSS.html</anchorfile>
      <anchor>aa67bb4f5ad2c7365739f5a96be32dbf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>reportType</name>
      <anchorfile>classCantera_1_1STITbyPDSS.html</anchorfile>
      <anchor>a0f90f1e13ec0395424099702bb5423de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateProperties</name>
      <anchorfile>classCantera_1_1STITbyPDSS.html</anchorfile>
      <anchor>a89176205d42b52158a885e8a2de64798</anchor>
      <arglist>(const doublereal *tempPoly, doublereal *cp_R, doublereal *h_RT, doublereal *s_R) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updatePropertiesTemp</name>
      <anchorfile>classCantera_1_1STITbyPDSS.html</anchorfile>
      <anchor>a9ad26486b7aa404ff87b29b61472b7e9</anchor>
      <arglist>(const doublereal temp, doublereal *cp_R, doublereal *h_RT, doublereal *s_R) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reportParameters</name>
      <anchorfile>classCantera_1_1STITbyPDSS.html</anchorfile>
      <anchor>a0aaf27638fff569415173769b9dbae81</anchor>
      <arglist>(size_t &amp;index, int &amp;type, doublereal &amp;minTemp, doublereal &amp;maxTemp, doublereal &amp;refPressure, doublereal *const coeffs) const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PDSS *</type>
      <name>m_PDSS_ptr</name>
      <anchorfile>classCantera_1_1STITbyPDSS.html</anchorfile>
      <anchor>a8ec76167936e83d7cc6accb4bea97145</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::StoichSubstance</name>
    <filename>classCantera_1_1StoichSubstance.html</filename>
    <base>Cantera::SingleSpeciesTP</base>
    <member kind="function">
      <type></type>
      <name>StoichSubstance</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>ab470ab8a4a8793f9381b42e2dd793619</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StoichSubstance</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>a9cfa2ee005361df422a94abf83e64be7</anchor>
      <arglist>(const std::string &amp;infile, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StoichSubstance</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>af1c17770df20e461969d66ee415814dd</anchor>
      <arglist>(XML_Node &amp;phaseRef, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParameters</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>ada0ba2f6093d3df4d86c0f1018005544</anchor>
      <arglist>(int n, doublereal *const c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getParameters</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>af41cd836506ec09138b0c9c327acf1d3</anchor>
      <arglist>(int &amp;n, doublereal *const c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>abe11f2065246742c73c778c5de62f5b7</anchor>
      <arglist>(const XML_Node &amp;eosdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>isothermalCompressibility</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>afbf834ae5cd73373fa5681bbdc329f1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalExpansionCoeff</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>a661ba8332a19cb48e3e03136c1bce6a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>logStandardConc</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>a478bb3efbdc8679b9c922d022c317b0d</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>a6b4cdc30b480b92ed405f95e1f660687</anchor>
      <arglist>(doublereal *mu0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>a2ee9dfc481fbf2c9e915c1e15794d238</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>a6736e153cc33a62e77d8b5bc594cb7c3</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>aadbf5eb5c20c2db5ea363947e883b6be</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT_ref</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>aa84157ca9a671bea6e55ad961fb3156d</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>isothermalCompressibility</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>afbf834ae5cd73373fa5681bbdc329f1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalExpansionCoeff</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>a661ba8332a19cb48e3e03136c1bce6a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>logStandardConc</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>a478bb3efbdc8679b9c922d022c317b0d</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>a6b4cdc30b480b92ed405f95e1f660687</anchor>
      <arglist>(doublereal *mu0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>a2ee9dfc481fbf2c9e915c1e15794d238</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>a6736e153cc33a62e77d8b5bc594cb7c3</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>aadbf5eb5c20c2db5ea363947e883b6be</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT_ref</name>
      <anchorfile>classCantera_1_1StoichSubstance.html</anchorfile>
      <anchor>aa84157ca9a671bea6e55ad961fb3156d</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Sum1</name>
    <filename>classCantera_1_1Sum1.html</filename>
    <base>Cantera::Func1</base>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1Sum1.html</anchorfile>
      <anchor>acd39f99891dcb367c57588ec8c79b0c6</anchor>
      <arglist>(doublereal t) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>duplicate</name>
      <anchorfile>classCantera_1_1Sum1.html</anchorfile>
      <anchor>a4aa86693947c32c642a3d6ee556a8eed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>derivative</name>
      <anchorfile>classCantera_1_1Sum1.html</anchorfile>
      <anchor>a79b93814a3999ee82ef932b9b861d9b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>order</name>
      <anchorfile>classCantera_1_1Sum1.html</anchorfile>
      <anchor>a177cd31efbfb81626a24dea53fcabfe8</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Surf1D</name>
    <filename>classCantera_1_1Surf1D.html</filename>
    <base>Cantera::Bdry1D</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1Surf1D.html</anchorfile>
      <anchor>a02fd73d861ef2e4aabb38c0c9ff82947</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1Surf1D.html</anchorfile>
      <anchor>aa62f69dbb402c9c9de00311a7f5193ad</anchor>
      <arglist>(size_t jg, doublereal *xg, doublereal *rg, integer *diagg, doublereal rdt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual XML_Node &amp;</type>
      <name>save</name>
      <anchorfile>classCantera_1_1Surf1D.html</anchorfile>
      <anchor>ac2ec60b9aa9b81c157997c4c10594883</anchor>
      <arglist>(XML_Node &amp;o, const doublereal *const soln)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>restore</name>
      <anchorfile>classCantera_1_1Surf1D.html</anchorfile>
      <anchor>a7f87adb9173d936c9f741a204b94d69c</anchor>
      <arglist>(const XML_Node &amp;dom, doublereal *soln, int loglevel)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showSolution</name>
      <anchorfile>classCantera_1_1Surf1D.html</anchorfile>
      <anchor>aa8a7e620eca862f4cf1cd4ca2c91dcc3</anchor>
      <arglist>(const doublereal *x)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::SurfaceArrhenius</name>
    <filename>classCantera_1_1SurfaceArrhenius.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addCoverageDependence</name>
      <anchorfile>classCantera_1_1SurfaceArrhenius.html</anchorfile>
      <anchor>ae4065ec2b9341fecd3af471152228856</anchor>
      <arglist>(size_t k, doublereal a, doublereal m, doublereal e)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>updateRC</name>
      <anchorfile>classCantera_1_1SurfaceArrhenius.html</anchorfile>
      <anchor>a354261ac5478e5384ff7d5175682a609</anchor>
      <arglist>(doublereal logT, doublereal recipT) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>preExponentialFactor</name>
      <anchorfile>classCantera_1_1SurfaceArrhenius.html</anchorfile>
      <anchor>abd2b9976c5c8cccb92c5d9feed8c42e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>temperatureExponent</name>
      <anchorfile>classCantera_1_1SurfaceArrhenius.html</anchorfile>
      <anchor>a7ceaba9fd7d74e6e89186eb11c892180</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>activationEnergy_R</name>
      <anchorfile>classCantera_1_1SurfaceArrhenius.html</anchorfile>
      <anchor>a944ae0a43e1a2b473ed8dda485e97c9a</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::SurfPhase</name>
    <filename>classCantera_1_1SurfPhase.html</filename>
    <base>Cantera::ThermoPhase</base>
    <member kind="function">
      <type></type>
      <name>SurfPhase</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>af3ac62e2835def1cc2a54b57f3f04c79</anchor>
      <arglist>(doublereal n0=1.0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SurfPhase</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a915088692989d9ff507e10f353697bf7</anchor>
      <arglist>(const std::string &amp;infile, const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SurfPhase</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>ab0631d173006a733da784b1966502554</anchor>
      <arglist>(XML_Node &amp;xmlphase)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a455c2e8de8cd7af88ba0cbff87f9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>af3b7fb6d3a5817a1fb3edff83294a1d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a7f1001a3ace091f9897cd524c78acefd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a3a70e62b9e8de265527c95577f775c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>ae0bb82a914b6dbfd25f7f06df44c147b</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a3c94e58e3d974b9113d3025b95c54fe0</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a3cf414ab61bde0ff3c10b93377946944</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a69bffa368f2cabae0322d0028ecc71f0</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a49b72438ae4126f6882995f1572a3aae</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a6b4cdc30b480b92ed405f95e1f660687</anchor>
      <arglist>(doublereal *mu0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a576bd7cb7a6433f6272613807ab2ad71</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>afed87e002b75310110cfbe81ea911fe2</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>logStandardConc</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a478bb3efbdc8679b9c922d022c317b0d</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParameters</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>ada0ba2f6093d3df4d86c0f1018005544</anchor>
      <arglist>(int n, doublereal *const c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a5a19cfdf838f5e46546aaff1e039cc97</anchor>
      <arglist>(const XML_Node &amp;thermoData)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStateFromXML</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a01e155d014f6e4b4fd3121fda565fc7d</anchor>
      <arglist>(const XML_Node &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>siteDensity</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>ac984538deebebf3862d73db9a2351564</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>size</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a6d3e0d006bb20825da4f3c35dbde5e50</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSiteDensity</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a5144a0bdfbc5a1e4793060bca918de70</anchor>
      <arglist>(doublereal n0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a2ee9dfc481fbf2c9e915c1e15794d238</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a6736e153cc33a62e77d8b5bc594cb7c3</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a4eedbc0d1542fc11b951588856220254</anchor>
      <arglist>(doublereal *vol) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>ab3949a6b2b2cb9e039ff336f7d08cb98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>af51924111b2d115777e94fc71bcc86dd</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPureGibbs</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>ad913cd49329ce4bb87b8682f91640a0f</anchor>
      <arglist>(doublereal *g) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT_ref</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a15142ba0b60259900efafd8026b51c96</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>af9328613fd7ac31d213f4fd284d8ad63</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R_ref</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a9d67a94aa582d60860f4658ea11e1aa3</anchor>
      <arglist>(doublereal *er) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R_ref</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>ab511be0c8fe8538e41b1b74d5bc4f7df</anchor>
      <arglist>(doublereal *cprt) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoverages</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>af26fcbba9501e215a726463d77b3b96e</anchor>
      <arglist>(const doublereal *theta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoveragesNoNorm</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a06eb3f3038c7786e6208e646b2234c80</anchor>
      <arglist>(const doublereal *theta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoveragesByName</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a0890537f6409a9b606a70990fc9c3a81</anchor>
      <arglist>(const std::string &amp;cov)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoveragesByName</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a9fabe74410267a523a9035049d420b60</anchor>
      <arglist>(const compositionMap &amp;cov)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getCoverages</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a4c7a72f0a7af20923a39a367c3cc2d8d</anchor>
      <arglist>(doublereal *theta) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_n0</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a62a90b06db3c95ed480adf180b2717a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_speciesSize</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a3ceab9093095848092b191dcc9d45ce0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_logn0</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a66987533110fa8cdf47b76c96dd40f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_press</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a0edab2fddaaaa5321a40af0cbca697cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_h0</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a66c5cc696e3a0ccbcb7cb2aba73e2e9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_s0</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a157e4642a3936633ac0d303863c4cc51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_cp0</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>ac9bd71c213a9758ba526a87dc3a23da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_mu0</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a9147a615ac19dd5da1e43f0545759aa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_work</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>a85e71e6abf9d224522f8d254f576c369</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_logsize</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>af86737392e035fc87b33959fc64dcc0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>_updateThermo</name>
      <anchorfile>classCantera_1_1SurfPhase.html</anchorfile>
      <anchor>aa53bc67bb45c59f204357d7ec5cfab13</anchor>
      <arglist>(bool force=false) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Symm1D</name>
    <filename>classCantera_1_1Symm1D.html</filename>
    <base>Cantera::Bdry1D</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1Symm1D.html</anchorfile>
      <anchor>a02fd73d861ef2e4aabb38c0c9ff82947</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1Symm1D.html</anchorfile>
      <anchor>aa62f69dbb402c9c9de00311a7f5193ad</anchor>
      <arglist>(size_t jg, doublereal *xg, doublereal *rg, integer *diagg, doublereal rdt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual XML_Node &amp;</type>
      <name>save</name>
      <anchorfile>classCantera_1_1Symm1D.html</anchorfile>
      <anchor>ac2ec60b9aa9b81c157997c4c10594883</anchor>
      <arglist>(XML_Node &amp;o, const doublereal *const soln)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>restore</name>
      <anchorfile>classCantera_1_1Symm1D.html</anchorfile>
      <anchor>a7f87adb9173d936c9f741a204b94d69c</anchor>
      <arglist>(const XML_Node &amp;dom, doublereal *soln, int loglevel)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ThermoFactory</name>
    <filename>classCantera_1_1ThermoFactory.html</filename>
    <base>Factory&lt; ThermoPhase &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deleteFactory</name>
      <anchorfile>classCantera_1_1ThermoFactory.html</anchorfile>
      <anchor>ad6285cea657558e041f040555a4d1c2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ThermoPhase *</type>
      <name>newThermoPhase</name>
      <anchorfile>classCantera_1_1ThermoFactory.html</anchorfile>
      <anchor>ad4b7b79d00d366f18d50d42db5260671</anchor>
      <arglist>(const std::string &amp;model)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ThermoFactory *</type>
      <name>factory</name>
      <anchorfile>classCantera_1_1ThermoFactory.html</anchorfile>
      <anchor>a86db678c79d95be373c078cef2b243eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ThermoFactory</name>
      <anchorfile>classCantera_1_1ThermoFactory.html</anchorfile>
      <anchor>a5383746d195a492f63fe0bb072787990</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ThermoFactory *</type>
      <name>s_factory</name>
      <anchorfile>classCantera_1_1ThermoFactory.html</anchorfile>
      <anchor>ae239e9c8d196674e6385354c18c284b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::mutex</type>
      <name>thermo_mutex</name>
      <anchorfile>classCantera_1_1ThermoFactory.html</anchorfile>
      <anchor>a9f114967b588841e02627f3bf479d6ea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ThermoPhase</name>
    <filename>classCantera_1_1ThermoPhase.html</filename>
    <base>Cantera::Phase</base>
    <member kind="function">
      <type></type>
      <name>ThermoPhase</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a7d672ec916b300be0faff59396d1d32a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>RT</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a20ff46b0e4c24317d45cc1fde0145e18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>refPressure</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a74022a43e586d4229be263cecf7f9951</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>minTemp</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>adeae8e3cc7b168199c185b182b093190</anchor>
      <arglist>(size_t k=npos) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>Hf298SS</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>af1bb028de87d319d7fc7d7609735a0cb</anchor>
      <arglist>(const size_t k) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>modifyOneHf298SS</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>acce27d8309a45cda75efbadc641dd7e5</anchor>
      <arglist>(const size_t k, const doublereal Hf298New)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetHf298</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>aae5e68c46937aadb155cfd7ff906ae6b</anchor>
      <arglist>(const size_t k=npos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>maxTemp</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a9da62d8129029b4dab428ca9fc339363</anchor>
      <arglist>(size_t k=npos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>chargeNeutralityNecessary</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a11ae1cee3bb6cd8e556da93e134d55d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ad1f748debfb3ad9694cbe10567607041</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a7faf9c9cc25b0d68e3d70d3652a15064</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a4ffabb655af31633bc2428a745fee00d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a0e2736f9897926ad93283cd2730cffca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a68f03569b6bb3d3d9d27e6021f874e8f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a7b8866c933747ea9c38fddc95a53eb0a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ab3949a6b2b2cb9e039ff336f7d08cb98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>isothermalCompressibility</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a27c5e3d9b78a7fdc117ec185415ca5dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalExpansionCoeff</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ad287adaf5f93ebe3278fe62f69efbd01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setElectricPotential</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a0a4cc941e8d98267da7ced782eb5fa2e</anchor>
      <arglist>(doublereal v)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>electricPotential</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>af08db1eeb169787798e68dc7b98f4039</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>activityConvention</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a89a141b339cf4b95a7d1d56f3856b759</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>standardStateConvention</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a9d52b1e6dbfedae76514ccd11430242e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a83539a75df88ff87f95ca3a60a830dc8</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a8bc95d80ae6b9292cbcb7644f9dff3d8</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>logStandardConc</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a478bb3efbdc8679b9c922d022c317b0d</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivities</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a25599694fc3e55d19f9af8f0ab5dced1</anchor>
      <arglist>(doublereal *a) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a3f656e49d81e5827ed5754e84aa70a14</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getLnActivityCoefficients</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a2875fc50fe1a245ae531610323d7703e</anchor>
      <arglist>(doublereal *lnac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials_RT</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a9008127daf397ca1d26a9b777208cd65</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a3b9a2b69e6daaaee510f7825aa48d4f5</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElectrochemPotentials</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>aa1254fa4aa3990464ad134ea8eb30daa</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a1c960aa903c3ffed78afbedccbf62839</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a0844071826b59b5402977f5c9d44b682</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarIntEnergies</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a896cd770fe7dbc928228f302d515afc7</anchor>
      <arglist>(doublereal *ubar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a66d1eb4b6507b3a8daca87b8f0ba89f9</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a633b52fb3e8eef152f23984785cb2d07</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>aeabb3d44e37e899cb03e161e87b8dc1f</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a37bf4f79267b6a62524f8459c5ef0d97</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a59f32c443574cffc3f6ff8aa42dbeaab</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ad80ad288a04db09a765a211aa1618edb</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPureGibbs</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a9599e93f9a444b03f7306455f87f2efc</anchor>
      <arglist>(doublereal *gpure) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a1b10d6feb0eaf9c4769c0f0ce97a4c3d</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a3044f0c2c5335b876df1c8eb24b90c01</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a391e54e5d5bf92c13539b472b68e28db</anchor>
      <arglist>(doublereal *vol) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>acf3bc177e589fd1900342715c570581c</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT_ref</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a6316f76cdbb123a321d20a0f1ea39bc0</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_ref</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a1ef8f316c5246b1fb4e5870d4d94ef4b</anchor>
      <arglist>(doublereal *g) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R_ref</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ae1fc1c7b99894cb465dd86698ecef826</anchor>
      <arglist>(doublereal *er) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT_ref</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a0e1f8b55b1ac0cbbc7b28d042209655d</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R_ref</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a4a079d72443f6f003e601ac900879f35</anchor>
      <arglist>(doublereal *cprt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes_ref</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>af778fe54e2fa6262577185caa947e22b</anchor>
      <arglist>(doublereal *vol) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>enthalpy_mass</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ad7a2e379d28c820190d681034479f75d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>intEnergy_mass</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ac81eb9d6a2eb5bce4e0ef1909734ac54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>entropy_mass</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a173c72a6a6be854f4901270df4510769</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>gibbs_mass</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a45541e287ba5524c3b4718af13454c48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>cp_mass</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a6470da927b809b4a74e8158df2ec092c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>cv_mass</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>aac4b16991b58e8b79ba77fd8c636d6bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>af51924111b2d115777e94fc71bcc86dd</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TPX</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a5a95360d8ebf90e0c5cda5edd578cdf6</anchor>
      <arglist>(doublereal t, doublereal p, const doublereal *x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TPX</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a3fbb3ad1fb3d6144b160208edbc8e691</anchor>
      <arglist>(doublereal t, doublereal p, const compositionMap &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TPX</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a5c77fe268eff2669c2443563c9d5e3a1</anchor>
      <arglist>(doublereal t, doublereal p, const std::string &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TPY</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a04a8874ad6466cd317805a9b7febe6f5</anchor>
      <arglist>(doublereal t, doublereal p, const doublereal *y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TPY</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a66e5b4ed717e502c9988d6e98412a11c</anchor>
      <arglist>(doublereal t, doublereal p, const compositionMap &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TPY</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a4f03951b73d195c01e22e36ead311595</anchor>
      <arglist>(doublereal t, doublereal p, const std::string &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TP</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a1a5bebf3c4bd81782b54a3761f82215e</anchor>
      <arglist>(doublereal t, doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_PX</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a71869df2bb3212799bc18c3fc842f53c</anchor>
      <arglist>(doublereal p, doublereal *x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_PY</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a0aa082c599e5e73c40791922e70cbb0a</anchor>
      <arglist>(doublereal p, doublereal *y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_HP</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a0d841cf33d6a03652dc1b8c5a1fa8b39</anchor>
      <arglist>(double h, double p, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_UV</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a1122d8ed8cb21c4f89499f0a205666ab</anchor>
      <arglist>(double u, double v, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_SP</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a9b4668013babc7cd22e7c0c8d3c2dd35</anchor>
      <arglist>(double s, double p, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_SV</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>af093205eee5fdcdaa229e46ae68849d0</anchor>
      <arglist>(double s, double v, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_ST</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a4b517940600940a8cdff71d6a1a40cdf</anchor>
      <arglist>(double s, double t, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TV</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a2c9eff5f97e6c90527ed4edf48d896e7</anchor>
      <arglist>(double t, double v, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_PV</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a30c50ccd39ed8377521293bdfe48af23</anchor>
      <arglist>(double p, double v, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_UP</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a922915e2daafaa0c940eb23586287832</anchor>
      <arglist>(double u, double p, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_VH</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>aebcabb1329d9f4ef516ce9016903aef0</anchor>
      <arglist>(double v, double h, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TH</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ab6ff7b75ea6fbbf6bf240c5214510e5e</anchor>
      <arglist>(double t, double h, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_SH</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a9e74a11fcdffc2a6471c084ae6ccc413</anchor>
      <arglist>(double s, double h, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_RP</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>aacc071b92537ab52a0fbd3d4cb7aaa6e</anchor>
      <arglist>(doublereal rho, doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_RPX</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ac9bb1e011bb540ff358215b094218e61</anchor>
      <arglist>(doublereal rho, doublereal p, const doublereal *x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_RPX</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a7223be54d767ac5adc8e0967236206c7</anchor>
      <arglist>(doublereal rho, doublereal p, const compositionMap &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_RPX</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>afeea00211b80fc92ff8fd693a635bf6a</anchor>
      <arglist>(doublereal rho, doublereal p, const std::string &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_RPY</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a53b44518d63769b9d1b3707648c05306</anchor>
      <arglist>(doublereal rho, doublereal p, const doublereal *y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_RPY</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a85f5242d4139c48039554b5a39a542a8</anchor>
      <arglist>(doublereal rho, doublereal p, const compositionMap &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_RPY</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a2f541724edb5b60236db2474a68d8176</anchor>
      <arglist>(doublereal rho, doublereal p, const std::string &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>equilibrate</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>gaf658f6d2afb439d254b43166f270861e</anchor>
      <arglist>(const std::string &amp;XY, const std::string &amp;solver=&quot;auto&quot;, double rtol=1e-9, int max_steps=50000, int max_iter=100, int estimate_equil=0, int log_level=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setToEquilState</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>gabff9a8a035d3a59f00458ff8fca4f8c9</anchor>
      <arglist>(const doublereal *lambda_RT)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setElementPotentials</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>gaf49509a8378cb3502af4daf5ab7c66d7</anchor>
      <arglist>(const vector_fp &amp;lambda)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getElementPotentials</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>ga55702dfce5c6f43215708be9e9e589d6</anchor>
      <arglist>(doublereal *lambda) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>compatibleWithMultiPhase</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>ga6107e1b1da2244719399c92776d5591c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critTemperature</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a2bbd06ee23a1716ecc465eabded27ad4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critPressure</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a1bff908f26278a54ff14064c937e1f4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critVolume</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a45d366e7f06f6f4b75dc3f70f6a69ac4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critCompressibility</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a8557ddbaab01240041d4694ec802073c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critDensity</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a54159a4110b74430a79e35c268fbef3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>satTemperature</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a98c9e5a3862a4c4d2ace7ccd3e8bb1c9</anchor>
      <arglist>(doublereal p) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>satPressure</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a30cc9db0935dde804b06cd9d6a0f6a36</anchor>
      <arglist>(doublereal t)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>vaporFraction</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>afe9d105513e1532cb498a63041c6f3b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_Tsat</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a302ae2f94923bc9372359e3e35e5dd65</anchor>
      <arglist>(doublereal t, doublereal x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_Psat</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ac64e4d2b3f76fce1990a147ede393761</anchor>
      <arglist>(doublereal p, doublereal x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>modifySpecies</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a48f12f73d636ca557009cbc4a6bf9e29</anchor>
      <arglist>(size_t k, shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveSpeciesData</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a8dce160f1dc3530d425e13160dc288f3</anchor>
      <arglist>(const size_t k, const XML_Node *const data)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; const XML_Node * &gt; &amp;</type>
      <name>speciesData</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a615ade10c850ce2ff3becd77e14eda3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MultiSpeciesThermo &amp;</type>
      <name>speciesThermo</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a9181b0d324266a40b95be2e8b75c5c90</anchor>
      <arglist>(int k=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoFile</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a40289530956dbcfe789a5b60ac3fa950</anchor>
      <arglist>(const std::string &amp;inputFile, const std::string &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParameters</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ad4ac746210fdc6259486bf5f62b5558f</anchor>
      <arglist>(int n, doublereal *const c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getParameters</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>af5e81039b1f040b1d66d29dc24e3d22a</anchor>
      <arglist>(int &amp;n, doublereal *const c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>af03a726f2f5d141fc1ec3c6a9aed03a7</anchor>
      <arglist>(const XML_Node &amp;eosdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStateFromXML</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a01e155d014f6e4b4fd3121fda565fc7d</anchor>
      <arglist>(const XML_Node &amp;state)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invalidateCache</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ae4f5daed0983e1d3bfb144a5078d75cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffds</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ad603addd88cd4b998546cf7bc95ad807</anchor>
      <arglist>(const doublereal dTds, const doublereal *const dXds, doublereal *dlnActCoeffds) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnX_diag</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a8c63c7628168ce337877808119f6c9aa</anchor>
      <arglist>(doublereal *dlnActCoeffdlnX_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN_diag</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a4ec20967d5c97e5cb56c5db00c76e1e8</anchor>
      <arglist>(doublereal *dlnActCoeffdlnN_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a4a2e93544bb41c14ed880a4595e110cc</anchor>
      <arglist>(const size_t ld, doublereal *const dlnActCoeffdlnN)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>report</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a046799f2a038fddf13b5752cd0cc7117</anchor>
      <arglist>(bool show_thermo=true, doublereal threshold=-1e-14) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reportCSV</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>adfb71ccfeca322f3a2a25e5f7274cab4</anchor>
      <arglist>(std::ofstream &amp;csvFile) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getCsvReportData</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a67bc767f0949e2dc9ff6789d33abd070</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;names, std::vector&lt; vector_fp &gt; &amp;data) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MultiSpeciesThermo</type>
      <name>m_spthermo</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ad289acfcd90510144dcc02a515d4bac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; const XML_Node * &gt;</type>
      <name>m_speciesData</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ac790d9fda057752b41aa21dd1b88061f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_phi</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ad76bdcc00a076984bb450cc6aba70225</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_lambdaRRT</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a39062fb3ccaf4b3ad18ce853be28b40b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_hasElementPotentials</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a8f64fc89f73e910ac9387f3f75929893</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_chargeNeutralityNecessary</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a5764e2787dad729a90c2f34051212e1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_ssConvention</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a03409b6ebb5efdfda9f2c81d2524339c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_tlast</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a29be82f24ebd72ee5502b90d994c09a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setState_HPorUV</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a38d7870f7ec291fd6b075ca0e2c32fd2</anchor>
      <arglist>(doublereal h, doublereal p, doublereal tol=1e-9, bool doUV=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setState_SPorSV</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a36bc68edb70153514b3b66867f214513</anchor>
      <arglist>(double s, double p, double tol=1e-9, bool doSV=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setState_conditional_TP</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ae9b230a0f9c0a06e807c7351124d9a3a</anchor>
      <arglist>(doublereal t, doublereal p, bool set_p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>refPressure</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a74022a43e586d4229be263cecf7f9951</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>minTemp</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>adeae8e3cc7b168199c185b182b093190</anchor>
      <arglist>(size_t k=npos) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>Hf298SS</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>af1bb028de87d319d7fc7d7609735a0cb</anchor>
      <arglist>(const size_t k) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>modifyOneHf298SS</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>acce27d8309a45cda75efbadc641dd7e5</anchor>
      <arglist>(const size_t k, const doublereal Hf298New)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetHf298</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>aae5e68c46937aadb155cfd7ff906ae6b</anchor>
      <arglist>(const size_t k=npos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>maxTemp</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a9da62d8129029b4dab428ca9fc339363</anchor>
      <arglist>(size_t k=npos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>chargeNeutralityNecessary</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a11ae1cee3bb6cd8e556da93e134d55d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>enthalpy_mole</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ad1f748debfb3ad9694cbe10567607041</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>intEnergy_mole</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a7faf9c9cc25b0d68e3d70d3652a15064</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>entropy_mole</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a4ffabb655af31633bc2428a745fee00d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>gibbs_mole</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a0e2736f9897926ad93283cd2730cffca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cp_mole</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a68f03569b6bb3d3d9d27e6021f874e8f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a7b8866c933747ea9c38fddc95a53eb0a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ab3949a6b2b2cb9e039ff336f7d08cb98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>isothermalCompressibility</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a27c5e3d9b78a7fdc117ec185415ca5dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalExpansionCoeff</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ad287adaf5f93ebe3278fe62f69efbd01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setElectricPotential</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a0a4cc941e8d98267da7ced782eb5fa2e</anchor>
      <arglist>(doublereal v)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>electricPotential</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>af08db1eeb169787798e68dc7b98f4039</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>activityConvention</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a89a141b339cf4b95a7d1d56f3856b759</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>standardStateConvention</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a9d52b1e6dbfedae76514ccd11430242e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityConcentrations</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a83539a75df88ff87f95ca3a60a830dc8</anchor>
      <arglist>(doublereal *c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>standardConcentration</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a8bc95d80ae6b9292cbcb7644f9dff3d8</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>logStandardConc</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a478bb3efbdc8679b9c922d022c317b0d</anchor>
      <arglist>(size_t k=0) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivities</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a25599694fc3e55d19f9af8f0ab5dced1</anchor>
      <arglist>(doublereal *a) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getActivityCoefficients</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a3f656e49d81e5827ed5754e84aa70a14</anchor>
      <arglist>(doublereal *ac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getLnActivityCoefficients</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a2875fc50fe1a245ae531610323d7703e</anchor>
      <arglist>(doublereal *lnac) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials_RT</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a9008127daf397ca1d26a9b777208cd65</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a3b9a2b69e6daaaee510f7825aa48d4f5</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElectrochemPotentials</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>aa1254fa4aa3990464ad134ea8eb30daa</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEnthalpies</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a1c960aa903c3ffed78afbedccbf62839</anchor>
      <arglist>(doublereal *hbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarEntropies</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a0844071826b59b5402977f5c9d44b682</anchor>
      <arglist>(doublereal *sbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarIntEnergies</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a896cd770fe7dbc928228f302d515afc7</anchor>
      <arglist>(doublereal *ubar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarCp</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a66d1eb4b6507b3a8daca87b8f0ba89f9</anchor>
      <arglist>(doublereal *cpbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPartialMolarVolumes</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a633b52fb3e8eef152f23984785cb2d07</anchor>
      <arglist>(doublereal *vbar) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>aeabb3d44e37e899cb03e161e87b8dc1f</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a37bf4f79267b6a62524f8459c5ef0d97</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a59f32c443574cffc3f6ff8aa42dbeaab</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ad80ad288a04db09a765a211aa1618edb</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPureGibbs</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a9599e93f9a444b03f7306455f87f2efc</anchor>
      <arglist>(doublereal *gpure) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a1b10d6feb0eaf9c4769c0f0ce97a4c3d</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a3044f0c2c5335b876df1c8eb24b90c01</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a391e54e5d5bf92c13539b472b68e28db</anchor>
      <arglist>(doublereal *vol) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>acf3bc177e589fd1900342715c570581c</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT_ref</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a6316f76cdbb123a321d20a0f1ea39bc0</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_ref</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a1ef8f316c5246b1fb4e5870d4d94ef4b</anchor>
      <arglist>(doublereal *g) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R_ref</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ae1fc1c7b99894cb465dd86698ecef826</anchor>
      <arglist>(doublereal *er) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT_ref</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a0e1f8b55b1ac0cbbc7b28d042209655d</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R_ref</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a4a079d72443f6f003e601ac900879f35</anchor>
      <arglist>(doublereal *cprt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes_ref</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>af778fe54e2fa6262577185caa947e22b</anchor>
      <arglist>(doublereal *vol) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>enthalpy_mass</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ad7a2e379d28c820190d681034479f75d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>intEnergy_mass</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ac81eb9d6a2eb5bce4e0ef1909734ac54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>entropy_mass</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a173c72a6a6be854f4901270df4510769</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>gibbs_mass</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a45541e287ba5524c3b4718af13454c48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>cp_mass</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a6470da927b809b4a74e8158df2ec092c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>cv_mass</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>aac4b16991b58e8b79ba77fd8c636d6bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>af51924111b2d115777e94fc71bcc86dd</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TPX</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a5a95360d8ebf90e0c5cda5edd578cdf6</anchor>
      <arglist>(doublereal t, doublereal p, const doublereal *x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TPX</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a3fbb3ad1fb3d6144b160208edbc8e691</anchor>
      <arglist>(doublereal t, doublereal p, const compositionMap &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TPX</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a5c77fe268eff2669c2443563c9d5e3a1</anchor>
      <arglist>(doublereal t, doublereal p, const std::string &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TPY</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a04a8874ad6466cd317805a9b7febe6f5</anchor>
      <arglist>(doublereal t, doublereal p, const doublereal *y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TPY</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a66e5b4ed717e502c9988d6e98412a11c</anchor>
      <arglist>(doublereal t, doublereal p, const compositionMap &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TPY</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a4f03951b73d195c01e22e36ead311595</anchor>
      <arglist>(doublereal t, doublereal p, const std::string &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TP</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a1a5bebf3c4bd81782b54a3761f82215e</anchor>
      <arglist>(doublereal t, doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_PX</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a71869df2bb3212799bc18c3fc842f53c</anchor>
      <arglist>(doublereal p, doublereal *x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_PY</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a0aa082c599e5e73c40791922e70cbb0a</anchor>
      <arglist>(doublereal p, doublereal *y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_HP</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a0d841cf33d6a03652dc1b8c5a1fa8b39</anchor>
      <arglist>(double h, double p, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_UV</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a1122d8ed8cb21c4f89499f0a205666ab</anchor>
      <arglist>(double u, double v, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_SP</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a9b4668013babc7cd22e7c0c8d3c2dd35</anchor>
      <arglist>(double s, double p, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_SV</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>af093205eee5fdcdaa229e46ae68849d0</anchor>
      <arglist>(double s, double v, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_ST</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a4b517940600940a8cdff71d6a1a40cdf</anchor>
      <arglist>(double s, double t, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TV</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a2c9eff5f97e6c90527ed4edf48d896e7</anchor>
      <arglist>(double t, double v, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_PV</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a30c50ccd39ed8377521293bdfe48af23</anchor>
      <arglist>(double p, double v, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_UP</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a922915e2daafaa0c940eb23586287832</anchor>
      <arglist>(double u, double p, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_VH</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>aebcabb1329d9f4ef516ce9016903aef0</anchor>
      <arglist>(double v, double h, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TH</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ab6ff7b75ea6fbbf6bf240c5214510e5e</anchor>
      <arglist>(double t, double h, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_SH</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a9e74a11fcdffc2a6471c084ae6ccc413</anchor>
      <arglist>(double s, double h, double tol=1e-9)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_RP</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>aacc071b92537ab52a0fbd3d4cb7aaa6e</anchor>
      <arglist>(doublereal rho, doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_RPX</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ac9bb1e011bb540ff358215b094218e61</anchor>
      <arglist>(doublereal rho, doublereal p, const doublereal *x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_RPX</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a7223be54d767ac5adc8e0967236206c7</anchor>
      <arglist>(doublereal rho, doublereal p, const compositionMap &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_RPX</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>afeea00211b80fc92ff8fd693a635bf6a</anchor>
      <arglist>(doublereal rho, doublereal p, const std::string &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_RPY</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a53b44518d63769b9d1b3707648c05306</anchor>
      <arglist>(doublereal rho, doublereal p, const doublereal *y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_RPY</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a85f5242d4139c48039554b5a39a542a8</anchor>
      <arglist>(doublereal rho, doublereal p, const compositionMap &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_RPY</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a2f541724edb5b60236db2474a68d8176</anchor>
      <arglist>(doublereal rho, doublereal p, const std::string &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>equilibrate</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>gaf658f6d2afb439d254b43166f270861e</anchor>
      <arglist>(const std::string &amp;XY, const std::string &amp;solver=&quot;auto&quot;, double rtol=1e-9, int max_steps=50000, int max_iter=100, int estimate_equil=0, int log_level=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setToEquilState</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>gabff9a8a035d3a59f00458ff8fca4f8c9</anchor>
      <arglist>(const doublereal *lambda_RT)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setElementPotentials</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>gaf49509a8378cb3502af4daf5ab7c66d7</anchor>
      <arglist>(const vector_fp &amp;lambda)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getElementPotentials</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>ga55702dfce5c6f43215708be9e9e589d6</anchor>
      <arglist>(doublereal *lambda) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>compatibleWithMultiPhase</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>ga6107e1b1da2244719399c92776d5591c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critTemperature</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a2bbd06ee23a1716ecc465eabded27ad4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critPressure</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a1bff908f26278a54ff14064c937e1f4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critVolume</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a45d366e7f06f6f4b75dc3f70f6a69ac4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critCompressibility</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a8557ddbaab01240041d4694ec802073c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critDensity</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a54159a4110b74430a79e35c268fbef3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>satTemperature</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a98c9e5a3862a4c4d2ace7ccd3e8bb1c9</anchor>
      <arglist>(doublereal p) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>satPressure</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a30cc9db0935dde804b06cd9d6a0f6a36</anchor>
      <arglist>(doublereal t)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>vaporFraction</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>afe9d105513e1532cb498a63041c6f3b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_Tsat</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a302ae2f94923bc9372359e3e35e5dd65</anchor>
      <arglist>(doublereal t, doublereal x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_Psat</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ac64e4d2b3f76fce1990a147ede393761</anchor>
      <arglist>(doublereal p, doublereal x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>modifySpecies</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a48f12f73d636ca557009cbc4a6bf9e29</anchor>
      <arglist>(size_t k, shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveSpeciesData</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a8dce160f1dc3530d425e13160dc288f3</anchor>
      <arglist>(const size_t k, const XML_Node *const data)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; const XML_Node * &gt; &amp;</type>
      <name>speciesData</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a615ade10c850ce2ff3becd77e14eda3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MultiSpeciesThermo &amp;</type>
      <name>speciesThermo</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a9181b0d324266a40b95be2e8b75c5c90</anchor>
      <arglist>(int k=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoFile</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a40289530956dbcfe789a5b60ac3fa950</anchor>
      <arglist>(const std::string &amp;inputFile, const std::string &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermoXML</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a42dab55c3f7b95e3fc87507816541e87</anchor>
      <arglist>(XML_Node &amp;phaseNode, const std::string &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParameters</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ad4ac746210fdc6259486bf5f62b5558f</anchor>
      <arglist>(int n, doublereal *const c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getParameters</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>af5e81039b1f040b1d66d29dc24e3d22a</anchor>
      <arglist>(int &amp;n, doublereal *const c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>af03a726f2f5d141fc1ec3c6a9aed03a7</anchor>
      <arglist>(const XML_Node &amp;eosdata)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStateFromXML</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a01e155d014f6e4b4fd3121fda565fc7d</anchor>
      <arglist>(const XML_Node &amp;state)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invalidateCache</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ae4f5daed0983e1d3bfb144a5078d75cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffds</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>ad603addd88cd4b998546cf7bc95ad807</anchor>
      <arglist>(const doublereal dTds, const doublereal *const dXds, doublereal *dlnActCoeffds) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnX_diag</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a8c63c7628168ce337877808119f6c9aa</anchor>
      <arglist>(doublereal *dlnActCoeffdlnX_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN_diag</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a4ec20967d5c97e5cb56c5db00c76e1e8</anchor>
      <arglist>(doublereal *dlnActCoeffdlnN_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a4a2e93544bb41c14ed880a4595e110cc</anchor>
      <arglist>(const size_t ld, doublereal *const dlnActCoeffdlnN)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>report</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>a046799f2a038fddf13b5752cd0cc7117</anchor>
      <arglist>(bool show_thermo=true, doublereal threshold=-1e-14) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reportCSV</name>
      <anchorfile>classCantera_1_1ThermoPhase.html</anchorfile>
      <anchor>adfb71ccfeca322f3a2a25e5f7274cab4</anchor>
      <arglist>(std::ofstream &amp;csvFile) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ThirdBody</name>
    <filename>classCantera_1_1ThirdBody.html</filename>
    <member kind="function">
      <type>double</type>
      <name>efficiency</name>
      <anchorfile>classCantera_1_1ThirdBody.html</anchorfile>
      <anchor>a556bdef85b205bcb8d75b576f7e445ee</anchor>
      <arglist>(const std::string &amp;k) const</arglist>
    </member>
    <member kind="variable">
      <type>Composition</type>
      <name>efficiencies</name>
      <anchorfile>classCantera_1_1ThirdBody.html</anchorfile>
      <anchor>a80a264cd6db5db7daf9ace16f437663c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>default_efficiency</name>
      <anchorfile>classCantera_1_1ThirdBody.html</anchorfile>
      <anchor>a450f2a1ea034c9f1b87672a5fd5f3048</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ThirdBodyCalc</name>
    <filename>classCantera_1_1ThirdBodyCalc.html</filename>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_reaction_index</name>
      <anchorfile>classCantera_1_1ThirdBodyCalc.html</anchorfile>
      <anchor>a1c878edf329ff000b24453d6baf7551a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::vector&lt; size_t &gt; &gt;</type>
      <name>m_species</name>
      <anchorfile>classCantera_1_1ThirdBodyCalc.html</anchorfile>
      <anchor>af792449c97ea0dfd15c9c2ef3dac6e85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; vector_fp &gt;</type>
      <name>m_eff</name>
      <anchorfile>classCantera_1_1ThirdBodyCalc.html</anchorfile>
      <anchor>a794279e0a89e498871885adc335d756e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_default</name>
      <anchorfile>classCantera_1_1ThirdBodyCalc.html</anchorfile>
      <anchor>a688d591b37fc32d769335123e7f01cc5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ThreeBodyReaction</name>
    <filename>classCantera_1_1ThreeBodyReaction.html</filename>
    <base>Cantera::ElementaryReaction</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>reactantString</name>
      <anchorfile>classCantera_1_1ThreeBodyReaction.html</anchorfile>
      <anchor>a27cd9a34920a63f5e32b432aa406d85a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>productString</name>
      <anchorfile>classCantera_1_1ThreeBodyReaction.html</anchorfile>
      <anchor>a788c295af7341bdb50e6b88d6970dab8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>ThirdBody</type>
      <name>third_body</name>
      <anchorfile>classCantera_1_1ThreeBodyReaction.html</anchorfile>
      <anchor>a9f6436ba65cfccb3a6eda66ba088a5b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cantera::timesConstant</name>
    <filename>structCantera_1_1timesConstant.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>timesConstant</name>
      <anchorfile>structCantera_1_1timesConstant.html</anchorfile>
      <anchor>a5fed2777fc5b3e7a99764d53fc2226a1</anchor>
      <arglist>(T c)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>operator()</name>
      <anchorfile>structCantera_1_1timesConstant.html</anchorfile>
      <anchor>af7e6381021f9cc84649c648e5f34cdb7</anchor>
      <arglist>(T x)</arglist>
    </member>
    <member kind="variable">
      <type>T</type>
      <name>m_c</name>
      <anchorfile>structCantera_1_1timesConstant.html</anchorfile>
      <anchor>ac460c4a9943a31ce4b4a9326045e86e1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::TimesConstant1</name>
    <filename>classCantera_1_1TimesConstant1.html</filename>
    <base>Cantera::Func1</base>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>duplicate</name>
      <anchorfile>classCantera_1_1TimesConstant1.html</anchorfile>
      <anchor>a4aa86693947c32c642a3d6ee556a8eed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>eval</name>
      <anchorfile>classCantera_1_1TimesConstant1.html</anchorfile>
      <anchor>acd39f99891dcb367c57588ec8c79b0c6</anchor>
      <arglist>(doublereal t) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Func1 &amp;</type>
      <name>derivative</name>
      <anchorfile>classCantera_1_1TimesConstant1.html</anchorfile>
      <anchor>a79b93814a3999ee82ef932b9b861d9b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>order</name>
      <anchorfile>classCantera_1_1TimesConstant1.html</anchorfile>
      <anchor>a177cd31efbfb81626a24dea53fcabfe8</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Tortuosity</name>
    <filename>classCantera_1_1Tortuosity.html</filename>
    <member kind="function">
      <type></type>
      <name>Tortuosity</name>
      <anchorfile>classCantera_1_1Tortuosity.html</anchorfile>
      <anchor>a503c840165d6935947cb010572a7ee9b</anchor>
      <arglist>(double setPower=1.5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>tortuosityFactor</name>
      <anchorfile>classCantera_1_1Tortuosity.html</anchorfile>
      <anchor>a2aa4a64c958869dac0812f338c993c7e</anchor>
      <arglist>(double porosity)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>McMillan</name>
      <anchorfile>classCantera_1_1Tortuosity.html</anchorfile>
      <anchor>a290c6c80873a3b7c5209f8f39e3755d5</anchor>
      <arglist>(double porosity)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>expBrug_</name>
      <anchorfile>classCantera_1_1Tortuosity.html</anchorfile>
      <anchor>a1526364824e3d4595e278a867256df83</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::TortuosityMaxwell</name>
    <filename>classCantera_1_1TortuosityMaxwell.html</filename>
    <base>Cantera::Tortuosity</base>
    <member kind="function">
      <type></type>
      <name>TortuosityMaxwell</name>
      <anchorfile>classCantera_1_1TortuosityMaxwell.html</anchorfile>
      <anchor>a7afee411e43d57df285c38301f684127</anchor>
      <arglist>(double relativeConductivites=0.0)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>tortuosityFactor</name>
      <anchorfile>classCantera_1_1TortuosityMaxwell.html</anchorfile>
      <anchor>a1c7c19a5987b2d94d1e7a59f017a4fb1</anchor>
      <arglist>(double porosity)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>McMillan</name>
      <anchorfile>classCantera_1_1TortuosityMaxwell.html</anchorfile>
      <anchor>adc3074613686ac9a5c4c6ee4eb195b83</anchor>
      <arglist>(double porosity)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>relativeConductivites_</name>
      <anchorfile>classCantera_1_1TortuosityMaxwell.html</anchorfile>
      <anchor>ae73437e33a787372bdb54d859582f75f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::TortuosityPercolation</name>
    <filename>classCantera_1_1TortuosityPercolation.html</filename>
    <base>Cantera::Tortuosity</base>
    <member kind="function">
      <type></type>
      <name>TortuosityPercolation</name>
      <anchorfile>classCantera_1_1TortuosityPercolation.html</anchorfile>
      <anchor>ad59937560d80d3a496897c0bdc91cbb3</anchor>
      <arglist>(double percolationThreshold=0.4, double conductivityExponent=2.0)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>tortuosityFactor</name>
      <anchorfile>classCantera_1_1TortuosityPercolation.html</anchorfile>
      <anchor>a1c7c19a5987b2d94d1e7a59f017a4fb1</anchor>
      <arglist>(double porosity)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>McMillan</name>
      <anchorfile>classCantera_1_1TortuosityPercolation.html</anchorfile>
      <anchor>adc3074613686ac9a5c4c6ee4eb195b83</anchor>
      <arglist>(double porosity)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>percolationThreshold_</name>
      <anchorfile>classCantera_1_1TortuosityPercolation.html</anchorfile>
      <anchor>a159c05d46d2e9de94bb79ab411ce6ad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>conductivityExponent_</name>
      <anchorfile>classCantera_1_1TortuosityPercolation.html</anchorfile>
      <anchor>a93046a67e4388cc8af88dbc5d9a60658</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Transport</name>
    <filename>classCantera_1_1Transport.html</filename>
    <member kind="function">
      <type></type>
      <name>Transport</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a71b4755bd841b06d396657348b16cbed</anchor>
      <arglist>(thermo_t *thermo=0, size_t ndim=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>transportType</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>aaa616493275cb1d7fb3ba980ec3cd467</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>thermo_t &amp;</type>
      <name>thermo</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a4a361c78a4b13dea05c58077fc74c9b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ready</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>ae90016cb52feed44a68aa3004189e0e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNDim</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a0c3b6a174aea2bc8652f7adfc32b1349</anchor>
      <arglist>(const int ndim)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nDim</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a5783610f13bff957c2e70f55a289b6e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkSpeciesIndex</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a1b9b39ffa71f92452cc4c8c0f419e3a5</anchor>
      <arglist>(size_t k) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkSpeciesArraySize</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>acb8933c8503b6e66aedd262054a446a6</anchor>
      <arglist>(size_t kk) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>getElectricConduct</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>ae253e78d14ba780b8540ac897dde9676</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getElectricCurrent</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>ac9155003a8fbe6a25fdd0bc20485290e</anchor>
      <arglist>(int ndim, const doublereal *grad_T, int ldx, const doublereal *grad_X, int ldf, const doublereal *grad_V, doublereal *current)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesFluxes</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>ac10f3352c5356776215dfdad3fb61e40</anchor>
      <arglist>(size_t ndim, const doublereal *const grad_T, size_t ldx, const doublereal *const grad_X, size_t ldf, doublereal *const fluxes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesFluxesES</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a78b1512af8c324e62ff96fc4f0f89ba7</anchor>
      <arglist>(size_t ndim, const doublereal *grad_T, size_t ldx, const doublereal *grad_X, size_t ldf, const doublereal *grad_Phi, doublereal *fluxes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesVdiff</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>afefcfb056f3232fe3323e3b74c18a685</anchor>
      <arglist>(size_t ndim, const doublereal *grad_T, int ldx, const doublereal *grad_X, int ldf, doublereal *Vdiff)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesVdiffES</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a24bfb5de0b86fa3ce18a03273981ee46</anchor>
      <arglist>(size_t ndim, const doublereal *grad_T, int ldx, const doublereal *grad_X, int ldf, const doublereal *grad_Phi, doublereal *Vdiff)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMolarFluxes</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a6bb18648c07925ed712ec2fe022f1678</anchor>
      <arglist>(const doublereal *const state1, const doublereal *const state2, const doublereal delta, doublereal *const cfluxes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMassFluxes</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a0bb414e0ef31a7ef91246df11359ea2f</anchor>
      <arglist>(const doublereal *state1, const doublereal *state2, doublereal delta, doublereal *mfluxes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getThermalDiffCoeffs</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a30058d0b32b9a27a04db77682829f17b</anchor>
      <arglist>(doublereal *const dt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getBinaryDiffCoeffs</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a8c1facc59f152fa8df1a376138908585</anchor>
      <arglist>(const size_t ld, doublereal *const d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMultiDiffCoeffs</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>ab38fafea35e5a8107bd269a33137c357</anchor>
      <arglist>(const size_t ld, doublereal *const d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMixDiffCoeffs</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>ae2ef79483be55a88681c052a43c51206</anchor>
      <arglist>(doublereal *const d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMixDiffCoeffsMole</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a0781edfc5aa035aac74f2781928d2265</anchor>
      <arglist>(doublereal *const d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMixDiffCoeffsMass</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a77aa4a8dd4cd35fc5e4da709c6406366</anchor>
      <arglist>(doublereal *const d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParameters</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>ab4803f8e733e93a8532effff50d8a274</anchor>
      <arglist>(const int type, const int k, const doublereal *const p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityBasis</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>abf9452753eea38fc8994ba129c53e7eb</anchor>
      <arglist>(VelocityBasis ivb)</arglist>
    </member>
    <member kind="function">
      <type>VelocityBasis</type>
      <name>getVelocityBasis</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>aecfd1030a85b0348004f476be067d4ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>viscosity</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>aa4983e2ade95ac1f8c993b60898774c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesViscosities</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>ab9b5169b554e676608b84f5a236422e0</anchor>
      <arglist>(doublereal *const visc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>bulkViscosity</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a4607c91cbc5c32bea10a68c5d46011fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>ionConductivity</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a4ea9bd7df0dba2ecc59145b7ddb9f40c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesIonConductivity</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a79ac9cff1e9ce98ad10b71a47bd1134f</anchor>
      <arglist>(doublereal *const ionCond)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>mobilityRatio</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a93bdebe0a9bc03cbf59535e55ec01f5f</anchor>
      <arglist>(double *mobRat)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesMobilityRatio</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a92aa503670e1bef449e041b3de9732f1</anchor>
      <arglist>(double **mobRat)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selfDiffusion</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a64e0b0307da76e440c8a08d7a9e7d19e</anchor>
      <arglist>(doublereal *const selfDiff)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesSelfDiffusion</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a5ad6ce20fd902c558bd1361afa8958b0</anchor>
      <arglist>(double **selfDiff)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalConductivity</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>ace0fc9ed2cc308a4f53b349d37273ac9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>electricalConductivity</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a7bfbdb04cd8e7a88c37fd3fd1090410c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMobilities</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a04647caee0889db86a0d916dcc6250f3</anchor>
      <arglist>(doublereal *const mobil_e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFluidMobilities</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a20b9c4c26e0dc8fcc5a84e383ccad04f</anchor>
      <arglist>(doublereal *const mobil_f)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>thermo_t *</type>
      <name>m_thermo</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a97f743952571f2de68e94e2803f1f84a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_ready</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a23377619c64713a3583174e10a91c8be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_nsp</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>ab3e6c2c66c42af05f67bbe604928bd21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>m_nDim</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a1b133a38f0f12c50a56555bc170d3157</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_velocityBasis</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>aced6892d3eb257c5e5c9bbef5f745883</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>viscosity</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>aa4983e2ade95ac1f8c993b60898774c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesViscosities</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>ab9b5169b554e676608b84f5a236422e0</anchor>
      <arglist>(doublereal *const visc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>bulkViscosity</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a4607c91cbc5c32bea10a68c5d46011fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>ionConductivity</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a4ea9bd7df0dba2ecc59145b7ddb9f40c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesIonConductivity</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a79ac9cff1e9ce98ad10b71a47bd1134f</anchor>
      <arglist>(doublereal *const ionCond)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>mobilityRatio</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a93bdebe0a9bc03cbf59535e55ec01f5f</anchor>
      <arglist>(double *mobRat)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesMobilityRatio</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a92aa503670e1bef449e041b3de9732f1</anchor>
      <arglist>(double **mobRat)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selfDiffusion</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a64e0b0307da76e440c8a08d7a9e7d19e</anchor>
      <arglist>(doublereal *const selfDiff)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpeciesSelfDiffusion</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a5ad6ce20fd902c558bd1361afa8958b0</anchor>
      <arglist>(double **selfDiff)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalConductivity</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>ace0fc9ed2cc308a4f53b349d37273ac9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>electricalConductivity</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a7bfbdb04cd8e7a88c37fd3fd1090410c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMobilities</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a04647caee0889db86a0d916dcc6250f3</anchor>
      <arglist>(doublereal *const mobil_e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFluidMobilities</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a20b9c4c26e0dc8fcc5a84e383ccad04f</anchor>
      <arglist>(doublereal *const mobil_f)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a38ee6fae5045a2aec230258dee1250c9</anchor>
      <arglist>(thermo_t *thermo, int mode=0, int log_level=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>initLiquid</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>ae07abbe6b7f1aee73ef7e96de34ae62c</anchor>
      <arglist>(LiquidTransportParams &amp;tr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>initSolid</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a64922accb780dc9109d97fc8406289bb</anchor>
      <arglist>(SolidTransportData &amp;tr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThermo</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>aeb4a46210d4688a2b0e1b9290c867c40</anchor>
      <arglist>(thermo_t &amp;thermo)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>finalize</name>
      <anchorfile>classCantera_1_1Transport.html</anchorfile>
      <anchor>a32d626626eee0bc4ade146973f6abb1c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::TransportData</name>
    <filename>classCantera_1_1TransportData.html</filename>
  </compound>
  <compound kind="class">
    <name>Cantera::TransportDBError</name>
    <filename>classCantera_1_1TransportDBError.html</filename>
    <base>Cantera::CanteraError</base>
    <member kind="function">
      <type></type>
      <name>TransportDBError</name>
      <anchorfile>classCantera_1_1TransportDBError.html</anchorfile>
      <anchor>a2e940eab3bb33ea6b2ffc92a85b3025e</anchor>
      <arglist>(size_t linenum, const std::string &amp;msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::TransportFactory</name>
    <filename>classCantera_1_1TransportFactory.html</filename>
    <base>Factory&lt; Transport &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deleteFactory</name>
      <anchorfile>classCantera_1_1TransportFactory.html</anchorfile>
      <anchor>a51e6e192a3c247708bbeb5bd10f51c1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LTPspecies *</type>
      <name>newLTP</name>
      <anchorfile>classCantera_1_1TransportFactory.html</anchorfile>
      <anchor>a221c3c38b963344fa7d58f39b4264778</anchor>
      <arglist>(const XML_Node &amp;trNode, const std::string &amp;name, TransportPropertyType tp_ind, thermo_t *thermo)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LiquidTranInteraction *</type>
      <name>newLTI</name>
      <anchorfile>classCantera_1_1TransportFactory.html</anchorfile>
      <anchor>a7bc10c9100d5a2508ae96bdcaef0b1ad</anchor>
      <arglist>(const XML_Node &amp;trNode, TransportPropertyType tp_ind, LiquidTransportParams &amp;trParam)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Transport *</type>
      <name>newTransport</name>
      <anchorfile>classCantera_1_1TransportFactory.html</anchorfile>
      <anchor>ad0cc8dd8f9319bcf66d14fac1b9c020d</anchor>
      <arglist>(const std::string &amp;model, thermo_t *thermo, int log_level=0, int ndim=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Transport *</type>
      <name>newTransport</name>
      <anchorfile>classCantera_1_1TransportFactory.html</anchorfile>
      <anchor>ab32dc80714db721ad939f8a594c34dae</anchor>
      <arglist>(thermo_t *thermo, int log_level=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initLiquidTransport</name>
      <anchorfile>classCantera_1_1TransportFactory.html</anchorfile>
      <anchor>a0ef8ca2d03dbf1d71556af96e73ea637</anchor>
      <arglist>(Transport *tr, thermo_t *thermo, int log_level=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TransportFactory *</type>
      <name>factory</name>
      <anchorfile>classCantera_1_1TransportFactory.html</anchorfile>
      <anchor>aca3ab8f89391dcf747b9e6cc2d776bff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>initSolidTransport</name>
      <anchorfile>classCantera_1_1TransportFactory.html</anchorfile>
      <anchor>a8538f13576fa1ec4f5409dbb1295d090</anchor>
      <arglist>(Transport *tr, thermo_t *thermo, int log_level=0)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>TransportFactory</name>
      <anchorfile>classCantera_1_1TransportFactory.html</anchorfile>
      <anchor>ab6bd614c2fbec350645fa0bdba3aece7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>getLiquidSpeciesTransportData</name>
      <anchorfile>classCantera_1_1TransportFactory.html</anchorfile>
      <anchor>a980d6d2936dca3494aa60615e4b4c71d</anchor>
      <arglist>(const std::vector&lt; const XML_Node *&gt; &amp;db, XML_Node &amp;log, const std::vector&lt; std::string &gt; &amp;names, LiquidTransportParams &amp;tr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>getLiquidInteractionsTransportData</name>
      <anchorfile>classCantera_1_1TransportFactory.html</anchorfile>
      <anchor>a1c55bb7a2ef171100869a7cb02ba7cbe</anchor>
      <arglist>(const XML_Node &amp;phaseTran_db, XML_Node &amp;log, const std::vector&lt; std::string &gt; &amp;names, LiquidTransportParams &amp;tr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>getSolidTransportData</name>
      <anchorfile>classCantera_1_1TransportFactory.html</anchorfile>
      <anchor>a778f3b0d796fb222abd2124941f129fb</anchor>
      <arglist>(const XML_Node &amp;transportNode, XML_Node &amp;log, const std::string phaseName, SolidTransportData &amp;tr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setupLiquidTransport</name>
      <anchorfile>classCantera_1_1TransportFactory.html</anchorfile>
      <anchor>abf00026f20db09a1deb8b933ff4bcdc2</anchor>
      <arglist>(thermo_t *thermo, int log_level, LiquidTransportParams &amp;trParam)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setupSolidTransport</name>
      <anchorfile>classCantera_1_1TransportFactory.html</anchorfile>
      <anchor>a94003e48e80bd6f33dba9d3187e4d25f</anchor>
      <arglist>(thermo_t *thermo, int log_level, SolidTransportData &amp;trParam)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, TransportPropertyType &gt;</type>
      <name>m_tranPropMap</name>
      <anchorfile>classCantera_1_1TransportFactory.html</anchorfile>
      <anchor>a18195e907847c562cd1a9d606506e56f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, LTPTemperatureDependenceType &gt;</type>
      <name>m_LTRmodelMap</name>
      <anchorfile>classCantera_1_1TransportFactory.html</anchorfile>
      <anchor>a2785f052a557ccebf211792f7b18d23b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, LiquidTranMixingModel &gt;</type>
      <name>m_LTImodelMap</name>
      <anchorfile>classCantera_1_1TransportFactory.html</anchorfile>
      <anchor>a61299c1eef927b4706f652e5fd2979b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, bool &gt;</type>
      <name>m_CK_mode</name>
      <anchorfile>classCantera_1_1TransportFactory.html</anchorfile>
      <anchor>a6a0f59c1be685d23fe494b372c816ed2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static TransportFactory *</type>
      <name>s_factory</name>
      <anchorfile>classCantera_1_1TransportFactory.html</anchorfile>
      <anchor>a3a5c59d844c8128af9719847f4afc2f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::mutex</type>
      <name>transport_mutex</name>
      <anchorfile>classCantera_1_1TransportFactory.html</anchorfile>
      <anchor>aaa7efcfec87bc3bf68455d4cb9d0d708</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::TransportParams</name>
    <filename>classCantera_1_1TransportParams.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>nsp_</name>
      <anchorfile>classCantera_1_1TransportParams.html</anchorfile>
      <anchor>ad50f1517dbd4219a0783506741a86157</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>thermo_t *</type>
      <name>thermo</name>
      <anchorfile>classCantera_1_1TransportParams.html</anchorfile>
      <anchor>a49aa74a8909938341eb32e42af6ed80e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>mw</name>
      <anchorfile>classCantera_1_1TransportParams.html</anchorfile>
      <anchor>abbc0d32844bddbdcfaf46400ef068b53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VelocityBasis</type>
      <name>velocityBasis_</name>
      <anchorfile>classCantera_1_1TransportParams.html</anchorfile>
      <anchor>ae5500df2d6abd4792d35e62a8c59e4dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>doublereal</type>
      <name>tmax</name>
      <anchorfile>classCantera_1_1TransportParams.html</anchorfile>
      <anchor>ace862c291d953cb6dd840d18df428ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>doublereal</type>
      <name>tmin</name>
      <anchorfile>classCantera_1_1TransportParams.html</anchorfile>
      <anchor>a7dc550c809fc77e7c7317c3d936c6baa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mode_</name>
      <anchorfile>classCantera_1_1TransportParams.html</anchorfile>
      <anchor>accb821e0d9a39a87dc9757268afc1258</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>log_level</name>
      <anchorfile>classCantera_1_1TransportParams.html</anchorfile>
      <anchor>ab5a71c2541c377b3d5b34fdb35964c2e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Troe</name>
    <filename>classCantera_1_1Troe.html</filename>
    <base>Cantera::Falloff</base>
    <member kind="function">
      <type></type>
      <name>Troe</name>
      <anchorfile>classCantera_1_1Troe.html</anchorfile>
      <anchor>ade7041c7ea578d71d729d3a2ea933583</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classCantera_1_1Troe.html</anchorfile>
      <anchor>a7ac06e6a12e196d182caea2dcd6b9963</anchor>
      <arglist>(const vector_fp &amp;c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTemp</name>
      <anchorfile>classCantera_1_1Troe.html</anchorfile>
      <anchor>a2ebb4aa6fbcba40cf6b9c06d22e0ee92</anchor>
      <arglist>(doublereal T, doublereal *work) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>F</name>
      <anchorfile>classCantera_1_1Troe.html</anchorfile>
      <anchor>aad37dda9f1125936a1372a206c8e58cd</anchor>
      <arglist>(doublereal pr, const doublereal *work) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>workSize</name>
      <anchorfile>classCantera_1_1Troe.html</anchorfile>
      <anchor>acc2e7aaf281139ac48852aa6a59ab1d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getType</name>
      <anchorfile>classCantera_1_1Troe.html</anchorfile>
      <anchor>a9f9971257c55cdbf47dedf35a6cb2695</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>nParameters</name>
      <anchorfile>classCantera_1_1Troe.html</anchorfile>
      <anchor>a1b106ba0179505313ae594098e405868</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getParameters</name>
      <anchorfile>classCantera_1_1Troe.html</anchorfile>
      <anchor>a7889728a3e9c9cadba9d442cfa09a859</anchor>
      <arglist>(double *params) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_a</name>
      <anchorfile>classCantera_1_1Troe.html</anchorfile>
      <anchor>af2bdd640938eeaa9b9b36516a8964eb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_rt3</name>
      <anchorfile>classCantera_1_1Troe.html</anchorfile>
      <anchor>acc39af4a327c4ba1e53bac12f84098a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_rt1</name>
      <anchorfile>classCantera_1_1Troe.html</anchorfile>
      <anchor>ae0c9304fe29b4639614b04d6de96e68b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_t2</name>
      <anchorfile>classCantera_1_1Troe.html</anchorfile>
      <anchor>a8bb70a5426ecb2f5d5043a0efaffd779</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Unit</name>
    <filename>classCantera_1_1Unit.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Unit</name>
      <anchorfile>classCantera_1_1Unit.html</anchorfile>
      <anchor>a7fd8e7ff66519c7a55ac544d9723ca9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>actEnergyToSI</name>
      <anchorfile>classCantera_1_1Unit.html</anchorfile>
      <anchor>a121a86f1eba6b270ce2f517ad07e6951</anchor>
      <arglist>(const std::string &amp;units_)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>toSI</name>
      <anchorfile>classCantera_1_1Unit.html</anchorfile>
      <anchor>a39822d972d150d239596cfcb75714c0f</anchor>
      <arglist>(const std::string &amp;units_)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Unit *</type>
      <name>units</name>
      <anchorfile>classCantera_1_1Unit.html</anchorfile>
      <anchor>a0b07ae0475ecccad1200bb510fcdf7fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deleteUnit</name>
      <anchorfile>classCantera_1_1Unit.html</anchorfile>
      <anchor>a0248e5499ae0f5929508145dcda63918</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Unit</name>
      <anchorfile>classCantera_1_1Unit.html</anchorfile>
      <anchor>a89c74dd654607076a50d8adfc9451ab6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, doublereal &gt;</type>
      <name>m_u</name>
      <anchorfile>classCantera_1_1Unit.html</anchorfile>
      <anchor>a76fcc59a5cada90d8f9cfc583ea4e952</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, doublereal &gt;</type>
      <name>m_act_u</name>
      <anchorfile>classCantera_1_1Unit.html</anchorfile>
      <anchor>a7879358d452d07f2b860a91074b20a55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static Unit *</type>
      <name>s_u</name>
      <anchorfile>classCantera_1_1Unit.html</anchorfile>
      <anchor>a54a64b27ea135b341614af0acd365d8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::mutex</type>
      <name>units_mutex</name>
      <anchorfile>classCantera_1_1Unit.html</anchorfile>
      <anchor>a0d26918a5842c3c8547d7a71be26bf4c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::UnityLewisTransport</name>
    <filename>classCantera_1_1UnityLewisTransport.html</filename>
    <base>Cantera::MixTransport</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>transportType</name>
      <anchorfile>classCantera_1_1UnityLewisTransport.html</anchorfile>
      <anchor>aaa616493275cb1d7fb3ba980ec3cd467</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMixDiffCoeffs</name>
      <anchorfile>classCantera_1_1UnityLewisTransport.html</anchorfile>
      <anchor>a8222fc315c438ce509381bff365ce492</anchor>
      <arglist>(double *const d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMixDiffCoeffsMole</name>
      <anchorfile>classCantera_1_1UnityLewisTransport.html</anchorfile>
      <anchor>a59f424457d330a2799979095faf6715c</anchor>
      <arglist>(double *const d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMixDiffCoeffsMass</name>
      <anchorfile>classCantera_1_1UnityLewisTransport.html</anchorfile>
      <anchor>ac514a032995efd50f2944169850af836</anchor>
      <arglist>(double *const d)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::UnknownThermoPhaseModel</name>
    <filename>classCantera_1_1UnknownThermoPhaseModel.html</filename>
    <base>Cantera::CanteraError</base>
    <member kind="function">
      <type></type>
      <name>UnknownThermoPhaseModel</name>
      <anchorfile>classCantera_1_1UnknownThermoPhaseModel.html</anchorfile>
      <anchor>ab023c559be3664db4adc2f0f668b1a38</anchor>
      <arglist>(const std::string &amp;proc, const std::string &amp;thermoModel)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::ValueCache</name>
    <filename>classCantera_1_1ValueCache.html</filename>
    <member kind="function">
      <type>int</type>
      <name>getId</name>
      <anchorfile>classCantera_1_1ValueCache.html</anchorfile>
      <anchor>a67283be3f45257d1e0c474c563ebb6b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CachedScalar</type>
      <name>getScalar</name>
      <anchorfile>classCantera_1_1ValueCache.html</anchorfile>
      <anchor>a176c5bee0fb48b380603a8415ad188b4</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type>CachedArray</type>
      <name>getArray</name>
      <anchorfile>classCantera_1_1ValueCache.html</anchorfile>
      <anchor>a19df1cd81fa509f236b60ec1f8b688f3</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classCantera_1_1ValueCache.html</anchorfile>
      <anchor>ac8bb3912a3ce86b15842e79d0b421204</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; int, CachedValue&lt; double &gt; &gt;</type>
      <name>m_scalarCache</name>
      <anchorfile>classCantera_1_1ValueCache.html</anchorfile>
      <anchor>a84dd295bf74e18dac4557f1c34265be4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; int, CachedValue&lt; vector_fp &gt; &gt;</type>
      <name>m_arrayCache</name>
      <anchorfile>classCantera_1_1ValueCache.html</anchorfile>
      <anchor>a8647774ae3293164326a2cfc253b9fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static int</type>
      <name>m_last_id</name>
      <anchorfile>classCantera_1_1ValueCache.html</anchorfile>
      <anchor>af68db4dd1fb00cceb4cda083f53c480a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Valve</name>
    <filename>classCantera_1_1Valve.html</filename>
    <base>Cantera::FlowDevice</base>
    <member kind="function">
      <type>void</type>
      <name>setPressureCoeff</name>
      <anchorfile>classCantera_1_1Valve.html</anchorfile>
      <anchor>a9baea6dc5e7d61c3fcb3f94f00e87731</anchor>
      <arglist>(double c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateMassFlowRate</name>
      <anchorfile>classCantera_1_1Valve.html</anchorfile>
      <anchor>a3aad33ef5dfee5e6b1de346b4c3ad2ca</anchor>
      <arglist>(doublereal time)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::VCS_COUNTERS</name>
    <filename>classCantera_1_1VCS__COUNTERS.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>T_Its</name>
      <anchorfile>classCantera_1_1VCS__COUNTERS.html</anchorfile>
      <anchor>ad09d88ae7eb2a3ef4c19a1f40bbb097b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Its</name>
      <anchorfile>classCantera_1_1VCS__COUNTERS.html</anchorfile>
      <anchor>a1a7037b7b542d3d4572b7bab839c86b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>T_Basis_Opts</name>
      <anchorfile>classCantera_1_1VCS__COUNTERS.html</anchorfile>
      <anchor>a781d64323db51a7ca616228cfe0c3df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Basis_Opts</name>
      <anchorfile>classCantera_1_1VCS__COUNTERS.html</anchorfile>
      <anchor>aa2479cd1087a02ab9ec3217e769d5666</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>T_Calls_Inest</name>
      <anchorfile>classCantera_1_1VCS__COUNTERS.html</anchorfile>
      <anchor>a50bd1e7f1f4fd462bdf75f3b69d4806c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>T_Calls_vcs_TP</name>
      <anchorfile>classCantera_1_1VCS__COUNTERS.html</anchorfile>
      <anchor>ad4b23b5f8369b6f336db4f108bf1f035</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>T_Time_vcs_TP</name>
      <anchorfile>classCantera_1_1VCS__COUNTERS.html</anchorfile>
      <anchor>a78ef1a3139352e35647477e55cb73fc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>Time_vcs_TP</name>
      <anchorfile>classCantera_1_1VCS__COUNTERS.html</anchorfile>
      <anchor>ae3ac3fa8307237c196236405e405e808</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>T_Time_basopt</name>
      <anchorfile>classCantera_1_1VCS__COUNTERS.html</anchorfile>
      <anchor>a5d4aed474a7dcc454433aeebd319f027</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>Time_basopt</name>
      <anchorfile>classCantera_1_1VCS__COUNTERS.html</anchorfile>
      <anchor>ae166ab7db3b7da0107aeaccf7d0eac4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>T_Time_inest</name>
      <anchorfile>classCantera_1_1VCS__COUNTERS.html</anchorfile>
      <anchor>a620e7d1f271b4418a7fe39a875002964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>T_Time_vcs</name>
      <anchorfile>classCantera_1_1VCS__COUNTERS.html</anchorfile>
      <anchor>aca474d5b210d04bd98de7817375c0359</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::vcs_MultiPhaseEquil</name>
    <filename>classCantera_1_1vcs__MultiPhaseEquil.html</filename>
    <member kind="function">
      <type></type>
      <name>vcs_MultiPhaseEquil</name>
      <anchorfile>classCantera_1_1vcs__MultiPhaseEquil.html</anchorfile>
      <anchor>aa6c8f401d7c9696904f4101b1cf0c5c0</anchor>
      <arglist>(MultiPhase *mix, int printLvl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iterations</name>
      <anchorfile>classCantera_1_1vcs__MultiPhaseEquil.html</anchorfile>
      <anchor>a0f2e07109249b09e6d13d043f589837e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>equilibrate</name>
      <anchorfile>classCantera_1_1vcs__MultiPhaseEquil.html</anchorfile>
      <anchor>ac94260a47590c6d446b5b46230fbd903</anchor>
      <arglist>(int XY, int estimateEquil=0, int printLvl=0, doublereal err=1.0e-6, int maxsteps=VCS_MAXSTEPS, int loglevel=-99)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>equilibrate_TP</name>
      <anchorfile>classCantera_1_1vcs__MultiPhaseEquil.html</anchorfile>
      <anchor>ab2057122e84927083b1bde48bd5f85b0</anchor>
      <arglist>(int estimateEquil=0, int printLvl=0, doublereal err=1.0e-6, int maxsteps=VCS_MAXSTEPS, int loglevel=-99)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>equilibrate_HP</name>
      <anchorfile>classCantera_1_1vcs__MultiPhaseEquil.html</anchorfile>
      <anchor>a31bf498c69349a242e10ee5ff305885f</anchor>
      <arglist>(doublereal Htarget, int XY, double Tlow, double Thigh, int estimateEquil=0, int printLvl=0, doublereal err=1.0E-6, int maxsteps=VCS_MAXSTEPS, int loglevel=-99)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>equilibrate_SP</name>
      <anchorfile>classCantera_1_1vcs__MultiPhaseEquil.html</anchorfile>
      <anchor>ac381514fe7faf967737af2baf6ed28c0</anchor>
      <arglist>(doublereal Starget, double Tlow, double Thigh, int estimateEquil=0, int printLvl=0, doublereal err=1.0E-6, int maxsteps=VCS_MAXSTEPS, int loglevel=-99)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>equilibrate_TV</name>
      <anchorfile>classCantera_1_1vcs__MultiPhaseEquil.html</anchorfile>
      <anchor>adf610599d31ba1c75edc3788da7399ba</anchor>
      <arglist>(int XY, doublereal xtarget, int estimateEquil=0, int printLvl=0, doublereal err=1.0E-6, int maxsteps=VCS_MAXSTEPS, int logLevel=-99)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reportCSV</name>
      <anchorfile>classCantera_1_1vcs__MultiPhaseEquil.html</anchorfile>
      <anchor>a7e06d1909e6d649f0a54e9b473138c6a</anchor>
      <arglist>(const std::string &amp;reportFile)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_int</type>
      <name>m_order</name>
      <anchorfile>classCantera_1_1vcs__MultiPhaseEquil.html</anchorfile>
      <anchor>acffaf6458c4809bedd1d9e82b92650b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MultiPhase *</type>
      <name>m_mix</name>
      <anchorfile>classCantera_1_1vcs__MultiPhaseEquil.html</anchorfile>
      <anchor>af086703e55f657590e9b7c141c321546</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_printLvl</name>
      <anchorfile>classCantera_1_1vcs__MultiPhaseEquil.html</anchorfile>
      <anchor>ad837abcc12f657287b8067dfa599f94d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DenseMatrix</type>
      <name>m_N</name>
      <anchorfile>classCantera_1_1vcs__MultiPhaseEquil.html</anchorfile>
      <anchor>ad5a557e4db4f9a1a8090b4beff65f287</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_iter</name>
      <anchorfile>classCantera_1_1vcs__MultiPhaseEquil.html</anchorfile>
      <anchor>a70a7c49de571c61beffaa163c328474f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_int</type>
      <name>m_species</name>
      <anchorfile>classCantera_1_1vcs__MultiPhaseEquil.html</anchorfile>
      <anchor>ab3df205d990fe371795d8aceaf84c3fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>VCS_SOLVE</type>
      <name>m_vsolve</name>
      <anchorfile>classCantera_1_1vcs__MultiPhaseEquil.html</anchorfile>
      <anchor>a03d657b6801e4977930ec00245e92ba7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::VCS_SOLVE</name>
    <filename>classCantera_1_1VCS__SOLVE.html</filename>
    <member kind="function">
      <type></type>
      <name>VCS_SOLVE</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a09ca07d5cfc795db0664cb9e55616f72</anchor>
      <arglist>(MultiPhase *mphase, int printLvl=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vcs</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a9c1f380ab36f59202a4472668fd5d50a</anchor>
      <arglist>(int ipr, int ip1, int maxit)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vcs_solve_TP</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a94ea9b63a9361a418108074fea171160</anchor>
      <arglist>(int print_lvl, int printDetails, int maxit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vcs_reinsert_deleted</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a8be0b5eceb2c2ba4bff9a24c5c502e66</anchor>
      <arglist>(size_t kspec)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vcs_basopt</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a402b14a311afbb8d7bf99b907f62f2c1</anchor>
      <arglist>(const bool doJustComponents, double aw[], double sa[], double sm[], double ss[], double test, bool *const usedZeroedSpecies)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vcs_basisOptMax</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a4b2264ecf03cf467c6ae6a56b7b0e529</anchor>
      <arglist>(const double *const molNum, const size_t j, const size_t n)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vcs_species_type</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>aa26b78bd67544ebb42cfb8bd016c6b1b</anchor>
      <arglist>(const size_t kspec) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vcs_evaluate_speciesType</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>af5b85d7db5baa874178484df77f5874c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vcs_dfe</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>ada3508c1239f5f6d9e9b094880761ec7</anchor>
      <arglist>(const int stateCalc, const int ll, const size_t lbot, const size_t ltop)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vcs_updateVP</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a3a89cfc4a70a34214efd302cca2a8e76</anchor>
      <arglist>(const int stateCalc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vcs_popPhasePossible</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a5bca2a6c2f1913d286e34534e9b0842c</anchor>
      <arglist>(const size_t iphasePop) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vcs_popPhaseID</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a6c3a5674197ffa9f1b35bc6a91f37ef9</anchor>
      <arglist>(std::vector&lt; size_t &gt; &amp;phasePopPhaseIDs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vcs_popPhaseRxnStepSizes</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>ae4464af6f4439189e23e354a23e517f5</anchor>
      <arglist>(const size_t iphasePop)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>vcs_RxnStepSizes</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>ac71a98ad714494c8c8d073ec91ec321d</anchor>
      <arglist>(int &amp;forceComponentCalc, size_t &amp;kSpecial)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vcs_tmoles</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>acf8f1a6ca1f16d2d50823bde7a97c8df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vcs_deltag</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a23b4e37789f9a640f65420bc7c1023f5</anchor>
      <arglist>(const int L, const bool doDeleted, const int vcsState, const bool alterZeroedPhases=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vcs_switch_pos</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>ad047d6c4c06753bf2a54c15fcd78999c</anchor>
      <arglist>(const bool ifunc, const size_t k1, const size_t k2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vcs_phaseStabilityTest</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a51d9b333fe90440bc6b1c0e4eb0752fc</anchor>
      <arglist>(const size_t iph)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vcs_TP</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a5fb8cc14ccb3b9174771ca0271ef7dfb</anchor>
      <arglist>(int ipr, int ip1, int maxit, double T, double pres)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vcs_evalSS_TP</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a0c09cd9908d56e7eff64f570af4f3703</anchor>
      <arglist>(int ipr, int ip1, double Temp, double pres)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vcs_fePrep_TP</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>ae81fc0577079b140b508af0476fb1d51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vcs_VolTotal</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a2b91c1e77a29e61dbf00407f39d1f9bd</anchor>
      <arglist>(const double tkelvin, const double pres, const double w[], double volPM[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vcs_prep</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a409b92bb89205fdda5ef275155e8bfee</anchor>
      <arglist>(int printLvl)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vcs_elem_rearrange</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a2ec760b9b35494e0a1a4136480e3eda0</anchor>
      <arglist>(double *const aw, double *const sa, double *const sm, double *const ss)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vcs_switch_elem_pos</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>acdba706a71bd0be840d157898b1b7278</anchor>
      <arglist>(size_t ipos, size_t jpos)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vcs_Hessian_diag_adj</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a9d03af9dfadfcaed14f1b83607e9c632</anchor>
      <arglist>(size_t irxn, double hessianDiag_Ideal)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vcs_Hessian_actCoeff_diag</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>ac19c4d76b1fffb4884650846af277601</anchor>
      <arglist>(size_t irxn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vcs_CalcLnActCoeffJac</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a78e7e7ea8de984698da13e2273169fd1</anchor>
      <arglist>(const double *const moleSpeciesVCS)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vcs_report</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>aa70c330ed5ba6796ce958d1c401206ee</anchor>
      <arglist>(int iconv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vcs_elab</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a6756f83a97e97d30bb692eeea17126b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vcs_elabcheck</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>aba9b75e3d0c0c0e1d414b9e8835e6b4e</anchor>
      <arglist>(int ibound)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vcs_elabPhase</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a7f7e80cf9908aa6ca71c24eb6d30d762</anchor>
      <arglist>(size_t iphase, double *const elemAbundPhase)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vcs_elcorr</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a4571696f6dd33b6a011021908aab3e63</anchor>
      <arglist>(double aa[], double x[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vcs_inest_TP</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a11d4f4547ee0ffd2a596cc3bff59e14c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vcs_setMolesLinProg</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a6ebd5abfd3ce0784f4ea112e178e91bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vcs_Total_Gibbs</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a770386ac5518844873d461e9324c3b5c</anchor>
      <arglist>(double *w, double *fe, double *tPhMoles)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vcs_GibbsPhase</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a9d5842ef714bef766cd33e7bcf5bbdf8</anchor>
      <arglist>(size_t iphase, const double *const w, const double *const fe)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vcs_prob_update</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>ac645c862f0d10befeb01329e5783deda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vcs_prob_specifyFully</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>aa0629eb99766718bb4c657910966f23c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prob_report</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a67bcedbfca645d80cedfc55ab5887dfa</anchor>
      <arglist>(int print_lvl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPhaseElements</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a93f50491c8aff3391059bedd54b8ea83</anchor>
      <arglist>(vcs_VolPhase *volPhase)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>addOnePhaseSpecies</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a959433a6b20b671feab6ce6502e2c7a8</anchor>
      <arglist>(vcs_VolPhase *volPhase, size_t k, size_t kT)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>addElement</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>afb51e5bc8fbc635d52316e8358920f3e</anchor>
      <arglist>(const char *elNameNew, int elType, int elactive)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>disableTiming</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a5056a6163a3a409b7b27a9ec1388cdeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>m_printLvl</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>ad837abcc12f657287b8067dfa599f94d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>m_nsp</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>ab3e6c2c66c42af05f67bbe604928bd21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>m_nelem</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a353c48a7a65449ffb95702dd28ae3ce5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>m_numComponents</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a9e6d520cb531fecab3c56d34143da9c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>m_numRxnTot</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>ae5be853cff1e805c4beaf38a0b27ec50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>m_numSpeciesRdc</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a868bd0ac1cc95b4fa7c684db2fd26bcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>m_numRxnRdc</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a97c9e99c34ed245b87774b65dc1268d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>m_numRxnMinorZeroed</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a7939842cfde6862451f5c0c7f165c246</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>m_numPhases</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a05e817dc93a9e055d7bb64d578d1a6c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array2D</type>
      <name>m_formulaMatrix</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a90734d339e99a5ee24ce2fdb3abc96b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array2D</type>
      <name>m_stoichCoeffRxnMatrix</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a975fad41ff0af615d18a338ff1cd12fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_scSize</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a1e68e263544d7b1fb9b3b4491d978ff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_spSize</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>ab951f2f16fb221797abd5f81f74776f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_SSfeSpecies</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>ac969ea7954e58ab040a5debf6fc9e0ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_feSpecies_old</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>aa69f74a378a5091f4fa90bd35146b461</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_feSpecies_new</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a7db03aab251ea06255463e02f78a1fd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>m_doEstimateEquil</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a0863cbbf796994e74f2b14ffd16af7d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_molNumSpecies_old</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a4c4f79c4ac8c76cf2e73000c69867a74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_int</type>
      <name>m_speciesUnknownType</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a5d2d2561633fcbfa3367d4cb412d2cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array2D</type>
      <name>m_deltaMolNumPhase</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>acacb3d83c1a34dbd0f1735da0c00c484</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array2D</type>
      <name>m_phaseParticipation</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a4f45f794a2285cee0b33c94fb7e06b0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_phasePhi</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a132b45c1a5436e2829556d2630b548ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_molNumSpecies_new</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a542849c7b059d59057a842086de00729</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_deltaGRxn_new</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>ad35735a727aaa185f37b8e3d9a46243d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_deltaGRxn_old</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a5f7321f28cc72b677802662c3caef728</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_deltaGRxn_Deficient</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>ae89e83fd06c901f60fd727e041840b76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_deltaGRxn_tmp</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a5def14eb2f421558f26fd9723a1bbf50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_deltaMolNumSpecies</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>ac92c920975bbda0bfb74c41f7a5c7a5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_elemAbundances</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a5bcfa434f6f3f10a513406733d77ea5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_elemAbundancesGoal</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a8bd18e30a6f452f369d799e26ef93228</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m_totalMolNum</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>afe81e986d51ea2970026b4982db7ea1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_tPhaseMoles_old</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a80aee243b666acbc036f4b931df0ec52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_tPhaseMoles_new</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a7b91260bc6cc51967fa9f178499ade6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_TmpPhase</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>aefee5c86d2c82b93a32be9307acf8bef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_TmpPhase2</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a329724b6721978e1017a935dd1e6d32a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_deltaPhaseMoles</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a924378b1c1ae390d24186f0bd6f7866e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m_temperature</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>aefb45446db58e50c0ac52d6dd495f761</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m_pressurePA</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>aa2c901ec6f0370acdab2e846c7add228</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>TPhInertMoles</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a8c26cfdad4887ac9e8763d91e947d0ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m_tolmaj</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>af2462770791997dadeddf88ed852199d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m_tolmin</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>ab268c78a789fa53bfdcf2ed0fb9df5b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m_tolmaj2</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a279fb4015420eef689d1df7bc98445fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m_tolmin2</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a60ce81ee5f48f26e22ddc2b541a5b07b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_speciesMapIndex</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>acb3fe2f25da3f87dd0c8376d75b87c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_speciesLocalPhaseIndex</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a95229f1af52c71b4bfa8710fce63b4cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_elementMapIndex</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>abd78b2765d2308633b6920a842311163</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_indexRxnToSpecies</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a9057d4c557194fb1055e26fb7e64036c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_int</type>
      <name>m_speciesStatus</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a3e1fc28588ecf58af26a96c61886074d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_phaseID</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a8de97dbc4083ca5a17bb5c5b15d96e72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; char &gt;</type>
      <name>m_SSPhase</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>aacbbb79e1250dd60028a1eb701faf379</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_speciesName</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a2d305b5f2eba568cb7d6b10af29d65a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_elementName</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>af7ae1153798336f079134d40aff0ea8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_int</type>
      <name>m_elType</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a3388c874bc20b93b3d76df6db22de711</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_int</type>
      <name>m_elementActive</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>aa77efcffc9b61143925c985ad092e7ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::unique_ptr&lt; vcs_VolPhase &gt; &gt;</type>
      <name>m_VolPhaseList</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>ab758df097d2839f07d929dd07f5899f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_int</type>
      <name>m_actConventionSpecies</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a45bbe079f056b921bac26d62301a4297</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_int</type>
      <name>m_phaseActConvention</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>ae2019443f722fa4517e76bd68bf8a5f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_lnMnaughtSpecies</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>ada3fc0bffa9fafcb51fe33f7b5b727ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_actCoeffSpecies_new</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>af46e1620212274e12613f4241f2a92c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_actCoeffSpecies_old</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>acdfed29fde4b5538078aeaf217048835</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array2D</type>
      <name>m_np_dLnActCoeffdMolNum</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a31dfaa7cb41655bc22ba7677484ed815</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_wtSpecies</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a91564c9868ff3ff9337d7965daf5cd9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_chargeSpecies</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>aa634101f880f7344c1e8a08cef7c92e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::unique_ptr&lt; VCS_SPECIES_THERMO &gt; &gt;</type>
      <name>m_speciesThermoList</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a9c473b4ccf0124636c751b68f0a09067</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>m_useActCoeffJac</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a37bb620f56f352c084b462e155beb8d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m_totalVol</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a3aaaba92eb6df2eb51b110e91af83220</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>m_PMVolumeSpecies</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>ad21e59ab29abfd8803b88ae567e8fd31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m_Faraday_dim</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>aab9940812ce8ca3c2485cab904832e26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VCS_COUNTERS *</type>
      <name>m_VCount</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a98425aab8639d7a2b9194c8b214f2c58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>m_debug_print_lvl</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a8a5d40dc389c9d4ef962fbdd064ae8f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>m_timing_print_lvl</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a6bf21dce2fd5817770dccb3ec81ebdd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>vcs_zero_species</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>ac340d345da2dfb563c2948c40bb4cb35</anchor>
      <arglist>(const size_t kspec)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>vcs_delete_species</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a8806c5fae7d4dbe1d7495df5ed5fcb05</anchor>
      <arglist>(const size_t kspec)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>vcs_delete_multiphase</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>ac026bb88bf1ae76e02810e2e2a735d6d</anchor>
      <arglist>(const size_t iph)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>delta_species</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a5cef3e975991b4e651409d3692b9f48c</anchor>
      <arglist>(const size_t kspec, double *const delta_ptr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>size_t</type>
      <name>vcs_add_all_deleted</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a3d1e7d14766e690bbf8ec85942779a1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>vcs_recheck_deleted</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>aaca98dff1dde91e60718e5b1c8aa9f80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>vcs_minor_alt_calc</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>acdc16ef45725910f3a90c0c7f25908eb</anchor>
      <arglist>(size_t kspec, size_t irxn, bool *do_delete, char *ANOTE=0) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>vcs_globStepDamp</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a3dfc94be0b66a4789c6b9dd156e69670</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>l2normdg</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a5ccb62b2219076d2a165b07676c4d185</anchor>
      <arglist>(double dg[]) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>vcs_inest</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a59153b745fdd8005c4cbb0577e28937d</anchor>
      <arglist>(double *const aw, double *const sa, double *const sm, double *const ss, double test)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>vcs_SSPhase</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>aa4eaed6a71089d74b3fd062c80b318b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>vcs_delete_memory</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>ac10379ad51f5a15424dbdee788e31054</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>vcs_counters_init</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a8b901d7271503d5655b26ab4a7f83854</anchor>
      <arglist>(int ifunc)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>vcs_TCounters_report</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a4f25f33357e166c852dc95cc725007df</anchor>
      <arglist>(int timing_print_lvl=1)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>vcs_updateMolNumVolPhases</name>
      <anchorfile>classCantera_1_1VCS__SOLVE.html</anchorfile>
      <anchor>a336b22539097d4bfa4c271f5bf590148</anchor>
      <arglist>(const int stateCalc)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::VCS_SPECIES_THERMO</name>
    <filename>classCantera_1_1VCS__SPECIES__THERMO.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>IndexPhase</name>
      <anchorfile>classCantera_1_1VCS__SPECIES__THERMO.html</anchorfile>
      <anchor>af34c57f1aedd8da86e74bbbff7dee6b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>IndexSpeciesPhase</name>
      <anchorfile>classCantera_1_1VCS__SPECIES__THERMO.html</anchorfile>
      <anchor>a3ebc2a27c82dc2dc3915da1f3a2ff7a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vcs_VolPhase *</type>
      <name>OwningPhase</name>
      <anchorfile>classCantera_1_1VCS__SPECIES__THERMO.html</anchorfile>
      <anchor>af9f3db04ac7446afa05bbe91c158f62e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>SS0_Model</name>
      <anchorfile>classCantera_1_1VCS__SPECIES__THERMO.html</anchorfile>
      <anchor>adad9cb9e89ace7a93d9628c8b6ead832</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>SS0_feSave</name>
      <anchorfile>classCantera_1_1VCS__SPECIES__THERMO.html</anchorfile>
      <anchor>ae6f9bd2bb1fd2a5d40c05e0f3f0084e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>SS0_TSave</name>
      <anchorfile>classCantera_1_1VCS__SPECIES__THERMO.html</anchorfile>
      <anchor>a9ecfee52bc102855fc35ba43b48dcd5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>SS0_T0</name>
      <anchorfile>classCantera_1_1VCS__SPECIES__THERMO.html</anchorfile>
      <anchor>a8cd6212ec7f3025cb0cb6b5f7f9ffb8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>SS0_H0</name>
      <anchorfile>classCantera_1_1VCS__SPECIES__THERMO.html</anchorfile>
      <anchor>a88c789125e5a0674a9e9fe7b377a2abc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>SS0_S0</name>
      <anchorfile>classCantera_1_1VCS__SPECIES__THERMO.html</anchorfile>
      <anchor>ab772e150d91b234939b597924792463c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>SS0_Cp0</name>
      <anchorfile>classCantera_1_1VCS__SPECIES__THERMO.html</anchorfile>
      <anchor>a729f5e8a437d763677d4e82f048e5702</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>SS0_Pref</name>
      <anchorfile>classCantera_1_1VCS__SPECIES__THERMO.html</anchorfile>
      <anchor>a978ad8bbeba420c37da417691b096fc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>SSStar_Model</name>
      <anchorfile>classCantera_1_1VCS__SPECIES__THERMO.html</anchorfile>
      <anchor>ab2c3e9950ace8ac2f36c07dd555367a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>SSStar_Vol_Model</name>
      <anchorfile>classCantera_1_1VCS__SPECIES__THERMO.html</anchorfile>
      <anchor>a45cd8df09558eaf3a0bb1b504a61c904</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>SSStar_Vol0</name>
      <anchorfile>classCantera_1_1VCS__SPECIES__THERMO.html</anchorfile>
      <anchor>a7ec8186658743af3efb3ee33694a5321</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::vcs_SpeciesProperties</name>
    <filename>classCantera_1_1vcs__SpeciesProperties.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>SpName</name>
      <anchorfile>classCantera_1_1vcs__SpeciesProperties.html</anchorfile>
      <anchor>a774f7b12c3e6fef33419b5608e20453d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VCS_SPECIES_THERMO *</type>
      <name>SpeciesThermo</name>
      <anchorfile>classCantera_1_1vcs__SpeciesProperties.html</anchorfile>
      <anchor>ab75ab2e91e2203d6acfa5a6a21663121</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>WtSpecies</name>
      <anchorfile>classCantera_1_1vcs__SpeciesProperties.html</anchorfile>
      <anchor>a9a39c5a8614625ef2813e7cb4cbd6e92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_fp</type>
      <name>FormulaMatrixCol</name>
      <anchorfile>classCantera_1_1vcs__SpeciesProperties.html</anchorfile>
      <anchor>a3ad36af0877df70e982dd9fc489943a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>Charge</name>
      <anchorfile>classCantera_1_1vcs__SpeciesProperties.html</anchorfile>
      <anchor>afa4699bd482426e10c8b21d0651151ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>SurfaceSpecies</name>
      <anchorfile>classCantera_1_1vcs__SpeciesProperties.html</anchorfile>
      <anchor>a41fb492ff1a0429754ff357e24e640fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>VolPM</name>
      <anchorfile>classCantera_1_1vcs__SpeciesProperties.html</anchorfile>
      <anchor>a07310c4705ecb74994e2bf2563b10209</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ReferenceMoleFraction</name>
      <anchorfile>classCantera_1_1vcs__SpeciesProperties.html</anchorfile>
      <anchor>a33ee5cfe60ae33dac5ad791cd86c281b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::vcs_VolPhase</name>
    <filename>classCantera_1_1vcs__VolPhase.html</filename>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a627bc8b3946b886786ef71eb86257770</anchor>
      <arglist>(const size_t phaseNum, const size_t numSpecies, const size_t numElem, const char *const phaseName, const double molesInert=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMoleFractionsState</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a319f2b3afc74413eded5133303c4aca1</anchor>
      <arglist>(const double molNum, const double *const moleFracVec, const int vcsStateStatus)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMolesFromVCS</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a5bc55719fefa07bd5ac3c6a5d29e587f</anchor>
      <arglist>(const int stateCalc, const double *molesSpeciesVCS=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMolesFromVCSCheck</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a2f4ce3d9e939b0f9dc6c4e93ddcaad66</anchor>
      <arglist>(const int vcsStateStatus, const double *molesSpeciesVCS, const double *const TPhMoles)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateFromVCS_MoleNumbers</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a47a823a0701ddeff027a6caf4a88fb43</anchor>
      <arglist>(const int stateCalc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendToVCS_ActCoeff</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>aa2dab9b413f5b67cb8537988bc1ba7a5</anchor>
      <arglist>(const int stateCalc, double *const AC)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setElectricPotential</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a0d53b9789939fefc5390ca92d4fbb023</anchor>
      <arglist>(const double phi)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>electricPotential</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a109d7a766925a4f5ea13da9a131b8889</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GStar_calc_one</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a8012fb4907db5352bc1528e3b1a27a2b</anchor>
      <arglist>(size_t kspec) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>G0_calc_one</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>ac2a1872546ffd504b9bad4c4a2e60fa1</anchor>
      <arglist>(size_t kspec) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>VolStar_calc_one</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a7f6c7e5a57325a137cc22f965abf82d4</anchor>
      <arglist>(size_t kspec) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sendToVCS_VolPM</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>abd63694200eef2962566c95a0c6cefa3</anchor>
      <arglist>(double *const VolPM) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendToVCS_GStar</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a9e8d51ec40911f0a0ae23e57a14373a5</anchor>
      <arglist>(double *const gstar) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_TP</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>ac9219105aaf5f3cdb77fba0e0888a54c</anchor>
      <arglist>(const double temperature_Kelvin, const double pressure_PA)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_T</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>af9b083f6e6dbea3d3a27171aabb77014</anchor>
      <arglist>(const double temperature_Kelvin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPtrThermoPhase</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>affe85da799c56871d9f05532338e0d0b</anchor>
      <arglist>(ThermoPhase *tp_ptr)</arglist>
    </member>
    <member kind="function">
      <type>const ThermoPhase *</type>
      <name>ptrThermoPhase</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>ae4ba33a64dde225e98325fd07d800c93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>totalMoles</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>affc4d95c05cec90557556520337959ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>molefraction</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a902fb731c68c49cff39075e153a82b9d</anchor>
      <arglist>(size_t kspec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTotalMoles</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a96b0a7215a92c2cbd6afad256016c521</anchor>
      <arglist>(const double totalMols)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMolesOutOfDate</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a32e094e64d554ce474b10fdb2c832535</anchor>
      <arglist>(int stateCalc=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMolesCurrent</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a9d9af0228da3c0258d51960cd381817a</anchor>
      <arglist>(int vcsStateStatus)</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>moleFractions</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>aa893ec6e9554d77ad52d712640e7d974</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCreationMoleNumbers</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a986921c80555c7fcc0aeb8f4c59f3ed3</anchor>
      <arglist>(const double *const n_k, const std::vector&lt; size_t &gt; &amp;creationGlobalRxnNumbers)</arglist>
    </member>
    <member kind="function">
      <type>const vector_fp &amp;</type>
      <name>creationMoleNumbers</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>aa6f1da6b4754a57ef16cb17eda7f121a</anchor>
      <arglist>(std::vector&lt; size_t &gt; &amp;creationGlobalRxnNumbers) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdealSoln</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>afe8afc93ced3c1d093c4c24101dde189</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>phiVarIndex</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a48abae3eed32384843eeaddf4e431190</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>vcs_SpeciesProperties *</type>
      <name>speciesProperty</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a488762db5e57a23915b7701286642450</anchor>
      <arglist>(const size_t kindex)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>exists</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a6b5b8f98ca9ebc114a3f9f1c2695a331</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExistence</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>af3ad2f0591d50e90a8202162d1c5b430</anchor>
      <arglist>(const int existence)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>spGlobalIndexVCS</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a73af171cf9b1c6d29c7c7b421f579c44</anchor>
      <arglist>(const size_t spIndex) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpGlobalIndexVCS</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>ae93438745ad7449605ed0065fca6ee6c</anchor>
      <arglist>(const size_t spIndex, const size_t spGlobalIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTotalMolesInert</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>ac111571ca194f2faa0d043dede15ee7a</anchor>
      <arglist>(const double tMolesInert)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>totalMolesInert</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a4fcbecdc5fa28fb6b1729b9b718524ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>elemGlobalIndex</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a210004ecd0656b43551986561328300c</anchor>
      <arglist>(const size_t e) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setElemGlobalIndex</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a5e19ce78a0db6788e30c7b3b5ecd08e2</anchor>
      <arglist>(const size_t eLocal, const size_t eGlobal)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nElemConstraints</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a7161ab70a8ff52954a8e7067c43d523c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>elementName</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a2b95a76d07b82d303d14f67632132ad3</anchor>
      <arglist>(const size_t e) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>elementType</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>ae419b7f63db396ab08a8343a0a96ee47</anchor>
      <arglist>(const size_t e) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>transferElementsFM</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a77819a3a22e1e26c951e771cb62af568</anchor>
      <arglist>(const ThermoPhase *const tPhase)</arglist>
    </member>
    <member kind="function">
      <type>const Array2D &amp;</type>
      <name>getFormulaMatrix</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a419ec8283111441ae3d4b8304dceae9a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>speciesUnknownType</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a20206428df4ab098b9f203bc9b2ba250</anchor>
      <arglist>(const size_t k) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nSpecies</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a2855dfb296334bcd93820d6d90865e08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>eos_name</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a1cad768b47a5e659d05dfe3133b0ab16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>VP_ID_</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a3d52f4fe05d3a4cff3c304cd541d2f5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_singleSpecies</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a50fe5b006516071de0467cd421ff1899</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_gasPhase</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a847314768c521c6f1bad41eab3446170</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>m_eqnState</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>abedf8ebcbcfdf9d49f3bb4543c026cc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>ChargeNeutralityElement</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a3c537af36e5334a1c2759f0f8d753c36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>p_activityConvention</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a994b7d44c6c0178fa6187def4a42ae5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>PhaseName</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a8fa087e03046fb9a4a132cd4a94b40e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setMoleFractions</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>af5fb2cf779516c65498cd63e8f6b1259</anchor>
      <arglist>(const double *const xmol)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>_updateActCoeff</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>ac8c8358ed0589578474c1224cab3ff1e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>_updateGStar</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a21c54f2a8c11ef78e9e5716e961593b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>_updateG0</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a8d4c5ee26b4a9000fa823042513c4217</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>_updateVolStar</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a85ad3f69ed8338cbca1ea7290a1ee6e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>_updateVolPM</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a39872867c562a5dd1719e45cae0f6826</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>_updateLnActCoeffJac</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a94053a6a3d22c44dcc4b1cb0cae13ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>_updateMoleFractionDependencies</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>ada54231c43dc421a438839f1ddfd7f35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>VCS_SOLVE *</type>
      <name>m_owningSolverObject</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>ad670d527335d727e210875e2844b19ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>m_numElemConstraints</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>ab01787af6ee521099e29ebdf96097fd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_elementNames</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a3df673d3cf60392933541c5a7760a759</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_int</type>
      <name>m_elementActive</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>aa77efcffc9b61143925c985ad092e7ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_int</type>
      <name>m_elementType</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>ad55f9d23d1208ff10cd40f1b4721623c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array2D</type>
      <name>m_formulaMatrix</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a90734d339e99a5ee24ce2fdb3abc96b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_int</type>
      <name>m_speciesUnknownType</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a5d2d2561633fcbfa3367d4cb412d2cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; size_t &gt;</type>
      <name>m_elemGlobalIndex</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a5e445ac90881b7158b0df62aadb0eeca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>m_numSpecies</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>aedabf3005af49d9d2e241583f083ab11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>m_totalMolesInert</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>ae3cfc54bb8f57192d9be1604c7b3a7ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_isIdealSoln</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a6454cacfd2f579f59db9b305f397558a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_existence</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>ac959d1b9d2f36a2b8622ee4ea1943296</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_MFStartIndex</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a5ef944822a07b254109d0920a2120897</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; size_t &gt;</type>
      <name>IndSpecies</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a7da586e956fff3bb191a773efa59ea61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; vcs_SpeciesProperties * &gt;</type>
      <name>ListSpeciesPtr</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a768d1c59994094b5657bdcf10c4c7039</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ThermoPhase *</type>
      <name>TP_ptr</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>ad9bd3c0f47f7012be84f0502536d301d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>v_totalMoles</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a50e224849e3da04a7542c5a85e061500</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>Xmol_</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>afdd04216f59390904ecb5ed0f9e8dece</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>creationMoleNumbers_</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a3b373fa6ef930cdc842845c4fbffedfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; size_t &gt;</type>
      <name>creationGlobalRxnNumbers_</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a41dc26affe2f08be8f84b8cbf26a780b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>m_phiVarIndex</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a1180396404a729716aa80cb3364b42b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>m_totalVol</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a3aaaba92eb6df2eb51b110e91af83220</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>SS0ChemicalPotential</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>abd3f0c7daeccc2f44a00e3710c46790a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>StarChemicalPotential</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a601241d0ba508d74150a043ccf73a597</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>StarMolarVol</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>ab7ad0e038b02f52b9f51183bc133b8ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>PartialMolarVol</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>aa7bd34d509899c20f4a05349e3d91aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector_fp</type>
      <name>ActCoeff</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a3e58b5fee1d45a935ea7e84c0a61d183</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array2D</type>
      <name>np_dLnActCoeffdMolNumber</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a408c13ffc9023d8e3668beadba5a6c1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_vcsStateStatus</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a891660c095fd0a0bf0913d6148d4f477</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>m_phi</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a729f751c62063ed9714ffecb786dd568</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_UpToDate</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>af6850c4a113bb1376b482565c5e7bf89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_UpToDate_AC</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>ad647d5eac2c002e5a6e907dc08972d02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_UpToDate_VolStar</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a4500b507cf32d5110efdb5937d7cad60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_UpToDate_VolPM</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>afe7a729f7778c471b9ae668f4f658eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_UpToDate_GStar</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a0e8a4b2a731cf60b59b1471305ece55e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_UpToDate_G0</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a8b41d1b74eda2ce4c97d7623c66ad020</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>Temp_</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a13d677e6986fde17b1154feaa4c5373f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>Pres_</name>
      <anchorfile>classCantera_1_1vcs__VolPhase.html</anchorfile>
      <anchor>a8e02307ba09ec0eed32263c969c840a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::VPStandardStateTP</name>
    <filename>classCantera_1_1VPStandardStateTP.html</filename>
    <base>Cantera::ThermoPhase</base>
    <member kind="function">
      <type></type>
      <name>VPStandardStateTP</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>adf028a965da2f0c9c70127daeaa62852</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>standardStateConvention</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a9d52b1e6dbfedae76514ccd11430242e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN_diag</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a4ec20967d5c97e5cb56c5db00c76e1e8</anchor>
      <arglist>(doublereal *dlnActCoeffdlnN_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials_RT</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>acf1ae24d0fbef55963df3598f134d699</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>ac2dc95575420c5c767a7fe4e6161e892</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a2ee9dfc481fbf2c9e915c1e15794d238</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPureGibbs</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>aeb7a9744545e2854ced11ea7634dfe49</anchor>
      <arglist>(doublereal *gpure) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>aadbf5eb5c20c2db5ea363947e883b6be</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a6736e153cc33a62e77d8b5bc594cb7c3</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a4eedbc0d1542fc11b951588856220254</anchor>
      <arglist>(doublereal *vol) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTemperature</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>aaefc9c80c1f44914510e3e9918162af8</anchor>
      <arglist>(const doublereal temp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TP</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a4b3aca2f8b6cf179e8fd69ca6328f81e</anchor>
      <arglist>(doublereal T, doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>ab3949a6b2b2cb9e039ff336f7d08cb98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateStandardStateThermo</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>ad5bcbf58355aaf0eefa611293458a88c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>calcDensity</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>afac1b45437d49cc161e7ca2d5c00906a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>_updateStandardStateThermo</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a374add39a473d51d1955308412271ac9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VPStandardStateTP</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>adf028a965da2f0c9c70127daeaa62852</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>standardStateConvention</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a9d52b1e6dbfedae76514ccd11430242e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getdlnActCoeffdlnN_diag</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a4ec20967d5c97e5cb56c5db00c76e1e8</anchor>
      <arglist>(doublereal *dlnActCoeffdlnN_diag) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChemPotentials_RT</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>acf1ae24d0fbef55963df3598f134d699</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>ac2dc95575420c5c767a7fe4e6161e892</anchor>
      <arglist>(doublereal *mu) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a2ee9dfc481fbf2c9e915c1e15794d238</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPureGibbs</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>aeb7a9744545e2854ced11ea7634dfe49</anchor>
      <arglist>(doublereal *gpure) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>aadbf5eb5c20c2db5ea363947e883b6be</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a6736e153cc33a62e77d8b5bc594cb7c3</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a4eedbc0d1542fc11b951588856220254</anchor>
      <arglist>(doublereal *vol) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTemperature</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>aaefc9c80c1f44914510e3e9918162af8</anchor>
      <arglist>(const doublereal temp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState_TP</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a4b3aca2f8b6cf179e8fd69ca6328f81e</anchor>
      <arglist>(doublereal T, doublereal pres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>ab3949a6b2b2cb9e039ff336f7d08cb98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateStandardStateThermo</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>ad5bcbf58355aaf0eefa611293458a88c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>af9328613fd7ac31d213f4fd284d8ad63</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT_ref</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a15142ba0b60259900efafd8026b51c96</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_ref</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>ae4ec4c8979d7a4b5deb6faf52697a068</anchor>
      <arglist>(doublereal *g) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R_ref</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a9d67a94aa582d60860f4658ea11e1aa3</anchor>
      <arglist>(doublereal *er) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R_ref</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>ab511be0c8fe8538e41b1b74d5bc4f7df</anchor>
      <arglist>(doublereal *cprt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes_ref</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>ac3f1e890abfc6656dc6d0534f7516453</anchor>
      <arglist>(doublereal *vol) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_Pcurrent</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>ab231cf2f611695594303229d552c6c27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_Tlast_ss</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a32fab878e000eccbd70540a9f5d543fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>m_Plast_ss</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a4a595da3b4db2a8ee45800bddde64a42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::unique_ptr&lt; PDSS &gt; &gt;</type>
      <name>m_PDSS_storage</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>ae9a972bdff430df4750e0a08e563041e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_h0_RT</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a3c5e8d8c0d3a1e74b657da7f4e9014bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_cp0_R</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a0f99f8895cc2109fd4dcebb729d615fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_g0_RT</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a0b34289ccbc27c3af431627fd7a3a4fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_s0_R</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a56e8ca74ece671716ff2cb73967e1576</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_V0</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>ad3152f6c73eda9e96b76c5e0fd331628</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_hss_RT</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>ae5ee73dfd03583f388a17889872a8748</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_cpss_R</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>aa870344d76d32a4fb4f8ffa467661f07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_gss_RT</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>ad1484b1a50a5b6bc1f23fec533b4a6fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_sss_R</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>aa1912ff8f510e06649bc1e66c8d40397</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_fp</type>
      <name>m_Vss</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a76dbe0789f1e4427d272e1036c99cfda</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>installPDSS</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a7e8496ff5f5969c68672bfeca09144d3</anchor>
      <arglist>(size_t k, std::unique_ptr&lt; PDSS &gt; &amp;&amp;pdss)</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>addSpecies</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>a1345257537abafa7ccde0fe431abae62</anchor>
      <arglist>(shared_ptr&lt; Species &gt; spec)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>invalidateCache</name>
      <anchorfile>classCantera_1_1VPStandardStateTP.html</anchorfile>
      <anchor>ae4f5daed0983e1d3bfb144a5078d75cc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::Wall</name>
    <filename>classCantera_1_1Wall.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>vdot</name>
      <anchorfile>classCantera_1_1Wall.html</anchorfile>
      <anchor>ab938aef5f544a3903cf3df320b5768a8</anchor>
      <arglist>(doublereal t)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>Q</name>
      <anchorfile>classCantera_1_1Wall.html</anchorfile>
      <anchor>a8be5dbb5a9f6a2d974e2a24397819e9e</anchor>
      <arglist>(doublereal t)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>area</name>
      <anchorfile>classCantera_1_1Wall.html</anchorfile>
      <anchor>afff4b2bb307fb4fef98c58773115c1d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setArea</name>
      <anchorfile>classCantera_1_1Wall.html</anchorfile>
      <anchor>a9b9f02d10ff621362e77fa27e319d8da</anchor>
      <arglist>(doublereal a)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getArea</name>
      <anchorfile>classCantera_1_1Wall.html</anchorfile>
      <anchor>a2bdb101059f665944bf06fc38eb2db50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeatTransferCoeff</name>
      <anchorfile>classCantera_1_1Wall.html</anchorfile>
      <anchor>a576a01f83a40cb77bf6de61374b9e3b8</anchor>
      <arglist>(doublereal U)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getHeatTransferCoeff</name>
      <anchorfile>classCantera_1_1Wall.html</anchorfile>
      <anchor>a2d01cbedd3f4837e8c1c94694146c5de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEmissivity</name>
      <anchorfile>classCantera_1_1Wall.html</anchorfile>
      <anchor>afd3331fc216a89b8896f3fb51e4de82e</anchor>
      <arglist>(doublereal epsilon)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocity</name>
      <anchorfile>classCantera_1_1Wall.html</anchorfile>
      <anchor>acf20e795e8adc62f6021358e67cca0cd</anchor>
      <arglist>(Func1 *f=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExpansionRateCoeff</name>
      <anchorfile>classCantera_1_1Wall.html</anchorfile>
      <anchor>a5064cba8e001ce19f7dbba27d4e7da30</anchor>
      <arglist>(doublereal k)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getExpansionRateCoeff</name>
      <anchorfile>classCantera_1_1Wall.html</anchorfile>
      <anchor>a8462cc218fdb3d5c8f6acd6aaa8ad663</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeatFlux</name>
      <anchorfile>classCantera_1_1Wall.html</anchorfile>
      <anchor>a777e707d8f6e6512743a78185332a7de</anchor>
      <arglist>(Func1 *q)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>install</name>
      <anchorfile>classCantera_1_1Wall.html</anchorfile>
      <anchor>a06e72541f783a4c4df5cf059104c7fcc</anchor>
      <arglist>(ReactorBase &amp;leftReactor, ReactorBase &amp;rightReactor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classCantera_1_1Wall.html</anchorfile>
      <anchor>a6365dca5a7d8ddb694726a53b55a4c27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ready</name>
      <anchorfile>classCantera_1_1Wall.html</anchorfile>
      <anchor>a0d9a0f2a8b2a5257db037cee28f7d7a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReactorBase &amp;</type>
      <name>left</name>
      <anchorfile>classCantera_1_1Wall.html</anchorfile>
      <anchor>ac22fdeb465adf1bf459c58f17c2c4a91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ReactorBase &amp;</type>
      <name>right</name>
      <anchorfile>classCantera_1_1Wall.html</anchorfile>
      <anchor>a57cc462c51f073c1b6086ea482478be1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::WaterProps</name>
    <filename>classCantera_1_1WaterProps.html</filename>
    <member kind="function">
      <type></type>
      <name>WaterProps</name>
      <anchorfile>classCantera_1_1WaterProps.html</anchorfile>
      <anchor>aabdb21f3802a883e426d8a23f96e6b20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WaterProps</name>
      <anchorfile>classCantera_1_1WaterProps.html</anchorfile>
      <anchor>ac80962e34596ba42f015f55370a45a62</anchor>
      <arglist>(WaterPropsIAPWS *wptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WaterProps</name>
      <anchorfile>classCantera_1_1WaterProps.html</anchorfile>
      <anchor>ac5b015708db05741ee5e5661f94e5d75</anchor>
      <arglist>(PDSS_Water *wptr)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>relEpsilon</name>
      <anchorfile>classCantera_1_1WaterProps.html</anchorfile>
      <anchor>a4a95589d2258ab7e00c43c14dcfb0b70</anchor>
      <arglist>(doublereal T, doublereal P_pascal, int ifunc=0)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>ADebye</name>
      <anchorfile>classCantera_1_1WaterProps.html</anchorfile>
      <anchor>a1390ca867cb2504d95e9fa33db9cef65</anchor>
      <arglist>(doublereal T, doublereal P, int ifunc)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>satPressure</name>
      <anchorfile>classCantera_1_1WaterProps.html</anchorfile>
      <anchor>ae3fc47f48b0df5655050c8b662a94646</anchor>
      <arglist>(doublereal T)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>density_IAPWS</name>
      <anchorfile>classCantera_1_1WaterProps.html</anchorfile>
      <anchor>a967aaaf0d2dda5bafc0f7659601bdf85</anchor>
      <arglist>(doublereal T, doublereal P)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>density_IAPWS</name>
      <anchorfile>classCantera_1_1WaterProps.html</anchorfile>
      <anchor>a3efce46fce8a90ca7e30f57568efdc07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>coeffThermalExp_IAPWS</name>
      <anchorfile>classCantera_1_1WaterProps.html</anchorfile>
      <anchor>a3de0cc6e051084f6774b079f758c08bb</anchor>
      <arglist>(doublereal T, doublereal P)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>isothermalCompressibility_IAPWS</name>
      <anchorfile>classCantera_1_1WaterProps.html</anchorfile>
      <anchor>a812bc8b934dbff98f952581553e35d45</anchor>
      <arglist>(doublereal T, doublereal P)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>viscosityWater</name>
      <anchorfile>classCantera_1_1WaterProps.html</anchorfile>
      <anchor>ab13ddd679b05debd6d26e51e1c4ec53c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>thermalConductivityWater</name>
      <anchorfile>classCantera_1_1WaterProps.html</anchorfile>
      <anchor>a8b1dc060e3e64933d22ccce5ffc317bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static doublereal</type>
      <name>density_T</name>
      <anchorfile>classCantera_1_1WaterProps.html</anchorfile>
      <anchor>ac2ab4d213e89c9691bd18818edb1d8f4</anchor>
      <arglist>(doublereal T, doublereal P, int ifunc)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WaterPropsIAPWS *</type>
      <name>m_waterIAPWS</name>
      <anchorfile>classCantera_1_1WaterProps.html</anchorfile>
      <anchor>a1d5281e2a855b50c23d785a537b41a32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_own_sub</name>
      <anchorfile>classCantera_1_1WaterProps.html</anchorfile>
      <anchor>ae33a3a1be5624295ab6bf1fbb6f60c96</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::WaterPropsIAPWS</name>
    <filename>classCantera_1_1WaterPropsIAPWS.html</filename>
    <member kind="function">
      <type></type>
      <name>WaterPropsIAPWS</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>a7725acb402b0edf608a6a2b178bbb01c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState_TR</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>adb82f341230f1c7e32fd008d57d2fdb3</anchor>
      <arglist>(doublereal temperature, doublereal rho)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>helmholtzFE</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>ad0e603ce95926fc0390dc181c0fd2074</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>Gibbs</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>ac8e123f657234d4d3015c640c3a6f7a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>enthalpy</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>a39484fc3f637e61425bf60223b3eb07e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>intEnergy</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>ab76c6b7b707de7c26ade9f429c10467e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>entropy</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>aadab4de62af9cc25a3d2840ec81329be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>cv</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>aa2e8f28917ca668fc335480db2e2ed3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>cp</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>a2b8e715acf6238da831889ff3354b1cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>molarVolume</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>aa4a74b0b8eef5815d243b3c05a0daf94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>density</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>a13163fa1de270c484fbc09d258629584</anchor>
      <arglist>(doublereal temperature, doublereal pressure, int phase=-1, doublereal rhoguess=-1.0)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>density_const</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>a415210e4a50cda568641868fd52cc11a</anchor>
      <arglist>(doublereal pressure, int phase=-1, doublereal rhoguess=-1.0) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>density</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>ac27248f236e9f0dbcf5521410c52ee2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>temperature</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>ad0673abef723187fd991cb90c658c9c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>coeffThermExp</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>a25562819d23f8b00dd0d53f68967927e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>coeffPresExp</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>a63ea3d49f3824ecf778a7a20c00efd60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>isothermalCompressibility</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>afbf834ae5cd73373fa5681bbdc329f1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>dpdrho</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>aeb09c029564b5d47691f46d0bda1c18f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>psat_est</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>ad51d8e2140f12213fdda5c010d3074a8</anchor>
      <arglist>(doublereal temperature) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>psat</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>ad92f97db165efb46de77f0fe5303a5d8</anchor>
      <arglist>(doublereal temperature, int waterState=WATER_LIQUID)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>densSpinodalWater</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>a282e65bfbea62e7b28e50f41fcb2c118</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>densSpinodalSteam</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>a83dc658370ad793cea413aea215e1939</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>phaseState</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>af857741cdc8e8de7df7cd6950e102e82</anchor>
      <arglist>(bool checkState=false) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>Tcrit</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>a65d0c4dd3591c5cbccbcdfaa66c6598b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>Pcrit</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>afc75909db2c7909077024be138c0b483</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>Rhocrit</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>ac0922c7ab62eb9a1657f86da5d2f11b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>calcDim</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>a17e56e6c2aef8d6e71d730567b02d293</anchor>
      <arglist>(doublereal temperature, doublereal rho)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>corr</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>a066930b1d074cdca817e817089482811</anchor>
      <arglist>(doublereal temperature, doublereal pressure, doublereal &amp;densLiq, doublereal &amp;densGas, doublereal &amp;delGRT)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>corr1</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>a17cafd0c59742312efbe2e6c43b3844e</anchor>
      <arglist>(doublereal temperature, doublereal pressure, doublereal &amp;densLiq, doublereal &amp;densGas, doublereal &amp;pcorr)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WaterPropsIAPWSphi</type>
      <name>m_phi</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>ae71b7f9eead232384f19c9b501796e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>tau</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>a2cf616354f8dd7fc741d7a5661a373bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>delta</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>ad5b533039aaa613cd3755dc5656c48fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>iState</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWS.html</anchorfile>
      <anchor>accac90b002c5117047ee11476503db98</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::WaterPropsIAPWSphi</name>
    <filename>classCantera_1_1WaterPropsIAPWSphi.html</filename>
    <member kind="function">
      <type></type>
      <name>WaterPropsIAPWSphi</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>a7431a0a1ffb946a3bf99cbc3fb6c8c85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>phi</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>a8568d1e95579ab373df92dd45830627b</anchor>
      <arglist>(doublereal tau, doublereal delta)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>phi_d</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>aacea4493fa5eab559351e3f97b8df949</anchor>
      <arglist>(doublereal tau, doublereal delta)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>phi_dd</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>aa2932bc179deec0357c8930489cfc65e</anchor>
      <arglist>(doublereal tau, doublereal delta)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>phi_t</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>a6f7151f72b63c7ec50a3c69812422925</anchor>
      <arglist>(doublereal tau, doublereal delta)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>phi_tt</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>a04396274a9da218280a7087f4ea8441b</anchor>
      <arglist>(doublereal tau, doublereal delta)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>pressureM_rhoRT</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>afa9730e13f60a6a70f54bddde9079c97</anchor>
      <arglist>(doublereal tau, doublereal delta)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>dimdpdrho</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>a179dfbcfca6f0351221df3f6f3c2aa70</anchor>
      <arglist>(doublereal tau, doublereal delta)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>dimdpdT</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>a9a720495e7f8150c0e71b147242f8fb1</anchor>
      <arglist>(doublereal tau, doublereal delta)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>dfind</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>a7391dd2e5632fb188c826745c3b640cb</anchor>
      <arglist>(doublereal p_red, doublereal tau, doublereal deltaGuess)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>gibbs_RT</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>a5e5c60be82cf8e0e3847ac4bb45a0a7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>enthalpy_RT</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>a529d50bb049c8de40aaa0eb20bf090dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>entropy_R</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>a1a964329022a0f04d029320d6db2fe36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>intEnergy_RT</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>a8d0ebc55a4d37b160594faa0259fe041</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>cv_R</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>a6111a3b8ea9d44d4b9561b17c918e83a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>cp_R</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>a82ca41b7bc990d8a7b498e5481ebe39a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tdpolycalc</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>aeb020b17eca8a09af0d663a3ed917128</anchor>
      <arglist>(doublereal tau, doublereal delta)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>phiR</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>ac8fc231644316355e86092274a448501</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>doublereal</type>
      <name>phi0</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>a3160d39fac2c9fca7b8584693530dee8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>doublereal</type>
      <name>phiR_d</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>a310dbf0d9485c4d9bd1f39e5638e4111</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>doublereal</type>
      <name>phi0_d</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>ad918c2832793a442f053a82ec388e14b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>doublereal</type>
      <name>phiR_dd</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>ae31de20d2e0eb9d41ce7138127989780</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>doublereal</type>
      <name>phi0_dd</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>ac77ff8ef631b66d07141430293ee8868</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>doublereal</type>
      <name>phi0_t</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>abb504044637f9633495b7e391d81392a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>doublereal</type>
      <name>phiR_t</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>aac5c7a5bce80446604325b589d830dac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>doublereal</type>
      <name>phiR_tt</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>a396ba70bd5eb04ba993f15509a2960e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>doublereal</type>
      <name>phi0_tt</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>aaca9278046a4d762cd7a4434f71c76a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>doublereal</type>
      <name>phiR_dt</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>a67c325280d3cb87d7b215ec94055523a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>doublereal</type>
      <name>phi0_dt</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>a50a05cd7a7466de735ce716d81b8f72e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>TAUp</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>a8664211fc3d6c70a8a5a58ee12470cc9</anchor>
      <arglist>[52]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>DELTAp</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>a1f5483e3f061ff71ad7a1ef9912e9e8c</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>TAUsave</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>ade797eef4edf2826cd71e6f7887cfa36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>TAUsqrt</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>aa32fa4a7ed846cc39703911a066151a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>doublereal</type>
      <name>DELTAsave</name>
      <anchorfile>classCantera_1_1WaterPropsIAPWSphi.html</anchorfile>
      <anchor>a71ca7279062b7fc73024afe57c97b28f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::WaterSSTP</name>
    <filename>classCantera_1_1WaterSSTP.html</filename>
    <base>Cantera::SingleSpeciesTP</base>
    <member kind="function">
      <type></type>
      <name>WaterSSTP</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a15224711f84e4f6b3509d8e61e0c479c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WaterSSTP</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>af5295d0968e24370d62c2d3c4904669b</anchor>
      <arglist>(const std::string &amp;inputFile, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WaterSSTP</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a208de0cd653edd4866a2da65298201e9</anchor>
      <arglist>(XML_Node &amp;phaseRef, const std::string &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>aa78f8670e38c1dda3b7e95a7da21794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critTemperature</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a92cc18825b968c6195896358fbfe1744</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critPressure</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a44de713a0ca6361efcabe18dfc265b1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>critDensity</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>ae7ff0cbd1630614df97698d026f47114</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>satPressure</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>accb8f654e680f86cca2b67f938e34a23</anchor>
      <arglist>(doublereal t)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>compatibleWithMultiPhase</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a6107e1b1da2244719399c92776d5591c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>vaporFraction</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a5774dc8fff30f1d0d10de2f91975a9d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTemperature</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>aaefc9c80c1f44914510e3e9918162af8</anchor>
      <arglist>(const doublereal temp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDensity</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>ac86538ac92a6fdf44cae9f11cf1d41e2</anchor>
      <arglist>(const doublereal dens)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initThermo</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a8a12209d08a5c4876d9894d619368a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParametersFromXML</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>abe11f2065246742c73c778c5de62f5b7</anchor>
      <arglist>(const XML_Node &amp;eosdata)</arglist>
    </member>
    <member kind="function">
      <type>WaterPropsIAPWS *</type>
      <name>getWater</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>ac102af441050688cd96d06c4b42d37fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WaterProps *</type>
      <name>getWaterProps</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a3d999fb6ea43705e4100292818ee18ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>isothermalCompressibility</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>afbf834ae5cd73373fa5681bbdc329f1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalExpansionCoeff</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a661ba8332a19cb48e3e03136c1bce6a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>dthermalExpansionCoeffdT</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a6dbbd7e5e55ce44833656246576344cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a910c12db1e3cb782d44faaf32a5d843e</anchor>
      <arglist>(doublereal *gss) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a2ee9dfc481fbf2c9e915c1e15794d238</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a6736e153cc33a62e77d8b5bc594cb7c3</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>aadbf5eb5c20c2db5ea363947e883b6be</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>af9328613fd7ac31d213f4fd284d8ad63</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT_ref</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a15142ba0b60259900efafd8026b51c96</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_ref</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>ae4ec4c8979d7a4b5deb6faf52697a068</anchor>
      <arglist>(doublereal *g) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R_ref</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a9d67a94aa582d60860f4658ea11e1aa3</anchor>
      <arglist>(doublereal *er) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R_ref</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>ab511be0c8fe8538e41b1b74d5bc4f7df</anchor>
      <arglist>(doublereal *cprt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes_ref</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>ac3f1e890abfc6656dc6d0534f7516453</anchor>
      <arglist>(doublereal *vol) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_updateThermo</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>adc787a3ca8a5489e2763cc7e712685bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WaterPropsIAPWS</type>
      <name>m_sub</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a18576916bbf6909bd642c3714bc20f0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unique_ptr&lt; WaterProps &gt;</type>
      <name>m_waterProps</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>ae6148f027114f2615ba7e9806b03f66c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>m_mw</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>abf5389c2ce4d647032551bcb1db5cad3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>EW_Offset</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a54c5137de9919fcfb8e65f4eb841154c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>doublereal</type>
      <name>SW_Offset</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>ad00cc543f584a3b6e280334b2bcb1682</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_ready</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a23377619c64713a3583174e10a91c8be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_allowGasPhase</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>ad910d5c2b68d8a353537b29190dc0e8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>cv_mole</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a574e65a56c85cfb6900e126669ed6d70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>pressure</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a33bd9ca28b967fae8d9f532d0d362978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPressure</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a7b8fd9d05cfac4203a9fc3cf0db011e6</anchor>
      <arglist>(doublereal p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>isothermalCompressibility</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>afbf834ae5cd73373fa5681bbdc329f1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalExpansionCoeff</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a661ba8332a19cb48e3e03136c1bce6a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>dthermalExpansionCoeffdT</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a6dbbd7e5e55ce44833656246576344cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardChemPotentials</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a910c12db1e3cb782d44faaf32a5d843e</anchor>
      <arglist>(doublereal *gss) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a2ee9dfc481fbf2c9e915c1e15794d238</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>ae76c68c78ee96df533afbcdddf62cda3</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a78c94b1deaedb97d1ab473b2d9a9d6f9</anchor>
      <arglist>(doublereal *sr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a6736e153cc33a62e77d8b5bc594cb7c3</anchor>
      <arglist>(doublereal *cpr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntEnergy_RT</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>aadbf5eb5c20c2db5ea363947e883b6be</anchor>
      <arglist>(doublereal *urt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEnthalpy_RT_ref</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>af9328613fd7ac31d213f4fd284d8ad63</anchor>
      <arglist>(doublereal *hrt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_RT_ref</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a15142ba0b60259900efafd8026b51c96</anchor>
      <arglist>(doublereal *grt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getGibbs_ref</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>ae4ec4c8979d7a4b5deb6faf52697a068</anchor>
      <arglist>(doublereal *g) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getEntropy_R_ref</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>a9d67a94aa582d60860f4658ea11e1aa3</anchor>
      <arglist>(doublereal *er) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCp_R_ref</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>ab511be0c8fe8538e41b1b74d5bc4f7df</anchor>
      <arglist>(doublereal *cprt) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStandardVolumes_ref</name>
      <anchorfile>classCantera_1_1WaterSSTP.html</anchorfile>
      <anchor>ac3f1e890abfc6656dc6d0534f7516453</anchor>
      <arglist>(doublereal *vol) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::WaterTransport</name>
    <filename>classCantera_1_1WaterTransport.html</filename>
    <base>Cantera::Transport</base>
    <member kind="function">
      <type></type>
      <name>WaterTransport</name>
      <anchorfile>classCantera_1_1WaterTransport.html</anchorfile>
      <anchor>ad6241169a477cdb9ee0847eca557d590</anchor>
      <arglist>(thermo_t *thermo=0, int ndim=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>transportType</name>
      <anchorfile>classCantera_1_1WaterTransport.html</anchorfile>
      <anchor>aaa616493275cb1d7fb3ba980ec3cd467</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>viscosity</name>
      <anchorfile>classCantera_1_1WaterTransport.html</anchorfile>
      <anchor>ad8dadb8c432b45ddc85f81e5a863cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>bulkViscosity</name>
      <anchorfile>classCantera_1_1WaterTransport.html</anchorfile>
      <anchor>a4607c91cbc5c32bea10a68c5d46011fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual doublereal</type>
      <name>thermalConductivity</name>
      <anchorfile>classCantera_1_1WaterTransport.html</anchorfile>
      <anchor>a2485777400132063dc233a7af516e66d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>initTP</name>
      <anchorfile>classCantera_1_1WaterTransport.html</anchorfile>
      <anchor>a029b812cc33a1e69242f0627dd9bac3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WaterPropsIAPWS *</type>
      <name>m_sub</name>
      <anchorfile>classCantera_1_1WaterTransport.html</anchorfile>
      <anchor>aab254933821bf2edc5e6db0ead493b42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WaterProps *</type>
      <name>m_waterProps</name>
      <anchorfile>classCantera_1_1WaterTransport.html</anchorfile>
      <anchor>a3449aee09d45e1e098190ab3abfe6b05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PDSS_Water *</type>
      <name>m_waterPDSS</name>
      <anchorfile>classCantera_1_1WaterTransport.html</anchorfile>
      <anchor>afe85ae1b9765fede180bf309b351b6be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::XML_Error</name>
    <filename>classCantera_1_1XML__Error.html</filename>
    <base>Cantera::CanteraError</base>
    <member kind="function" protection="protected">
      <type></type>
      <name>XML_Error</name>
      <anchorfile>classCantera_1_1XML__Error.html</anchorfile>
      <anchor>a9d6934546e3f7879b44f31c4e7e5ed91</anchor>
      <arglist>(const std::string &amp;file, int line)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getMessage</name>
      <anchorfile>classCantera_1_1XML__Error.html</anchorfile>
      <anchor>a3d44f1c52bfa9d0edc61f8d3b776730d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~XML_Error</name>
      <anchorfile>classCantera_1_1XML__Error.html</anchorfile>
      <anchor>a3d629065bd08320ea2b378808385bf4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>m_msg</name>
      <anchorfile>classCantera_1_1XML__Error.html</anchorfile>
      <anchor>a83d1e8acb4861a68b6facc74af427564</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::XML_NoChild</name>
    <filename>classCantera_1_1XML__NoChild.html</filename>
    <base>Cantera::XML_Error</base>
    <member kind="function">
      <type></type>
      <name>XML_NoChild</name>
      <anchorfile>classCantera_1_1XML__NoChild.html</anchorfile>
      <anchor>a827ba73d83611d4a03ce3725ca59ac84</anchor>
      <arglist>(const XML_Node *p, const std::string &amp;parent, std::string child, const std::string &amp;filename, int line)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getClass</name>
      <anchorfile>classCantera_1_1XML__NoChild.html</anchorfile>
      <anchor>a31a0154bd4d18f1bcd78a507b91056be</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::XML_Node</name>
    <filename>classCantera_1_1XML__Node.html</filename>
    <member kind="function">
      <type></type>
      <name>XML_Node</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a1b1f90986722b077605dc58dffd48ade</anchor>
      <arglist>(const std::string &amp;nm=&quot;--&quot;, XML_Node *const parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addComment</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>ace8320e5ba2797b7c6b551d2aff8c1a3</anchor>
      <arglist>(const std::string &amp;comment)</arglist>
    </member>
    <member kind="function">
      <type>XML_Node &amp;</type>
      <name>mergeAsChild</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a3fb6dca957d98b432d33a227849f573b</anchor>
      <arglist>(XML_Node &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>XML_Node &amp;</type>
      <name>addChild</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a6275cfc276d65df5afae780f874d56a4</anchor>
      <arglist>(const std::string &amp;sname)</arglist>
    </member>
    <member kind="function">
      <type>XML_Node &amp;</type>
      <name>addChild</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>abe23f8168ec03257c12c9422dca7340b</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>XML_Node &amp;</type>
      <name>addChild</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>abd00dde218826ed1fe34255213b97d6f</anchor>
      <arglist>(const std::string &amp;name, const doublereal value, const std::string &amp;fmt=&quot;%g&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeChild</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a05d900bb8a724d4fc807528d8f7751a8</anchor>
      <arglist>(const XML_Node *const node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addValue</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a4fe2079512b035989ee2cfd305997d79</anchor>
      <arglist>(const std::string &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addValue</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a089d463e4ff980d32e977362ac5c588f</anchor>
      <arglist>(const doublereal val, const std::string &amp;fmt=&quot;%g&quot;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>value</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>ad3d082657eda80ddcdbc0a6e02b32ebf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>value</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a67e22661c4a5659a480854b5d5c85c84</anchor>
      <arglist>(const std::string &amp;cname) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>operator()</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a3d1c2557089bf7d1388b21b2cfbf9f60</anchor>
      <arglist>(const std::string &amp;cname) const</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>fp_value</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a983bd1cd1eeafe2844ce51864851dc8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>int_value</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a9107ae707a8f75dc1279dc7cb58f70f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAttribute</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a6a8d6a54324b5fbfe631554da1bab756</anchor>
      <arglist>(const std::string &amp;attrib, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAttribute</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>ac7eef5e2523d6ad274809dcff6dcffb8</anchor>
      <arglist>(const std::string &amp;attrib, const doublereal value, const std::string &amp;fmt=&quot;%g&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAttribute</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>ac1b25a03554163a6b8c06be3495251b2</anchor>
      <arglist>(const std::string &amp;attrib, int value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAttribute</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a798a9d216314184dd97575ea7b22bd86</anchor>
      <arglist>(const std::string &amp;attrib, size_t value)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>operator[]</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>ad71718f6549cfcba9a4515c43fd0bda8</anchor>
      <arglist>(const std::string &amp;attr) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>attrib</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a1b147a15c0cdd66bd291052bc48c8680</anchor>
      <arglist>(const std::string &amp;attr) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>ac8bb3912a3ce86b15842e79d0b421204</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::map&lt; std::string, std::string &gt; &amp;</type>
      <name>attribsConst</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>ad0f897d5d73c5b19d4bde93180ead6b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLineNumber</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>aabfd58e6783b405131a793da4eddf698</anchor>
      <arglist>(const int n)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>lineNumber</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a2f7296dbd77cd659646cf56db472fef2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>parent</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>ab83f1c4e58826b8016a7ad14578e4acc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>setParent</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>ad9c667312017184e713f3a55771225f1</anchor>
      <arglist>(XML_Node *const p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasChild</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a275c103a431fbc200eba303ed16af3ef</anchor>
      <arglist>(const std::string &amp;ch) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAttrib</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>af96f099ba3f3b795ca5794cd24da94f8</anchor>
      <arglist>(const std::string &amp;a) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a1d89c28bd42ba9a52da008bb69367171</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a15370b0b105c10ef81e84c6bb3af8f4e</anchor>
      <arglist>(const std::string &amp;name_)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a4c5cdd8165762b000c6518db56830677</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>XML_Node &amp;</type>
      <name>child</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>ae317b4be4974e3e1b4a90a0d2d3bace9</anchor>
      <arglist>(const size_t n) const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; XML_Node * &gt; &amp;</type>
      <name>children</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>aaae2268a477b2ac3507a4deb9267a468</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>nChildren</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>ad99f4996d98bd5cdeb6cfc1a4722d331</anchor>
      <arglist>(bool discardComments=false) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isComment</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>af7d6b75f6a402eb68077d5cefcdb06b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_require</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a97c0d0242fe77c2b58ad29d9ff02cb1b</anchor>
      <arglist>(const std::string &amp;a, const std::string &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>findNameID</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>ad54f1a94a94b149d53e22db29b8f5b84</anchor>
      <arglist>(const std::string &amp;nameTarget, const std::string &amp;idTarget) const</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>findNameIDIndex</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>aabec0805a29bbbd59e83a7b980569a09</anchor>
      <arglist>(const std::string &amp;nameTarget, const std::string &amp;idTarget, const int index) const</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>findID</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>aa8b63c1c6b575b056da13d35796d446a</anchor>
      <arglist>(const std::string &amp;id, const int depth=100) const</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>findByAttr</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a13fe4bec9b55057ce44efb4f87829bed</anchor>
      <arglist>(const std::string &amp;attr, const std::string &amp;val, int depth=100000) const</arglist>
    </member>
    <member kind="function">
      <type>const XML_Node *</type>
      <name>findByName</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a8b60eeac4f7157d0aee73f8caada3d78</anchor>
      <arglist>(const std::string &amp;nm, int depth=100000) const</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>findByName</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a4532d3871fc4d5cad356067aee01d7d4</anchor>
      <arglist>(const std::string &amp;nm, int depth=100000)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; XML_Node * &gt;</type>
      <name>getChildren</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>ad28cb02db872512057ff14971cbea2f8</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>XML_Node &amp;</type>
      <name>child</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>ac3b5345e78553f383ebcfd94ae1b9a91</anchor>
      <arglist>(const std::string &amp;loc) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeHeader</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>aa54cf7a53f40a8076a64838a1687b753</anchor>
      <arglist>(std::ostream &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a96b36eca7bafd995327335aff96b71b0</anchor>
      <arglist>(std::ostream &amp;s, const int level=0, int numRecursivesAllowed=60000) const</arglist>
    </member>
    <member kind="function">
      <type>XML_Node &amp;</type>
      <name>root</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a4e08e7c442075758ffa2b3b9b7c145fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRoot</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>aeaca67582f0e91ee0df2ef14fbc6bb2f</anchor>
      <arglist>(const XML_Node &amp;root)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>build</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a3907c249d8b1be86ebf921bc1c0e1036</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>build</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>adfa31b91d0b67d708968afbfab71b173</anchor>
      <arglist>(std::istream &amp;f, const std::string &amp;filename=&quot;[unknown]&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyUnion</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a6f479042183a45f79b5f96f84b76d7d3</anchor>
      <arglist>(XML_Node *const node_dest) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a1b36d29e7f8e52d836fffdbc33e4688b</anchor>
      <arglist>(XML_Node *const node_dest) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lock</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>aa81aed607133209dade63a226818224d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlock</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a9278be8203e1c42e2619179882ae4403</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>m_name</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>adb41893ba19e889e56c559f25fc1a68a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>m_value</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>ad76ca086d7951d942d2d09305f6b1c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>m_filename</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>abeab36922e15d948509bdf36c5a46cd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::multimap&lt; std::string, XML_Node * &gt;</type>
      <name>m_childindex</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>aa9d53af72a2f51efec8a4047a0dd8ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>m_attribs</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a0d4316206d4dade190171478f64929be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>XML_Node *</type>
      <name>m_parent</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a67e3dd9455d2e415c722b64d4109d115</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>XML_Node *</type>
      <name>m_root</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a3f87d08bb5e1226177d3a20a33d827a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_locked</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a6b6d3df9c5af698a81242c85c0d4d626</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; XML_Node * &gt;</type>
      <name>m_children</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>af397c8a85e7ad8f7f0dbc37cc53cf0ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_iscomment</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a7c0d87393b1c9b87bb142befed049615</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_linenum</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a641f13c40f3ea2f0575399cdaafef431</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::map&lt; std::string, std::string &gt; &amp;</type>
      <name>attribs</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a5c5f11baff1512222f598d5871595c42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>write_int</name>
      <anchorfile>classCantera_1_1XML__Node.html</anchorfile>
      <anchor>a4078a75054ee169810631a8fda9a9df1</anchor>
      <arglist>(std::ostream &amp;s, int level=0, int numRecursivesAllowed=60000) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::XML_Reader</name>
    <filename>classCantera_1_1XML__Reader.html</filename>
    <member kind="function">
      <type></type>
      <name>XML_Reader</name>
      <anchorfile>classCantera_1_1XML__Reader.html</anchorfile>
      <anchor>a909f99f588a3f4cc5fdbc9eac0798fa8</anchor>
      <arglist>(std::istream &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getchr</name>
      <anchorfile>classCantera_1_1XML__Reader.html</anchorfile>
      <anchor>a45fb7a00719bef6a2a4dd22653cbffdf</anchor>
      <arglist>(char &amp;ch)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>findQuotedString</name>
      <anchorfile>classCantera_1_1XML__Reader.html</anchorfile>
      <anchor>a8226eab1515b42f10a1ef39717430fa9</anchor>
      <arglist>(const std::string &amp;aline, std::string &amp;rstring) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parseTag</name>
      <anchorfile>classCantera_1_1XML__Reader.html</anchorfile>
      <anchor>a8409620d3f55037ce33448185f821c18</anchor>
      <arglist>(const std::string &amp;tag, std::string &amp;name, std::map&lt; std::string, std::string &gt; &amp;attribs) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>readTag</name>
      <anchorfile>classCantera_1_1XML__Reader.html</anchorfile>
      <anchor>a27097253be6cd088aeb263852c937ddc</anchor>
      <arglist>(std::map&lt; std::string, std::string &gt; &amp;attribs)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>readValue</name>
      <anchorfile>classCantera_1_1XML__Reader.html</anchorfile>
      <anchor>aeefb52bac1004ef5a9fbb9a7184e059c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>m_line</name>
      <anchorfile>classCantera_1_1XML__Reader.html</anchorfile>
      <anchor>a434474dfe11c603cd3512231cdaa8baa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::istream &amp;</type>
      <name>m_s</name>
      <anchorfile>classCantera_1_1XML__Reader.html</anchorfile>
      <anchor>ab3ee5ed125463c20d3c2c8b664867d05</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cantera::XML_TagMismatch</name>
    <filename>classCantera_1_1XML__TagMismatch.html</filename>
    <base>Cantera::XML_Error</base>
    <member kind="function">
      <type></type>
      <name>XML_TagMismatch</name>
      <anchorfile>classCantera_1_1XML__TagMismatch.html</anchorfile>
      <anchor>a20e691db803e797314586ece2ce9a54e</anchor>
      <arglist>(const std::string &amp;opentag, const std::string &amp;closetag, const std::string &amp;filename, int line)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getClass</name>
      <anchorfile>classCantera_1_1XML__TagMismatch.html</anchorfile>
      <anchor>a31a0154bd4d18f1bcd78a507b91056be</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Factory&lt; Falloff &gt;</name>
    <filename>classCantera_1_1Factory.html</filename>
    <base>Cantera::FactoryBase</base>
    <member kind="function">
      <type>Falloff *</type>
      <name>create</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>a9f3c908b8d496b742a65916e2c5acdb6</anchor>
      <arglist>(std::string name, Args... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reg</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>af3f7e5331288e181ad2ab1cae35ed309</anchor>
      <arglist>(const std::string &amp;name, std::function&lt; Falloff *(Args...)&gt; f)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>m_synonyms</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>a904980653acc57d9159103c69563ad33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>m_deprecated_names</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>a70208c307e16f746227c63f6b8451239</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Factory&lt; Kinetics &gt;</name>
    <filename>classCantera_1_1Factory.html</filename>
    <base>Cantera::FactoryBase</base>
    <member kind="function">
      <type>Kinetics *</type>
      <name>create</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>a9f3c908b8d496b742a65916e2c5acdb6</anchor>
      <arglist>(std::string name, Args... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reg</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>af3f7e5331288e181ad2ab1cae35ed309</anchor>
      <arglist>(const std::string &amp;name, std::function&lt; Kinetics *(Args...)&gt; f)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>m_synonyms</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>a904980653acc57d9159103c69563ad33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>m_deprecated_names</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>a70208c307e16f746227c63f6b8451239</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Factory&lt; PDSS &gt;</name>
    <filename>classCantera_1_1Factory.html</filename>
    <base>Cantera::FactoryBase</base>
    <member kind="function">
      <type>PDSS *</type>
      <name>create</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>a9f3c908b8d496b742a65916e2c5acdb6</anchor>
      <arglist>(std::string name, Args... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reg</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>af3f7e5331288e181ad2ab1cae35ed309</anchor>
      <arglist>(const std::string &amp;name, std::function&lt; PDSS *(Args...)&gt; f)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>m_synonyms</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>a904980653acc57d9159103c69563ad33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>m_deprecated_names</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>a70208c307e16f746227c63f6b8451239</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Factory&lt; ReactorBase &gt;</name>
    <filename>classCantera_1_1Factory.html</filename>
    <base>Cantera::FactoryBase</base>
    <member kind="function">
      <type>ReactorBase *</type>
      <name>create</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>a9f3c908b8d496b742a65916e2c5acdb6</anchor>
      <arglist>(std::string name, Args... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reg</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>af3f7e5331288e181ad2ab1cae35ed309</anchor>
      <arglist>(const std::string &amp;name, std::function&lt; ReactorBase *(Args...)&gt; f)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>m_synonyms</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>a904980653acc57d9159103c69563ad33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>m_deprecated_names</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>a70208c307e16f746227c63f6b8451239</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Factory&lt; ThermoPhase &gt;</name>
    <filename>classCantera_1_1Factory.html</filename>
    <base>Cantera::FactoryBase</base>
    <member kind="function">
      <type>ThermoPhase *</type>
      <name>create</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>a9f3c908b8d496b742a65916e2c5acdb6</anchor>
      <arglist>(std::string name, Args... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reg</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>af3f7e5331288e181ad2ab1cae35ed309</anchor>
      <arglist>(const std::string &amp;name, std::function&lt; ThermoPhase *(Args...)&gt; f)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>m_synonyms</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>a904980653acc57d9159103c69563ad33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>m_deprecated_names</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>a70208c307e16f746227c63f6b8451239</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Factory&lt; Transport &gt;</name>
    <filename>classCantera_1_1Factory.html</filename>
    <base>Cantera::FactoryBase</base>
    <member kind="function">
      <type>Transport *</type>
      <name>create</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>a9f3c908b8d496b742a65916e2c5acdb6</anchor>
      <arglist>(std::string name, Args... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reg</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>af3f7e5331288e181ad2ab1cae35ed309</anchor>
      <arglist>(const std::string &amp;name, std::function&lt; Transport *(Args...)&gt; f)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>m_synonyms</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>a904980653acc57d9159103c69563ad33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>m_deprecated_names</name>
      <anchorfile>classCantera_1_1Factory.html</anchorfile>
      <anchor>a70208c307e16f746227c63f6b8451239</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rate1&lt; Cantera::Arrhenius &gt;</name>
    <filename>classCantera_1_1Rate1.html</filename>
    <member kind="function">
      <type>void</type>
      <name>install</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>af81bc0dd28bd940c3d6f6291c0e5bab6</anchor>
      <arglist>(size_t rxnNumber, const Cantera::Arrhenius &amp;rate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replace</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a998297d0d63db051793d7b7e62d9bee7</anchor>
      <arglist>(size_t rxnNumber, const Cantera::Arrhenius &amp;rate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_C</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a34f4a70d7ddceff8933b2355763ed69f</anchor>
      <arglist>(const doublereal *c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a9af886c1f8a40bd2da1acb497a4745fa</anchor>
      <arglist>(doublereal T, doublereal logT, doublereal *values)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>effectivePreExponentialFactor</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>abfc1ee2c922be69da429b0e66871db44</anchor>
      <arglist>(size_t irxn)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>effectiveActivationEnergy_R</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>aa846c6353dee42f09fb6a1ee4c5356aa</anchor>
      <arglist>(size_t irxn)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>effectiveTemperatureExponent</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a13313dd31d169a480a60162fc3f2c5f4</anchor>
      <arglist>(size_t irxn)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; size_t, size_t &gt;</type>
      <name>m_indices</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a623c3ac2ad3e16e78ddfc91de68ff2a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rate1&lt; Cantera::ChebyshevRate &gt;</name>
    <filename>classCantera_1_1Rate1.html</filename>
    <member kind="function">
      <type>void</type>
      <name>install</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>af81bc0dd28bd940c3d6f6291c0e5bab6</anchor>
      <arglist>(size_t rxnNumber, const Cantera::ChebyshevRate &amp;rate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replace</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a998297d0d63db051793d7b7e62d9bee7</anchor>
      <arglist>(size_t rxnNumber, const Cantera::ChebyshevRate &amp;rate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_C</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a34f4a70d7ddceff8933b2355763ed69f</anchor>
      <arglist>(const doublereal *c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a9af886c1f8a40bd2da1acb497a4745fa</anchor>
      <arglist>(doublereal T, doublereal logT, doublereal *values)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>effectivePreExponentialFactor</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>abfc1ee2c922be69da429b0e66871db44</anchor>
      <arglist>(size_t irxn)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>effectiveActivationEnergy_R</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>aa846c6353dee42f09fb6a1ee4c5356aa</anchor>
      <arglist>(size_t irxn)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>effectiveTemperatureExponent</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a13313dd31d169a480a60162fc3f2c5f4</anchor>
      <arglist>(size_t irxn)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; size_t, size_t &gt;</type>
      <name>m_indices</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a623c3ac2ad3e16e78ddfc91de68ff2a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rate1&lt; Cantera::Plog &gt;</name>
    <filename>classCantera_1_1Rate1.html</filename>
    <member kind="function">
      <type>void</type>
      <name>install</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>af81bc0dd28bd940c3d6f6291c0e5bab6</anchor>
      <arglist>(size_t rxnNumber, const Cantera::Plog &amp;rate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replace</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a998297d0d63db051793d7b7e62d9bee7</anchor>
      <arglist>(size_t rxnNumber, const Cantera::Plog &amp;rate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_C</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a34f4a70d7ddceff8933b2355763ed69f</anchor>
      <arglist>(const doublereal *c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a9af886c1f8a40bd2da1acb497a4745fa</anchor>
      <arglist>(doublereal T, doublereal logT, doublereal *values)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>effectivePreExponentialFactor</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>abfc1ee2c922be69da429b0e66871db44</anchor>
      <arglist>(size_t irxn)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>effectiveActivationEnergy_R</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>aa846c6353dee42f09fb6a1ee4c5356aa</anchor>
      <arglist>(size_t irxn)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>effectiveTemperatureExponent</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a13313dd31d169a480a60162fc3f2c5f4</anchor>
      <arglist>(size_t irxn)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; size_t, size_t &gt;</type>
      <name>m_indices</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a623c3ac2ad3e16e78ddfc91de68ff2a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rate1&lt; Cantera::SurfaceArrhenius &gt;</name>
    <filename>classCantera_1_1Rate1.html</filename>
    <member kind="function">
      <type>void</type>
      <name>install</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>af81bc0dd28bd940c3d6f6291c0e5bab6</anchor>
      <arglist>(size_t rxnNumber, const Cantera::SurfaceArrhenius &amp;rate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replace</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a998297d0d63db051793d7b7e62d9bee7</anchor>
      <arglist>(size_t rxnNumber, const Cantera::SurfaceArrhenius &amp;rate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_C</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a34f4a70d7ddceff8933b2355763ed69f</anchor>
      <arglist>(const doublereal *c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a9af886c1f8a40bd2da1acb497a4745fa</anchor>
      <arglist>(doublereal T, doublereal logT, doublereal *values)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>effectivePreExponentialFactor</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>abfc1ee2c922be69da429b0e66871db44</anchor>
      <arglist>(size_t irxn)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>effectiveActivationEnergy_R</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>aa846c6353dee42f09fb6a1ee4c5356aa</anchor>
      <arglist>(size_t irxn)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>effectiveTemperatureExponent</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a13313dd31d169a480a60162fc3f2c5f4</anchor>
      <arglist>(size_t irxn)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; size_t, size_t &gt;</type>
      <name>m_indices</name>
      <anchorfile>classCantera_1_1Rate1.html</anchorfile>
      <anchor>a623c3ac2ad3e16e78ddfc91de68ff2a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tpx::CarbonDioxide</name>
    <filename>classtpx_1_1CarbonDioxide.html</filename>
    <base>tpx::Substance</base>
    <member kind="function">
      <type>double</type>
      <name>MolWt</name>
      <anchorfile>classtpx_1_1CarbonDioxide.html</anchorfile>
      <anchor>a3a6834ef65036635f3e2cae94dbb32b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tcrit</name>
      <anchorfile>classtpx_1_1CarbonDioxide.html</anchorfile>
      <anchor>aa468ba63b38301c21ba08ee855ef2459</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Pcrit</name>
      <anchorfile>classtpx_1_1CarbonDioxide.html</anchorfile>
      <anchor>adde4d7b5872ca646ceb136cacd4f789d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Vcrit</name>
      <anchorfile>classtpx_1_1CarbonDioxide.html</anchorfile>
      <anchor>a1b2ebeed7b7854ebbbfef4cdc185c98d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tmin</name>
      <anchorfile>classtpx_1_1CarbonDioxide.html</anchorfile>
      <anchor>a251399b57874c31eaa40e93e09f461ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tmax</name>
      <anchorfile>classtpx_1_1CarbonDioxide.html</anchorfile>
      <anchor>a1e66e321a9079e4a12be75ce2cbe0e0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Pp</name>
      <anchorfile>classtpx_1_1CarbonDioxide.html</anchorfile>
      <anchor>ad48d7e7b63eb737fb8142a7872955679</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>up</name>
      <anchorfile>classtpx_1_1CarbonDioxide.html</anchorfile>
      <anchor>aee0dc6d50ff8d4a69509d86b91b12af3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sp</name>
      <anchorfile>classtpx_1_1CarbonDioxide.html</anchorfile>
      <anchor>a83e0c60575e3f4e36661ac27f4c75dbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Psat</name>
      <anchorfile>classtpx_1_1CarbonDioxide.html</anchorfile>
      <anchor>ae877ae98e4a13322b5bcfe41861fa9ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>ldens</name>
      <anchorfile>classtpx_1_1CarbonDioxide.html</anchorfile>
      <anchor>aeac2153ad1694decc699c2486be3017e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>C</name>
      <anchorfile>classtpx_1_1CarbonDioxide.html</anchorfile>
      <anchor>acdb9b82469fa93580a4f329402b990b3</anchor>
      <arglist>(int jm, double, double, double, double)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>Cprime</name>
      <anchorfile>classtpx_1_1CarbonDioxide.html</anchorfile>
      <anchor>aef6184fddd53a0d9d4be50de4621fb68</anchor>
      <arglist>(int i, double, double, double)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>I</name>
      <anchorfile>classtpx_1_1CarbonDioxide.html</anchorfile>
      <anchor>a7d180a10def8500e056eab579b9669d9</anchor>
      <arglist>(int i, double, double)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>H</name>
      <anchorfile>classtpx_1_1CarbonDioxide.html</anchorfile>
      <anchor>ac4d9e8cde43646415e3b6cef79d54437</anchor>
      <arglist>(int i, double egrho)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tpx::Heptane</name>
    <filename>classtpx_1_1Heptane.html</filename>
    <base>tpx::Substance</base>
    <member kind="function">
      <type>double</type>
      <name>MolWt</name>
      <anchorfile>classtpx_1_1Heptane.html</anchorfile>
      <anchor>a3a6834ef65036635f3e2cae94dbb32b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tcrit</name>
      <anchorfile>classtpx_1_1Heptane.html</anchorfile>
      <anchor>aa468ba63b38301c21ba08ee855ef2459</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Pcrit</name>
      <anchorfile>classtpx_1_1Heptane.html</anchorfile>
      <anchor>adde4d7b5872ca646ceb136cacd4f789d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Vcrit</name>
      <anchorfile>classtpx_1_1Heptane.html</anchorfile>
      <anchor>a1b2ebeed7b7854ebbbfef4cdc185c98d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tmin</name>
      <anchorfile>classtpx_1_1Heptane.html</anchorfile>
      <anchor>a251399b57874c31eaa40e93e09f461ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tmax</name>
      <anchorfile>classtpx_1_1Heptane.html</anchorfile>
      <anchor>a1e66e321a9079e4a12be75ce2cbe0e0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Pp</name>
      <anchorfile>classtpx_1_1Heptane.html</anchorfile>
      <anchor>ad48d7e7b63eb737fb8142a7872955679</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>up</name>
      <anchorfile>classtpx_1_1Heptane.html</anchorfile>
      <anchor>aee0dc6d50ff8d4a69509d86b91b12af3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sp</name>
      <anchorfile>classtpx_1_1Heptane.html</anchorfile>
      <anchor>a83e0c60575e3f4e36661ac27f4c75dbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Psat</name>
      <anchorfile>classtpx_1_1Heptane.html</anchorfile>
      <anchor>ae877ae98e4a13322b5bcfe41861fa9ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>ldens</name>
      <anchorfile>classtpx_1_1Heptane.html</anchorfile>
      <anchor>aeac2153ad1694decc699c2486be3017e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>C</name>
      <anchorfile>classtpx_1_1Heptane.html</anchorfile>
      <anchor>acdb9b82469fa93580a4f329402b990b3</anchor>
      <arglist>(int jm, double, double, double, double)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>Cprime</name>
      <anchorfile>classtpx_1_1Heptane.html</anchorfile>
      <anchor>aef6184fddd53a0d9d4be50de4621fb68</anchor>
      <arglist>(int i, double, double, double)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>I</name>
      <anchorfile>classtpx_1_1Heptane.html</anchorfile>
      <anchor>a7d180a10def8500e056eab579b9669d9</anchor>
      <arglist>(int i, double, double)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>H</name>
      <anchorfile>classtpx_1_1Heptane.html</anchorfile>
      <anchor>ac4d9e8cde43646415e3b6cef79d54437</anchor>
      <arglist>(int i, double egrho)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tpx::HFC134a</name>
    <filename>classtpx_1_1HFC134a.html</filename>
    <base>tpx::Substance</base>
    <member kind="function">
      <type>double</type>
      <name>MolWt</name>
      <anchorfile>classtpx_1_1HFC134a.html</anchorfile>
      <anchor>a3a6834ef65036635f3e2cae94dbb32b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tcrit</name>
      <anchorfile>classtpx_1_1HFC134a.html</anchorfile>
      <anchor>aa468ba63b38301c21ba08ee855ef2459</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Pcrit</name>
      <anchorfile>classtpx_1_1HFC134a.html</anchorfile>
      <anchor>adde4d7b5872ca646ceb136cacd4f789d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Vcrit</name>
      <anchorfile>classtpx_1_1HFC134a.html</anchorfile>
      <anchor>a1b2ebeed7b7854ebbbfef4cdc185c98d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tmin</name>
      <anchorfile>classtpx_1_1HFC134a.html</anchorfile>
      <anchor>a251399b57874c31eaa40e93e09f461ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tmax</name>
      <anchorfile>classtpx_1_1HFC134a.html</anchorfile>
      <anchor>a1e66e321a9079e4a12be75ce2cbe0e0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>up</name>
      <anchorfile>classtpx_1_1HFC134a.html</anchorfile>
      <anchor>aee0dc6d50ff8d4a69509d86b91b12af3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sp</name>
      <anchorfile>classtpx_1_1HFC134a.html</anchorfile>
      <anchor>a83e0c60575e3f4e36661ac27f4c75dbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Psat</name>
      <anchorfile>classtpx_1_1HFC134a.html</anchorfile>
      <anchor>ae877ae98e4a13322b5bcfe41861fa9ea</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tpx::hydrogen</name>
    <filename>classtpx_1_1hydrogen.html</filename>
    <base>tpx::Substance</base>
    <member kind="function">
      <type>double</type>
      <name>MolWt</name>
      <anchorfile>classtpx_1_1hydrogen.html</anchorfile>
      <anchor>a3a6834ef65036635f3e2cae94dbb32b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tcrit</name>
      <anchorfile>classtpx_1_1hydrogen.html</anchorfile>
      <anchor>aa468ba63b38301c21ba08ee855ef2459</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Pcrit</name>
      <anchorfile>classtpx_1_1hydrogen.html</anchorfile>
      <anchor>adde4d7b5872ca646ceb136cacd4f789d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Vcrit</name>
      <anchorfile>classtpx_1_1hydrogen.html</anchorfile>
      <anchor>a1b2ebeed7b7854ebbbfef4cdc185c98d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tmin</name>
      <anchorfile>classtpx_1_1hydrogen.html</anchorfile>
      <anchor>a251399b57874c31eaa40e93e09f461ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tmax</name>
      <anchorfile>classtpx_1_1hydrogen.html</anchorfile>
      <anchor>a1e66e321a9079e4a12be75ce2cbe0e0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>up</name>
      <anchorfile>classtpx_1_1hydrogen.html</anchorfile>
      <anchor>aee0dc6d50ff8d4a69509d86b91b12af3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sp</name>
      <anchorfile>classtpx_1_1hydrogen.html</anchorfile>
      <anchor>a83e0c60575e3f4e36661ac27f4c75dbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Psat</name>
      <anchorfile>classtpx_1_1hydrogen.html</anchorfile>
      <anchor>ae877ae98e4a13322b5bcfe41861fa9ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>ldens</name>
      <anchorfile>classtpx_1_1hydrogen.html</anchorfile>
      <anchor>aeac2153ad1694decc699c2486be3017e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tpx::methane</name>
    <filename>classtpx_1_1methane.html</filename>
    <base>tpx::Substance</base>
    <member kind="function">
      <type>double</type>
      <name>MolWt</name>
      <anchorfile>classtpx_1_1methane.html</anchorfile>
      <anchor>a3a6834ef65036635f3e2cae94dbb32b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tcrit</name>
      <anchorfile>classtpx_1_1methane.html</anchorfile>
      <anchor>aa468ba63b38301c21ba08ee855ef2459</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Pcrit</name>
      <anchorfile>classtpx_1_1methane.html</anchorfile>
      <anchor>adde4d7b5872ca646ceb136cacd4f789d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Vcrit</name>
      <anchorfile>classtpx_1_1methane.html</anchorfile>
      <anchor>a1b2ebeed7b7854ebbbfef4cdc185c98d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tmin</name>
      <anchorfile>classtpx_1_1methane.html</anchorfile>
      <anchor>a251399b57874c31eaa40e93e09f461ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tmax</name>
      <anchorfile>classtpx_1_1methane.html</anchorfile>
      <anchor>a1e66e321a9079e4a12be75ce2cbe0e0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>up</name>
      <anchorfile>classtpx_1_1methane.html</anchorfile>
      <anchor>aee0dc6d50ff8d4a69509d86b91b12af3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sp</name>
      <anchorfile>classtpx_1_1methane.html</anchorfile>
      <anchor>a83e0c60575e3f4e36661ac27f4c75dbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Psat</name>
      <anchorfile>classtpx_1_1methane.html</anchorfile>
      <anchor>ae877ae98e4a13322b5bcfe41861fa9ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>ldens</name>
      <anchorfile>classtpx_1_1methane.html</anchorfile>
      <anchor>aeac2153ad1694decc699c2486be3017e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tpx::nitrogen</name>
    <filename>classtpx_1_1nitrogen.html</filename>
    <base>tpx::Substance</base>
    <member kind="function">
      <type>double</type>
      <name>MolWt</name>
      <anchorfile>classtpx_1_1nitrogen.html</anchorfile>
      <anchor>a3a6834ef65036635f3e2cae94dbb32b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tcrit</name>
      <anchorfile>classtpx_1_1nitrogen.html</anchorfile>
      <anchor>aa468ba63b38301c21ba08ee855ef2459</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Pcrit</name>
      <anchorfile>classtpx_1_1nitrogen.html</anchorfile>
      <anchor>adde4d7b5872ca646ceb136cacd4f789d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Vcrit</name>
      <anchorfile>classtpx_1_1nitrogen.html</anchorfile>
      <anchor>a1b2ebeed7b7854ebbbfef4cdc185c98d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tmin</name>
      <anchorfile>classtpx_1_1nitrogen.html</anchorfile>
      <anchor>a251399b57874c31eaa40e93e09f461ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tmax</name>
      <anchorfile>classtpx_1_1nitrogen.html</anchorfile>
      <anchor>a1e66e321a9079e4a12be75ce2cbe0e0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>up</name>
      <anchorfile>classtpx_1_1nitrogen.html</anchorfile>
      <anchor>aee0dc6d50ff8d4a69509d86b91b12af3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sp</name>
      <anchorfile>classtpx_1_1nitrogen.html</anchorfile>
      <anchor>a83e0c60575e3f4e36661ac27f4c75dbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Psat</name>
      <anchorfile>classtpx_1_1nitrogen.html</anchorfile>
      <anchor>ae877ae98e4a13322b5bcfe41861fa9ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>ldens</name>
      <anchorfile>classtpx_1_1nitrogen.html</anchorfile>
      <anchor>aeac2153ad1694decc699c2486be3017e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>C</name>
      <anchorfile>classtpx_1_1nitrogen.html</anchorfile>
      <anchor>a82ca2c654361158c598e9a32a0295ef0</anchor>
      <arglist>(int i, double rt, double rt2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tpx::oxygen</name>
    <filename>classtpx_1_1oxygen.html</filename>
    <base>tpx::Substance</base>
    <member kind="function">
      <type>double</type>
      <name>MolWt</name>
      <anchorfile>classtpx_1_1oxygen.html</anchorfile>
      <anchor>a3a6834ef65036635f3e2cae94dbb32b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tcrit</name>
      <anchorfile>classtpx_1_1oxygen.html</anchorfile>
      <anchor>aa468ba63b38301c21ba08ee855ef2459</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Pcrit</name>
      <anchorfile>classtpx_1_1oxygen.html</anchorfile>
      <anchor>adde4d7b5872ca646ceb136cacd4f789d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Vcrit</name>
      <anchorfile>classtpx_1_1oxygen.html</anchorfile>
      <anchor>a1b2ebeed7b7854ebbbfef4cdc185c98d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tmin</name>
      <anchorfile>classtpx_1_1oxygen.html</anchorfile>
      <anchor>a251399b57874c31eaa40e93e09f461ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tmax</name>
      <anchorfile>classtpx_1_1oxygen.html</anchorfile>
      <anchor>a1e66e321a9079e4a12be75ce2cbe0e0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>up</name>
      <anchorfile>classtpx_1_1oxygen.html</anchorfile>
      <anchor>aee0dc6d50ff8d4a69509d86b91b12af3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sp</name>
      <anchorfile>classtpx_1_1oxygen.html</anchorfile>
      <anchor>a83e0c60575e3f4e36661ac27f4c75dbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Psat</name>
      <anchorfile>classtpx_1_1oxygen.html</anchorfile>
      <anchor>ae877ae98e4a13322b5bcfe41861fa9ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>ldens</name>
      <anchorfile>classtpx_1_1oxygen.html</anchorfile>
      <anchor>aeac2153ad1694decc699c2486be3017e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>C</name>
      <anchorfile>classtpx_1_1oxygen.html</anchorfile>
      <anchor>a82ca2c654361158c598e9a32a0295ef0</anchor>
      <arglist>(int i, double rt, double rt2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tpx::Substance</name>
    <filename>classtpx_1_1Substance.html</filename>
    <member kind="function">
      <type>double</type>
      <name>hp</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a0f52c6ebb68ff9b77d7128b327f5e260</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>gp</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a16fbba3ca62d25db98125ae80ed819e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_TPp</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>af072477533d7db26bb794ffa5850c327</anchor>
      <arglist>(double t0, double p0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>aa965059e89078025de24aa36d2f75547</anchor>
      <arglist>(PropertyPair::type XY, double x0, double y0)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>MolWt</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a2ea4d16dadbdefc0974b5e1cacee503c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>Tcrit</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a9f4b52abb0d29b114cbbe607cfc65ee4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>Pcrit</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>abecd913a47895fc4778aa1a9696c1bf2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>Vcrit</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a0e91914b5426e59e74c0745acac778c6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>Tmin</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a4fea184438069f2f8f0fecdb4e5b0cb6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>Tmax</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a1f1f8b6bc7f145e768cbbbb2b5bdd755</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a16e46e7c65078b1877d239968152a04e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>formula</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>af33dad2e3dbb7dcdf13c17006bc10944</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>P</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a658d644f6cbccdbda64dd6302d1a8756</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Temp</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a4efc7d2cbf3109780ede86d73136828d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>v</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a9dc560f823d259317c6badb63ef680dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>u</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a278df07b448d9fee06d0dd57a936df91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>h</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a39d6d8ad0a51a776083a8d10d4dba5e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>s</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>afc12f559219a4823dfb57ea9b22f94f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>f</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a862b7a76b68dd93bcd8c820b9054206a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>g</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a630427090c84f49ccb0bbbdc75da0f42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>cv</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a3aac56ef1286c3d1d17933c16f88a82b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>cp</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a140b55825445601080143afb98dae1ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>dPsdT</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>acf2b6311cdeab1921fb5e53559a5d65d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tsat</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>ada1b2c788ddae672d8bccd45eeb8d961</anchor>
      <arglist>(double p)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>x</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a1d181ea8ec179ff8046ef6cf2a8aa232</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>TwoPhase</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a510c2c167717863f92f671edb836702e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual double</type>
      <name>Psat</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a7304a556021c0fee39d4e7dad5247662</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual double</type>
      <name>up</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a08e7ae98c2a2f0a72ac3292ddfc7d529</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual double</type>
      <name>sp</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a6d05ed586dd83b50b9b3c9c84c54d6f4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>Lever</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a598d8ed6f377bdbafcd43f0bdde5e0b5</anchor>
      <arglist>(int itp, double sat, double val, propertyFlag::type ifunc)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>update_sat</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>adc32482618db1d8e61e8a5367b7bc998</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>MolWt</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a2ea4d16dadbdefc0974b5e1cacee503c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>Tcrit</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a9f4b52abb0d29b114cbbe607cfc65ee4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>Pcrit</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>abecd913a47895fc4778aa1a9696c1bf2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>Vcrit</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a0e91914b5426e59e74c0745acac778c6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>Tmin</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a4fea184438069f2f8f0fecdb4e5b0cb6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>Tmax</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a1f1f8b6bc7f145e768cbbbb2b5bdd755</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a16e46e7c65078b1877d239968152a04e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>formula</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>af33dad2e3dbb7dcdf13c17006bc10944</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>P</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a658d644f6cbccdbda64dd6302d1a8756</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Temp</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a4efc7d2cbf3109780ede86d73136828d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>v</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a9dc560f823d259317c6badb63ef680dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>u</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a278df07b448d9fee06d0dd57a936df91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>h</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a39d6d8ad0a51a776083a8d10d4dba5e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>s</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>afc12f559219a4823dfb57ea9b22f94f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>f</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a862b7a76b68dd93bcd8c820b9054206a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>g</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a630427090c84f49ccb0bbbdc75da0f42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>cv</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a3aac56ef1286c3d1d17933c16f88a82b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>cp</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a140b55825445601080143afb98dae1ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>dPsdT</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>acf2b6311cdeab1921fb5e53559a5d65d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tsat</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>ada1b2c788ddae672d8bccd45eeb8d961</anchor>
      <arglist>(double p)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>x</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a1d181ea8ec179ff8046ef6cf2a8aa232</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>TwoPhase</name>
      <anchorfile>classtpx_1_1Substance.html</anchorfile>
      <anchor>a510c2c167717863f92f671edb836702e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tpx::water</name>
    <filename>classtpx_1_1water.html</filename>
    <base>tpx::Substance</base>
    <member kind="function">
      <type>double</type>
      <name>MolWt</name>
      <anchorfile>classtpx_1_1water.html</anchorfile>
      <anchor>a3a6834ef65036635f3e2cae94dbb32b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tcrit</name>
      <anchorfile>classtpx_1_1water.html</anchorfile>
      <anchor>aa468ba63b38301c21ba08ee855ef2459</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Pcrit</name>
      <anchorfile>classtpx_1_1water.html</anchorfile>
      <anchor>adde4d7b5872ca646ceb136cacd4f789d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Vcrit</name>
      <anchorfile>classtpx_1_1water.html</anchorfile>
      <anchor>a1b2ebeed7b7854ebbbfef4cdc185c98d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tmin</name>
      <anchorfile>classtpx_1_1water.html</anchorfile>
      <anchor>a251399b57874c31eaa40e93e09f461ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tmax</name>
      <anchorfile>classtpx_1_1water.html</anchorfile>
      <anchor>a1e66e321a9079e4a12be75ce2cbe0e0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>up</name>
      <anchorfile>classtpx_1_1water.html</anchorfile>
      <anchor>aee0dc6d50ff8d4a69509d86b91b12af3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sp</name>
      <anchorfile>classtpx_1_1water.html</anchorfile>
      <anchor>a83e0c60575e3f4e36661ac27f4c75dbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Psat</name>
      <anchorfile>classtpx_1_1water.html</anchorfile>
      <anchor>ae877ae98e4a13322b5bcfe41861fa9ea</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Cantera</name>
    <filename>namespaceCantera.html</filename>
    <class kind="class">Cantera::Adsorbate</class>
    <class kind="class">Cantera::AnyMap</class>
    <class kind="class">Cantera::AnyValue</class>
    <class kind="class">Cantera::Application</class>
    <class kind="class">Cantera::AqueousKinetics</class>
    <class kind="class">Cantera::Array2D</class>
    <class kind="class">Cantera::ArraySizeError</class>
    <class kind="class">Cantera::Arrhenius</class>
    <class kind="class">Cantera::Arrhenius1</class>
    <class kind="struct">Cantera::atomicWeightData</class>
    <class kind="class">Cantera::AxiStagnFlow</class>
    <class kind="class">Cantera::BandMatrix</class>
    <class kind="class">Cantera::Bdry1D</class>
    <class kind="class">Cantera::BulkKinetics</class>
    <class kind="class">Cantera::C1</class>
    <class kind="class">Cantera::C2</class>
    <class kind="class">Cantera::C3</class>
    <class kind="class">Cantera::C_AnyN</class>
    <class kind="struct">Cantera::CachedValue</class>
    <class kind="class">Cantera::CanteraError</class>
    <class kind="class">Cantera::ChebyshevRate</class>
    <class kind="class">Cantera::ChebyshevReaction</class>
    <class kind="class">Cantera::ChemEquil</class>
    <class kind="class">Cantera::ChemicallyActivatedReaction</class>
    <class kind="class">Cantera::clockWC</class>
    <class kind="class">Cantera::Composite1</class>
    <class kind="class">Cantera::Const1</class>
    <class kind="class">Cantera::ConstCpPoly</class>
    <class kind="class">Cantera::ConstDensityThermo</class>
    <class kind="class">Cantera::ConstPressureReactor</class>
    <class kind="class">Cantera::Cos1</class>
    <class kind="struct">Cantera::CoverageDependency</class>
    <class kind="class">Cantera::CVodesIntegrator</class>
    <class kind="class">Cantera::DAE_Solver</class>
    <class kind="class">Cantera::DebyeHuckel</class>
    <class kind="class">Cantera::DenseMatrix</class>
    <class kind="class">Cantera::Diff1</class>
    <class kind="class">Cantera::Domain1D</class>
    <class kind="class">Cantera::DustyGasTransport</class>
    <class kind="class">Cantera::Edge</class>
    <class kind="class">Cantera::EdgeKinetics</class>
    <class kind="class">Cantera::EdgePhase</class>
    <class kind="class">Cantera::ElectrochemicalReaction</class>
    <class kind="class">Cantera::ElementaryReaction</class>
    <class kind="class">Cantera::Empty1D</class>
    <class kind="class">Cantera::EquilOpt</class>
    <class kind="class">Cantera::Exp1</class>
    <class kind="class">Cantera::Factory</class>
    <class kind="class">Cantera::FactoryBase</class>
    <class kind="class">Cantera::Falloff</class>
    <class kind="class">Cantera::FalloffFactory</class>
    <class kind="class">Cantera::FalloffMgr</class>
    <class kind="class">Cantera::FalloffReaction</class>
    <class kind="class">Cantera::FixedChemPotSSTP</class>
    <class kind="class">Cantera::FlowDevice</class>
    <class kind="class">Cantera::FlowReactor</class>
    <class kind="class">Cantera::Fourier1</class>
    <class kind="class">Cantera::FreeFlame</class>
    <class kind="class">Cantera::Func1</class>
    <class kind="class">Cantera::FuncEval</class>
    <class kind="class">Cantera::GasKinetics</class>
    <class kind="class">Cantera::GasTransport</class>
    <class kind="class">Cantera::GasTransportData</class>
    <class kind="class">Cantera::Gaussian</class>
    <class kind="class">Cantera::GeneralMatrix</class>
    <class kind="class">Cantera::GibbsExcessVPSSTP</class>
    <class kind="class">Cantera::Group</class>
    <class kind="class">Cantera::HighPressureGasTransport</class>
    <class kind="class">Cantera::HMWSoln</class>
    <class kind="class">Cantera::IDA_Solver</class>
    <class kind="class">Cantera::IdealGasConstPressureReactor</class>
    <class kind="class">Cantera::IdealGasMix</class>
    <class kind="class">Cantera::IdealGasPhase</class>
    <class kind="class">Cantera::IdealGasReactor</class>
    <class kind="class">Cantera::IdealMolalSoln</class>
    <class kind="class">Cantera::IdealSolidSolnPhase</class>
    <class kind="class">Cantera::IdealSolnGasVPSS</class>
    <class kind="class">Cantera::ImplicitSurfChem</class>
    <class kind="class">Cantera::IncompressibleSolid</class>
    <class kind="class">Cantera::IndexError</class>
    <class kind="class">Cantera::Inlet1D</class>
    <class kind="class">Cantera::Integrator</class>
    <class kind="class">Cantera::Interface</class>
    <class kind="class">Cantera::InterfaceKinetics</class>
    <class kind="class">Cantera::InterfaceReaction</class>
    <class kind="class">Cantera::IonFlow</class>
    <class kind="class">Cantera::IonGasTransport</class>
    <class kind="class">Cantera::IonsFromNeutralVPSSTP</class>
    <class kind="struct">Cantera::isotopeWeightData</class>
    <class kind="class">Cantera::Kinetics</class>
    <class kind="class">Cantera::KineticsFactory</class>
    <class kind="class">Cantera::LatticePhase</class>
    <class kind="class">Cantera::LatticeSolidPhase</class>
    <class kind="class">Cantera::LiquidTranInteraction</class>
    <class kind="class">Cantera::LiquidTransport</class>
    <class kind="class">Cantera::LiquidTransportData</class>
    <class kind="class">Cantera::LiquidTransportParams</class>
    <class kind="class">Cantera::Logger</class>
    <class kind="class">Cantera::LTI_Log_MoleFracs</class>
    <class kind="class">Cantera::LTI_MassFracs</class>
    <class kind="class">Cantera::LTI_MoleFracs</class>
    <class kind="class">Cantera::LTI_MoleFracs_ExpT</class>
    <class kind="class">Cantera::LTI_Pairwise_Interaction</class>
    <class kind="class">Cantera::LTI_StefanMaxwell_PPN</class>
    <class kind="class">Cantera::LTPError</class>
    <class kind="class">Cantera::LTPmodelError</class>
    <class kind="class">Cantera::LTPspecies</class>
    <class kind="class">Cantera::LTPspecies_Arrhenius</class>
    <class kind="class">Cantera::LTPspecies_Const</class>
    <class kind="class">Cantera::LTPspecies_ExpT</class>
    <class kind="class">Cantera::LTPspecies_Poly</class>
    <class kind="class">Cantera::MargulesVPSSTP</class>
    <class kind="class">Cantera::MaskellSolidSolnPhase</class>
    <class kind="class">Cantera::MassFlowController</class>
    <class kind="class">Cantera::Metal</class>
    <class kind="class">Cantera::MetalPhase</class>
    <class kind="class">Cantera::MetalSHEelectrons</class>
    <class kind="class">Cantera::MineralEQ3</class>
    <class kind="class">Cantera::MixedSolventElectrolyte</class>
    <class kind="class">Cantera::MixTransport</class>
    <class kind="class">Cantera::MixtureFugacityTP</class>
    <class kind="class">Cantera::MMCollisionInt</class>
    <class kind="class">Cantera::MolalityVPSSTP</class>
    <class kind="class">Cantera::MolarityIonicVPSSTP</class>
    <class kind="class">Cantera::Mu0Poly</class>
    <class kind="class">Cantera::MultiJac</class>
    <class kind="class">Cantera::MultiNewton</class>
    <class kind="class">Cantera::MultiPhase</class>
    <class kind="class">Cantera::MultiPhaseEquil</class>
    <class kind="class">Cantera::MultiSpeciesThermo</class>
    <class kind="class">Cantera::MultiTransport</class>
    <class kind="class">Cantera::Nasa9Poly1</class>
    <class kind="class">Cantera::Nasa9PolyMultiTempRegion</class>
    <class kind="class">Cantera::NasaPoly1</class>
    <class kind="class">Cantera::NasaPoly2</class>
    <class kind="class">Cantera::NotImplementedError</class>
    <class kind="class">Cantera::OneDim</class>
    <class kind="class">Cantera::Outlet1D</class>
    <class kind="class">Cantera::OutletRes1D</class>
    <class kind="class">Cantera::PDSS</class>
    <class kind="class">Cantera::PDSS_ConstVol</class>
    <class kind="class">Cantera::PDSS_HKFT</class>
    <class kind="class">Cantera::PDSS_IdealGas</class>
    <class kind="class">Cantera::PDSS_IonsFromNeutral</class>
    <class kind="class">Cantera::PDSS_Molar</class>
    <class kind="class">Cantera::PDSS_Nondimensional</class>
    <class kind="class">Cantera::PDSS_SSVol</class>
    <class kind="class">Cantera::PDSS_Water</class>
    <class kind="class">Cantera::Periodic1</class>
    <class kind="class">Cantera::Phase</class>
    <class kind="class">Cantera::PhaseCombo_Interaction</class>
    <class kind="class">Cantera::Plog</class>
    <class kind="class">Cantera::PlogReaction</class>
    <class kind="class">Cantera::PlusConstant1</class>
    <class kind="class">Cantera::Poly1</class>
    <class kind="class">Cantera::Pow1</class>
    <class kind="class">Cantera::PressureController</class>
    <class kind="class">Cantera::Product1</class>
    <class kind="class">Cantera::PureFluid</class>
    <class kind="class">Cantera::PureFluidPhase</class>
    <class kind="class">Cantera::Rate1</class>
    <class kind="class">Cantera::Ratio1</class>
    <class kind="class">Cantera::ReactingSurf1D</class>
    <class kind="class">Cantera::Reaction</class>
    <class kind="class">Cantera::ReactionPathDiagram</class>
    <class kind="class">Cantera::Reactor</class>
    <class kind="class">Cantera::ReactorBase</class>
    <class kind="class">Cantera::ReactorNet</class>
    <class kind="class">Cantera::RedlichKisterVPSSTP</class>
    <class kind="class">Cantera::RedlichKwongMFTP</class>
    <class kind="class">Cantera::Refiner</class>
    <class kind="class">Cantera::ResidData</class>
    <class kind="class">Cantera::ResidEval</class>
    <class kind="class">Cantera::ResidJacEval</class>
    <class kind="class">Cantera::ShomatePoly</class>
    <class kind="class">Cantera::ShomatePoly2</class>
    <class kind="class">Cantera::Sim1D</class>
    <class kind="class">Cantera::SimpleTransport</class>
    <class kind="class">Cantera::Sin1</class>
    <class kind="class">Cantera::SingleSpeciesTP</class>
    <class kind="class">Cantera::SolidTransport</class>
    <class kind="class">Cantera::SolidTransportData</class>
    <class kind="class">Cantera::solveSP</class>
    <class kind="class">Cantera::Species</class>
    <class kind="class">Cantera::SpeciesNode</class>
    <class kind="class">Cantera::SpeciesThermoInterpType</class>
    <class kind="class">Cantera::SRI</class>
    <class kind="class">Cantera::StFlow</class>
    <class kind="class">Cantera::STITbyPDSS</class>
    <class kind="class">Cantera::StoichSubstance</class>
    <class kind="class">Cantera::Sum1</class>
    <class kind="class">Cantera::Surf1D</class>
    <class kind="class">Cantera::SurfaceArrhenius</class>
    <class kind="class">Cantera::SurfPhase</class>
    <class kind="class">Cantera::Symm1D</class>
    <class kind="class">Cantera::ThermoFactory</class>
    <class kind="class">Cantera::ThermoPhase</class>
    <class kind="class">Cantera::ThirdBody</class>
    <class kind="class">Cantera::ThirdBodyCalc</class>
    <class kind="class">Cantera::ThreeBodyReaction</class>
    <class kind="struct">Cantera::timesConstant</class>
    <class kind="class">Cantera::TimesConstant1</class>
    <class kind="class">Cantera::Tortuosity</class>
    <class kind="class">Cantera::TortuosityMaxwell</class>
    <class kind="class">Cantera::TortuosityPercolation</class>
    <class kind="class">Cantera::Transport</class>
    <class kind="class">Cantera::TransportData</class>
    <class kind="class">Cantera::TransportDBError</class>
    <class kind="class">Cantera::TransportFactory</class>
    <class kind="class">Cantera::TransportParams</class>
    <class kind="class">Cantera::Troe</class>
    <class kind="class">Cantera::Unit</class>
    <class kind="class">Cantera::UnityLewisTransport</class>
    <class kind="class">Cantera::UnknownThermoPhaseModel</class>
    <class kind="class">Cantera::ValueCache</class>
    <class kind="class">Cantera::Valve</class>
    <class kind="class">Cantera::VCS_COUNTERS</class>
    <class kind="class">Cantera::vcs_MultiPhaseEquil</class>
    <class kind="class">Cantera::VCS_SOLVE</class>
    <class kind="class">Cantera::VCS_SPECIES_THERMO</class>
    <class kind="class">Cantera::vcs_SpeciesProperties</class>
    <class kind="class">Cantera::vcs_VolPhase</class>
    <class kind="class">Cantera::VPStandardStateTP</class>
    <class kind="class">Cantera::Wall</class>
    <class kind="class">Cantera::WaterProps</class>
    <class kind="class">Cantera::WaterPropsIAPWS</class>
    <class kind="class">Cantera::WaterPropsIAPWSphi</class>
    <class kind="class">Cantera::WaterSSTP</class>
    <class kind="class">Cantera::WaterTransport</class>
    <class kind="class">Cantera::XML_Error</class>
    <class kind="class">Cantera::XML_NoChild</class>
    <class kind="class">Cantera::XML_Node</class>
    <class kind="class">Cantera::XML_Reader</class>
    <class kind="class">Cantera::XML_TagMismatch</class>
    <member kind="typedef">
      <type>std::map&lt; std::string, doublereal &gt;</type>
      <name>compositionMap</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>af8df6ec5637fd288b82a7704a3b3a9af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, doublereal &gt;</type>
      <name>Composition</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a754330c8cca869ea8b63ecd351ba6bc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; double &gt;</type>
      <name>vector_fp</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a8a71f536c7e45bda27ec0f1df26e6420</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; int &gt;</type>
      <name>vector_int</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a7d0431e3a93eea8d736432705e278a76</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::vector&lt; size_t &gt; &gt;</type>
      <name>grouplist_t</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a157eb59b3f697ff928661f3b7aef12b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double(*</type>
      <name>VCS_FUNC_PTR</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a2a2f79d7b23ff31e864b57c38f4a013c</anchor>
      <arglist>)(double xval, double Vtarget, int varID, void *fptrPassthrough, int *err)</arglist>
    </member>
    <member kind="typedef">
      <type>ThermoPhase</type>
      <name>thermo_t</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a8236f718220883b27d0dcb93d3b0f328</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>VelocityBasis</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>ga6db7188408b57b95bb0da59376bfc9ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MethodType</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3006a5b9309b36eaa1cf179f1478b0cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BDF_Method</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3006a5b9309b36eaa1cf179f1478b0cda4dc224281882265419659bf9d90f15b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Adams_Method</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3006a5b9309b36eaa1cf179f1478b0cdad950bbf592683bbbf0816360eb721ddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IterType</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>af607f22e4873b3369e942d9ebb3e72b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Newton_Iter</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>af607f22e4873b3369e942d9ebb3e72b1aeff5fa7914600993f92bb2f1720a1474</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Functional_Iter</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>af607f22e4873b3369e942d9ebb3e72b1a80786b849d31f44e4d4413d886c6d406</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResidEval_Type_Enum</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a929b71317e0aa7f81336a73311423c14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Base_ResidEval</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a929b71317e0aa7f81336a73311423c14aa2c7a3e5e067f69fb2a99054cc956741</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JacBase_ResidEval</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a929b71317e0aa7f81336a73311423c14ab3ac1217d93227a4ccf060ae8f412e7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JacDelta_ResidEval</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a929b71317e0aa7f81336a73311423c14a0e79d1d952655ddf7eaab9917d81ff1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Base_ShowSolution</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a929b71317e0aa7f81336a73311423c14a71ca89d30f5bf39b5f3191a08fa0d128</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Base_LaggedSolutionComponents</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a929b71317e0aa7f81336a73311423c14aa5361e66d7f032bd558f11b7478aefc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IonSolnType_enumType</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a88d70d235195ec2b52777864ad4c8f25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LiquidTranMixingModel</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a83829adc9ae177c190cc479004e4f64f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TransportPropertyType</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ae666ac4d7c9e4a438b38567fb2286d76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LTPTemperatureDependenceType</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a662c63590e6315349ea3ee1efde9a9ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkFinite</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a29e84e6914c4eae9fe064bfa1d06644e</anchor>
      <arglist>(const double tmp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkFinite</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ad15e699994b1acff285903b2325a4739</anchor>
      <arglist>(const std::string &amp;name, double *values, size_t N)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>pypath</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa62a9244f884831f2532e5b749dd7441</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ct2ctml</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga106f302af6a947a6222a3450a5b888ab</anchor>
      <arglist>(const char *file, const int debug=0)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ct2ctml_string</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga3a8555f1c9005ce92613f4a0586942d3</anchor>
      <arglist>(const std::string &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ct_string2ctml_string</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga8eae1f606cb70310c81d4514bca5a3ba</anchor>
      <arglist>(const std::string &amp;cti)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ck2cti</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a6ea9a1b95781324c5037061411f9f5c3</anchor>
      <arglist>(const std::string &amp;in_file, const std::string &amp;thermo_file=&quot;&quot;, const std::string &amp;transport_file=&quot;&quot;, const std::string &amp;id_tag=&quot;gas&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFloat</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a4e40459194a52682b197f569c9b62166</anchor>
      <arglist>(XML_Node &amp;node, const std::string &amp;titleString, const doublereal value, const std::string &amp;unitsString=&quot;&quot;, const std::string &amp;typeString=&quot;&quot;, const doublereal minval=Undef, const doublereal maxval=Undef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFloatArray</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ad7e459e61d101fa9b2fa6830e31e912f</anchor>
      <arglist>(XML_Node &amp;node, const std::string &amp;titleString, const size_t n, const doublereal *const values, const std::string &amp;unitsString=&quot;&quot;, const std::string &amp;typeString=&quot;&quot;, const doublereal minval=Undef, const doublereal maxval=Undef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNamedFloatArray</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ad98432df36eb6daecd60077a2e23c247</anchor>
      <arglist>(XML_Node &amp;parentNode, const std::string &amp;name, const size_t n, const doublereal *const vals, const std::string units=&quot;&quot;, const std::string type=&quot;&quot;, const doublereal minval=Undef, const doublereal maxval=Undef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addString</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac6e65023b63f7dd2da9e4b3f2c9f0a8a</anchor>
      <arglist>(XML_Node &amp;node, const std::string &amp;titleString, const std::string &amp;valueString, const std::string &amp;typeString=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>getByTitle</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a22830fa43b159cc8d44cb2ec1136065a</anchor>
      <arglist>(const XML_Node &amp;node, const std::string &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getChildValue</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3e0985868e8a8cdb6edbcb343f34ff9d</anchor>
      <arglist>(const XML_Node &amp;parent, const std::string &amp;nameString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getString</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a05a96a4ce8aa80f5ac8b5758233ee7e1</anchor>
      <arglist>(const XML_Node &amp;node, const std::string &amp;titleString, std::string &amp;valueString, std::string &amp;typeString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getIntegers</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>afb627eac18e885fa109f9e1fbc89972c</anchor>
      <arglist>(const XML_Node &amp;node, std::map&lt; std::string, int &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>getFloat</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a2e9aaade157b93dc1eb37a0b9415fa17</anchor>
      <arglist>(const XML_Node &amp;parent, const std::string &amp;name, const std::string &amp;type=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>getFloatCurrent</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a25697ce0534df2d910858bce7679d723</anchor>
      <arglist>(const XML_Node &amp;currXML, const std::string &amp;type=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getOptionalFloat</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3030f811faac085d01d75f5458faa377</anchor>
      <arglist>(const XML_Node &amp;parent, const std::string &amp;name, doublereal &amp;fltRtn, const std::string &amp;type=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getOptionalModel</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a7567c346e5d8a2f93e9f3ad29d41192c</anchor>
      <arglist>(const XML_Node &amp;parent, const std::string &amp;nodeName, std::string &amp;modelName)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getInteger</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a9baf0207dd462de6f0f42889d050ee34</anchor>
      <arglist>(const XML_Node &amp;parent, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getFloatArray</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3788b1d5ec31632955bbe986507c92f9</anchor>
      <arglist>(const XML_Node &amp;node, vector_fp &amp;v, const bool convert=true, const std::string &amp;unitsString=&quot;&quot;, const std::string &amp;nodeName=&quot;floatArray&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMap</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>afe461e75516fdf27728de3395984a60e</anchor>
      <arglist>(const XML_Node &amp;node, std::map&lt; std::string, std::string &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPairs</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a7d1dd427ab9a4ccb2a79a54b2e5a1124</anchor>
      <arglist>(const XML_Node &amp;node, std::vector&lt; std::string &gt; &amp;key, std::vector&lt; std::string &gt; &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMatrixValues</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa68984c66e7a39219987d76e26947cba</anchor>
      <arglist>(const XML_Node &amp;node, const std::vector&lt; std::string &gt; &amp;keyStringRow, const std::vector&lt; std::string &gt; &amp;keyStringCol, Array2D &amp;returnValues, const bool convert=true, const bool matrixSymmetric=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getStringArray</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a13386d7c5da819b408b760ed48583e81</anchor>
      <arglist>(const XML_Node &amp;node, std::vector&lt; std::string &gt; &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Application *</type>
      <name>app</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a51cd5e4d317ed6ce123d2445a10f9ca4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogger</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a40134534f5b00a810ec7b6de60378b00</anchor>
      <arglist>(Logger *logwriter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writelog_direct</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac4371032ffdcf9faa7bbf310f49d53c8</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writelogendl</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aed3c4e18a21f764dc088d5957bcef148</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>warn_deprecated</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ad5d610e093906d9c26b279745352299e</anchor>
      <arglist>(const std::string &amp;method, const std::string &amp;extra=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>suppress_deprecation_warnings</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a2ad83de9e93f370a39fde7c30dd5dea6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_deprecation_warnings_fatal</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a5c8f2df8777aeeb40a231aa3027e2c3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>suppress_thermo_warnings</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac489f7de1ec9e60d50297def82e69d19</anchor>
      <arglist>(bool suppress=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>thermo_warnings_suppressed</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3a8219ec9db18f6c28ba0713bd8f98c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appdelete</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>adcc9c84192cb754858eb96a9e34b8167</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>thread_complete</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa6775f4e79890dac1c4e5eea51c57a1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>gitCommit</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a8ff0b68f65e38bc61bfaebe8ef95d6da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>get_XML_File</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a235b0367c7f1d78a08cf52c4a8c5448c</anchor>
      <arglist>(const std::string &amp;file, int debug=0)</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>get_XML_from_string</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a72da66d231def86c76d798b44f35b93e</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close_XML_File</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a8ffba23a8e87a86a0398f8fe1c2fe350</anchor>
      <arglist>(const std::string &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDirectory</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga15d00255903692a4a0e7f014b51d6047</anchor>
      <arglist>(const std::string &amp;dir)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getDataDirectories</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga56eae1a5159c796885f800504ee1d266</anchor>
      <arglist>(const std::string &amp;sep)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>findInputFile</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga144465952eb1270d254a049a31411540</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>toSI</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac347fe3805bf56396b7080870c39d530</anchor>
      <arglist>(const std::string &amp;unit)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>actEnergyToSI</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a83a2955049d3f9c4a08df5992fd28dca</anchor>
      <arglist>(const std::string &amp;unit)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>canteraRoot</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>gac2afc73862050157954586c8e4936f8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>split_at_pound</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aedf15343bc08490ec818bd41f5072d49</anchor>
      <arglist>(const std::string &amp;src, std::string &amp;file, std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>get_XML_Node</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a5c17be21d38335121399e8215a915e05</anchor>
      <arglist>(const std::string &amp;file_ID, XML_Node *root)</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>get_XML_NameID</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>addf5bf4ba81ede1e1c4799e39de9e337</anchor>
      <arglist>(const std::string &amp;nameTarget, const std::string &amp;file_ID, XML_Node *root)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePlotFile</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa308afb5e8df7d10697a897b570873eb</anchor>
      <arglist>(const std::string &amp;fname, const std::string &amp;fmt, const std::string &amp;plotTitle, const std::vector&lt; std::string &gt; &amp;names, const Array2D &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>outputTEC</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a48ec450fc41980730468311dd3d05053</anchor>
      <arglist>(std::ostream &amp;s, const std::string &amp;title, const std::vector&lt; std::string &gt; &amp;names, const Array2D &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>outputExcel</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aee6059b70728e56f33b9a6a4b2e731e2</anchor>
      <arglist>(std::ostream &amp;s, const std::string &amp;title, const std::vector&lt; std::string &gt; &amp;names, const Array2D &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>vec2str</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a5b722bf618cb150a186ff92c37581377</anchor>
      <arglist>(const vector_fp &amp;v, const std::string &amp;fmt=&quot;%g&quot;, const std::string &amp;sep=&quot;, &quot;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>stripnonprint</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ae2e25406ab30098069551a0b4c5d45de</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>compositionMap</type>
      <name>parseCompString</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aeb84fb8591813c96958522a5f62f1cc7</anchor>
      <arglist>(const std::string &amp;ss, const std::vector&lt; std::string &gt; &amp;names=std::vector&lt; std::string &gt;())</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>intValue</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a12e43976b9c806ebd37e48da389dbe7b</anchor>
      <arglist>(const std::string &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>fpValue</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a40ba7b5ab1b1b24301cb7efbef4ca7fb</anchor>
      <arglist>(const std::string &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>fpValueCheck</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac365a4fc99d3bcfa1281c6e58c74efec</anchor>
      <arglist>(const std::string &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>parseSpeciesName</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa55dee65bcc43472a343f99291ad8928</anchor>
      <arglist>(const std::string &amp;nameStr, std::string &amp;phaseName)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>strSItoDbl</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac80b2ff9e60bbba0a999ee807be8e838</anchor>
      <arglist>(const std::string &amp;strSI)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tokenizeString</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ad51b0173f30c42c9a48112c6e671218a</anchor>
      <arglist>(const std::string &amp;oval, std::vector&lt; std::string &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>copyString</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a77d436f7ba30e0d4cb86c18f6df945ec</anchor>
      <arglist>(const std::string &amp;source, char *dest, size_t length)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>trimCopy</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a767b1414783740533a57be03b8bd1e3d</anchor>
      <arglist>(const std::string &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toLowerCopy</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a793eb598985b264bd4d8f5d3a5258ef8</anchor>
      <arglist>(const std::string &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>caseInsensitiveEquals</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a4e26f1418e441d82847b41542216bcd9</anchor>
      <arglist>(const std::string &amp;input, const std::string &amp;test)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string::size_type</type>
      <name>findUnbackslashed</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a80b19383d89a3a459b4db57fc1469084</anchor>
      <arglist>(const std::string &amp;s, const char q, std::string::size_type istart=0)</arglist>
    </member>
    <member kind="function">
      <type>XML_Node *</type>
      <name>findXMLPhase</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a09a7701bf0b7118023ee5958df57f48e</anchor>
      <arglist>(XML_Node *root, const std::string &amp;phaseName)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>BasisOptimize</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>ga736bfa5922a7dc8d12498e37b14652f5</anchor>
      <arglist>(int *usedZeroedSpecies, bool doFormRxn, MultiPhase *mphase, std::vector&lt; size_t &gt; &amp;orderVectorSpecies, std::vector&lt; size_t &gt; &amp;orderVectorElements, vector_fp &amp;formRxnMatrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ElemRearrange</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>ga8932a893caf09a6d1aef50d19238d7b0</anchor>
      <arglist>(size_t nComponents, const vector_fp &amp;elementAbundances, MultiPhase *mphase, std::vector&lt; size_t &gt; &amp;orderVectorSpecies, std::vector&lt; size_t &gt; &amp;orderVectorElements)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_equilflag</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa81b73d3f20e04eb31424ca8db7406bf</anchor>
      <arglist>(const char *xy)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vcs_l2norm</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a086776dc5619a43710d9f774492fd9c0</anchor>
      <arglist>(const vector_fp &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>vcs_speciesType_string</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a6f00f524246c2f92384c26b247972995</anchor>
      <arglist>(int speciesStatus, int length=100)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vcs_doubleEqual</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a7196aa61f088bc25e69a6ab83ccc21e8</anchor>
      <arglist>(double d1, double d2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasChargedSpecies</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a70c91230cd190d46397c55a29d946471</anchor>
      <arglist>(const ThermoPhase *const tPhase)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>chargeNeutralityElement</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a9d360b8a2c2f12192a264e60a3aeb3d9</anchor>
      <arglist>(const ThermoPhase *const tPhase)</arglist>
    </member>
    <member kind="function">
      <type>shared_ptr&lt; Falloff &gt;</type>
      <name>newFalloff</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>acc1bf442821355102bff936010c94d78</anchor>
      <arglist>(int type, const vector_fp &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>installReactionArrays</name>
      <anchorfile>group__kineticsmgr.html</anchorfile>
      <anchor>gacf1d3ddca3956fd62ce6096af3edd6b6</anchor>
      <arglist>(const XML_Node &amp;p, Kinetics &amp;kin, std::string default_phase, bool check_for_duplicates=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>importKinetics</name>
      <anchorfile>group__kineticsmgr.html</anchorfile>
      <anchor>ga222ca55d41ac03b0b6754e9f95d33c04</anchor>
      <arglist>(const XML_Node &amp;phase, std::vector&lt; ThermoPhase * &gt; th, Kinetics *kin)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>buildSolutionFromXML</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga4e74133eafef0f135fda21a954bcd588</anchor>
      <arglist>(XML_Node &amp;root, const std::string &amp;id, const std::string &amp;nm, ThermoPhase *th, Kinetics *kin)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkElectrochemReaction</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ade9113c4f07e177493983d1bd3442e1b</anchor>
      <arglist>(const XML_Node &amp;p, Kinetics &amp;kin, const XML_Node &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readFalloff</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a7a3ae5d7adfd0a48f6e434a7354f6d42</anchor>
      <arglist>(FalloffReaction &amp;R, const XML_Node &amp;rc_node)</arglist>
    </member>
    <member kind="function">
      <type>shared_ptr&lt; Reaction &gt;</type>
      <name>newReaction</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3f427a93eb078fb84df1395d14f78242</anchor>
      <arglist>(const XML_Node &amp;rxn_node)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; shared_ptr&lt; Reaction &gt; &gt;</type>
      <name>getReactions</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a2e2ae48151c466ce7372d2a57b500657</anchor>
      <arglist>(const XML_Node &amp;node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static doublereal</type>
      <name>calc_damping</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a69fe9ee2ef32e00b3e0c927141005d5b</anchor>
      <arglist>(doublereal x[], doublereal dxneg[], size_t dim, int *label)</arglist>
    </member>
    <member kind="function">
      <type>ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a79d5ad9fd9e09b2a4f312101c4ca61f4</anchor>
      <arglist>(std::ostream &amp;s, const BandMatrix &amp;m)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>cvodes_rhs</name>
      <anchorfile>group__odeGroup.html</anchorfile>
      <anchor>gad87a6eb827a82db1acecb31b45904bff</anchor>
      <arglist>(realtype t, N_Vector y, N_Vector ydot, void *f_data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>cvodes_err</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac7ca54e7988adfe9de5aef7060560895</anchor>
      <arglist>(int error_code, const char *module, const char *function, char *msg, void *eh_data)</arglist>
    </member>
    <member kind="function">
      <type>DAE_Solver *</type>
      <name>newDAE_Solver</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ad4841ce83ae942b738988ea5afae8e5b</anchor>
      <arglist>(const std::string &amp;itype, ResidJacEval &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>abf41d6a2dc65b70bb0d421f7e12903a4</anchor>
      <arglist>(DenseMatrix &amp;A, double *b, size_t nrhs=1, size_t ldb=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a6a9ec6d9fe6d17c419aa1da099ffa446</anchor>
      <arglist>(DenseMatrix &amp;A, DenseMatrix &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a392cc9ef6cbcaddaad995e07b493dba5</anchor>
      <arglist>(const DenseMatrix &amp;A, const double *const b, double *const prod)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>increment</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a018bef478f896ea394834cf776256a43</anchor>
      <arglist>(const DenseMatrix &amp;A, const double *const b, double *const prod)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>invert</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a7339626fa18383a1393d6f02e15fab20</anchor>
      <arglist>(DenseMatrix &amp;A, size_t nn=npos)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>linearInterp</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>acbb8c1713c4d8f56646652671a160897</anchor>
      <arglist>(doublereal x, const vector_fp &amp;xpts, const vector_fp &amp;fpts)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>polyfit</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>acabfa11266a2115e7a90a065d10d860b</anchor>
      <arglist>(size_t n, size_t deg, const double *x, const double *y, const double *w, double *p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>interp_est</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>acc517896a9a24ffe5aab4bb7a3cc1559</anchor>
      <arglist>(const std::string &amp;estString)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getElementWeight</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a6ffa774ab9003beec740bde528157c5b</anchor>
      <arglist>(const std::string &amp;ename)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getElementWeight</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ab77920c3d049a6277ca3504593da062f</anchor>
      <arglist>(int atomicNumber)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getElementSymbol</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a74995b4f0c5bbfb2c104f0739790a1bc</anchor>
      <arglist>(const std::string &amp;ename)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getElementSymbol</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ae632d9f6051df95d661e9baab31100e2</anchor>
      <arglist>(int atomicNumber)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getElementName</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a1a463f77ea130885b86ff51a45a70cc9</anchor>
      <arglist>(const std::string &amp;ename)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getElementName</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a8990e41387512d2bcf2f6cae07fe9f8d</anchor>
      <arglist>(int atomicNumber)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAtomicNumber</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a58a631351d1989d8e045a4728dbf3c01</anchor>
      <arglist>(const std::string &amp;ename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numElementsDefined</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aca69df92609d428b3db52ada4de47ba2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numIsotopesDefined</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3d5d662ae54a03e98f050d3ba4e0c401</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>factorOverlap</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ab2a642a08c4f885a7dce25f4b1e99acb</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;elnamesVN, const vector_fp &amp;elemVectorN, const size_t nElementsN, const std::vector&lt; std::string &gt; &amp;elnamesVI, const vector_fp &amp;elemVectorI, const size_t nElementsI)</arglist>
    </member>
    <member kind="function">
      <type>Mu0Poly *</type>
      <name>newMu0ThermoFromXML</name>
      <anchorfile>group__spthermo.html</anchorfile>
      <anchor>ga4959cf373636daf31768b7ba9cf2e593</anchor>
      <arglist>(const XML_Node &amp;Mu0Node)</arglist>
    </member>
    <member kind="function">
      <type>shared_ptr&lt; Species &gt;</type>
      <name>newSpecies</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a5ae29e5a8ce6a76463b3d8f71df8b07e</anchor>
      <arglist>(const XML_Node &amp;species_node)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; shared_ptr&lt; Species &gt; &gt;</type>
      <name>getSpecies</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a8d1bee8dcd3b3decffaf3459374e5139</anchor>
      <arglist>(const XML_Node &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>SpeciesThermoInterpType *</type>
      <name>newSpeciesThermoInterpType</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>afb02ac53280719e7ac379232336484a1</anchor>
      <arglist>(int type, double tlow, double thigh, double pref, const double *coeffs)</arglist>
    </member>
    <member kind="function">
      <type>SpeciesThermoInterpType *</type>
      <name>newSpeciesThermoInterpType</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ae5dd881339c0b91ff7fc9c2b1741fb72</anchor>
      <arglist>(const std::string &amp;type, double tlow, double thigh, double pref, const double *coeffs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SpeciesThermoInterpType *</type>
      <name>newNasaThermoFromXML</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ad4ab2fda8e7c2b60873fda4bd85690fe</anchor>
      <arglist>(vector&lt; XML_Node *&gt; nodes)</arglist>
    </member>
    <member kind="function">
      <type>SpeciesThermoInterpType *</type>
      <name>newShomateForMineralEQ3</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a01c938cdd8011396823618912c89c3f5</anchor>
      <arglist>(const XML_Node &amp;MinEQ3node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SpeciesThermoInterpType *</type>
      <name>newShomateThermoFromXML</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a7b28dbc5e41f389657b66673c08c4cf0</anchor>
      <arglist>(vector&lt; XML_Node *&gt; &amp;nodes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SpeciesThermoInterpType *</type>
      <name>newConstCpThermoFromXML</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a6b88fb0b764374c7db30f731e1857efc</anchor>
      <arglist>(XML_Node &amp;f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SpeciesThermoInterpType *</type>
      <name>newNasa9ThermoFromXML</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a9d802789c8d66185a617159237e315d5</anchor>
      <arglist>(const std::vector&lt; XML_Node *&gt; &amp;tp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SpeciesThermoInterpType *</type>
      <name>newAdsorbateThermoFromXML</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a7e77434ce7a2039f75cb002355bc3625</anchor>
      <arglist>(const XML_Node &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>SpeciesThermoInterpType *</type>
      <name>newSpeciesThermoInterpType</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a74ba99b6aa28f380837d87ef64dd2fa4</anchor>
      <arglist>(const XML_Node &amp;thermoNode)</arglist>
    </member>
    <member kind="function">
      <type>ThermoPhase *</type>
      <name>newPhase</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>gae7ab44a3276a87e4e3408c91c9167f4a</anchor>
      <arglist>(XML_Node &amp;phase)</arglist>
    </member>
    <member kind="function">
      <type>ThermoPhase *</type>
      <name>newPhase</name>
      <anchorfile>group__thermoprops.html</anchorfile>
      <anchor>gac4ee44bd37ea9c1ca0fa4212af1d8baa</anchor>
      <arglist>(const std::string &amp;infile, std::string id=&quot;&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>formSpeciesXMLNodeList</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a4790ffa243fa10646c64e3d752157602</anchor>
      <arglist>(std::vector&lt; XML_Node *&gt; &amp;spDataNodeList, std::vector&lt; std::string &gt; &amp;spNamesList, vector_int &amp;spRuleList, const std::vector&lt; XML_Node *&gt; spArray_names, const std::vector&lt; XML_Node *&gt; spArray_dbases, const vector_int sprule)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>importPhase</name>
      <anchorfile>group__thermoprops.html</anchorfile>
      <anchor>ga8ef0ddc75ddb04cbe40dc9508c3c23f2</anchor>
      <arglist>(XML_Node &amp;phase, ThermoPhase *th)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>installElements</name>
      <anchorfile>group__thermoprops.html</anchorfile>
      <anchor>gaa1a8e4e755addef4ebd3d6a10a619768</anchor>
      <arglist>(Phase &amp;th, const XML_Node &amp;phaseNode)</arglist>
    </member>
    <member kind="function">
      <type>const XML_Node *</type>
      <name>speciesXML_Node</name>
      <anchorfile>group__thermoprops.html</anchorfile>
      <anchor>ga795278f91e905724307bc51f240a5574</anchor>
      <arglist>(const std::string &amp;kname, const XML_Node *phaseSpeciesData)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getArrhenius</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a04bd474c034d62d417df4be3dbc9d188</anchor>
      <arglist>(const XML_Node &amp;node, doublereal &amp;A, doublereal &amp;b, doublereal &amp;E)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>Frot</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a9f4cb57d21086c594afdb74f35821555</anchor>
      <arglist>(doublereal tr, doublereal sqtr)</arglist>
    </member>
    <member kind="function">
      <type>shared_ptr&lt; TransportData &gt;</type>
      <name>newTransportData</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ae565eec35aecbd1b3978d83a77bf8232</anchor>
      <arglist>(const XML_Node &amp;transport_node)</arglist>
    </member>
    <member kind="function">
      <type>Transport *</type>
      <name>newDefaultTransportMgr</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>gae3407d53d8110cd449a636228298ba4d</anchor>
      <arglist>(thermo_t *thermo, int loglevel=0)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a196fb9d888040e5d5f64040b9464c4ae</anchor>
      <arglist>(std::ostream &amp;s, const Array2D &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator*=</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a0d8d81dfb21c174ee2b11a246bd7fd42</anchor>
      <arglist>(Array2D &amp;m, doublereal a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator+=</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a8547d8cd3cad210547bc79c7ef3ee349</anchor>
      <arglist>(Array2D &amp;x, const Array2D &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debuglog</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a69717d95d14092b85ced84527e6a9c9f</anchor>
      <arglist>(const std::string &amp;msg, int loglevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writelog</name>
      <anchorfile>group__textlogs.html</anchorfile>
      <anchor>ga2eedeffda1cc6bf883021bfe4293820d</anchor>
      <arglist>(const std::string &amp;fmt, const Args &amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writelogf</name>
      <anchorfile>group__textlogs.html</anchorfile>
      <anchor>gabdb16f90da6cdd8ffd41054f948f3a89</anchor>
      <arglist>(const char *fmt, const Args &amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>clip</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a9736f9063c7137a0df18e358ac2d1aea</anchor>
      <arglist>(const T &amp;value, const T &amp;lower, const T &amp;upper)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sign</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>acf38363aba441de9ad9f86932116003d</anchor>
      <arglist>(T x)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>dot4</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a7cb5f1494672ce322bca0b2d3940c2a2</anchor>
      <arglist>(const V &amp;x, const V &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>dot5</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a9ab14f0829659b0748abd32fa8cdfc89</anchor>
      <arglist>(const V &amp;x, const V &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>dot</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a2e0d0036916502297fd21ffee900c41b</anchor>
      <arglist>(InputIter x_begin, InputIter x_end, InputIter2 y_begin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a805da1302033e3f56a3d53f6ea296f4b</anchor>
      <arglist>(InputIter begin, InputIter end, OutputIter out, S scale_factor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply_each</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a5c292cbe14b78329ec021bb1627946fb</anchor>
      <arglist>(OutputIter x_begin, OutputIter x_end, InputIter y_begin)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>absmax</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a36da549d3d59b1e18ba4913c7531e3ea</anchor>
      <arglist>(InputIter begin, InputIter end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aabb084ddbf5ff63a208a9c6b42c1a1a4</anchor>
      <arglist>(InputIter begin, InputIter end, OutputIter out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide_each</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a2dc0ac860716fad0004d9efb2a29c18c</anchor>
      <arglist>(OutputIter x_begin, OutputIter x_end, InputIter y_begin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sum_each</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa02abea516beef489e8cfdc1159d5bbb</anchor>
      <arglist>(OutputIter x_begin, OutputIter x_end, InputIter y_begin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scatter_copy</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a9dac94f1c5cef43fe0400127d2a0b88c</anchor>
      <arglist>(InputIter begin, InputIter end, OutputIter result, IndexIter index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scatter_mult</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a9e3ba968d009b6f423d296d960c7c62a</anchor>
      <arglist>(InputIter mult_begin, InputIter mult_end, RandAccessIter data, IndexIter index)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>sum_xlogx</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a6a4a89015224314d4f914a1cd607e70f</anchor>
      <arglist>(InputIter begin, InputIter end)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>sum_xlogQ</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a2f5edc20b5727c1d9d63f2f7d9885991</anchor>
      <arglist>(InputIter1 begin, InputIter1 end, InputIter2 Q_begin)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>poly6</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ad6bf2c3f1c20507381e768019c24f7dd</anchor>
      <arglist>(D x, R *c)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>poly8</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aaf5191524b09ebbaabed2a8e1a7d8821</anchor>
      <arglist>(D x, R *c)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>poly5</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a8445959d2c2ef7a6ca846f8f3b804157</anchor>
      <arglist>(D x, R *c)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>poly4</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac49b7eaa150f51f925d0e9869c0e4253</anchor>
      <arglist>(D x, R *c)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>poly3</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>abca98935cce3614e830dd4069cd5b228</anchor>
      <arglist>(D x, R *c)</arglist>
    </member>
    <member kind="function">
      <type>const U &amp;</type>
      <name>getValue</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a0705f9a3eb37e4f04b60986a33bfbed8</anchor>
      <arglist>(const std::map&lt; T, U &gt; &amp;m, const T &amp;key, const U &amp;default_val)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>acc7533b3ede4a25a50dd76a6fc53fe76</anchor>
      <arglist>(std::ostream &amp;s, MultiPhase &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>Interface *</type>
      <name>importInterface</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac1f125d6c96ab7a96c6f7665a4562e95</anchor>
      <arglist>(const std::string &amp;infile, const std::string &amp;id, std::vector&lt; ThermoPhase *&gt; phases)</arglist>
    </member>
    <member kind="function">
      <type>Kinetics *</type>
      <name>newKineticsMgr</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa684e9b460945a1276509b86e841bfb7</anchor>
      <arglist>(XML_Node &amp;phase, std::vector&lt; ThermoPhase *&gt; th)</arglist>
    </member>
    <member kind="function">
      <type>Kinetics *</type>
      <name>newKineticsMgr</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>af01176e344b03cd52f5797aeade8eb30</anchor>
      <arglist>(const std::string &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>doublereal</type>
      <name>ct_dtrcon</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a94f51f583caa7b9883cb1a1dba7bf63a</anchor>
      <arglist>(const char *norm, ctlapack::upperlower_t uplot, const char *diag, size_t n, doublereal *a, size_t lda, doublereal *work, int *iwork, int &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>ThermoPhase *</type>
      <name>newThermoPhase</name>
      <anchorfile>group__thermoprops.html</anchorfile>
      <anchor>gab79a3fca59a013a5d3fad542e25213b9</anchor>
      <arglist>(const std::string &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>ReactorBase *</type>
      <name>newReactor</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a0660c6b6e4f2173b8cc7ee4bb008d496</anchor>
      <arglist>(const std::string &amp;model)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::mutex</type>
      <name>dir_mutex</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a97f6438f5726bfc429a9564024b83320</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::mutex</type>
      <name>app_mutex</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a615116df3fcccb3db99bb1f3356c3431</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::mutex</type>
      <name>xml_mutex</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a78fbb2cbb6082f89a036a4dbcafd1de9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::mutex</type>
      <name>msg_mutex</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aecc6aa3207993817d97745a083cf3b51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>BasisOptimize_print_lvl</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a971f6a305da78e68f47975d0bb15078a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>vcs_timing_print_lvl</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a1bed08dd50013012412579c25096b9dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static struct atomicWeightData</type>
      <name>atomicWeightTable</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a0aeb2128c6956148ee590a8fb20d4e9b</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static struct isotopeWeightData</type>
      <name>isotopeWeightTable</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>afde788ec5a1775564d903a51bfd411b5</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>T_c</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aba7d6c272ace07325109e0c061dcac41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const doublereal</type>
      <name>P_c</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa2149f96848678ace7356866bcfdae82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Rho_c</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a520cf97721bce15bab3be4746f595804</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const doublereal</type>
      <name>M_water</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ac91581a9f684905080912001300cbe16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const doublereal</type>
      <name>Rgas</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ada9ffba95a8d4fb61fba366e7d6daea1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const doublereal</type>
      <name>Min_C_Internal</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3d4d5a0d9f0fe6a9efad36aab04e83bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Pi</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga6395b4dda659056caf8bea67cee91ed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>SmallNumber</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a620178f0e64739ba7edc2d92e7612421</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>BigNumber</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>acb8c7090811b6c23e8c5bba31777293c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>MaxExp</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a18665fa75bd54f64a3169777ed6a4649</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Undef</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a87554f2f78829cfab3e24fd5b9d639f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Tiny</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a536fca86a6efdb9584841051dfc2aad7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const size_t</type>
      <name>npos</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a03aff983f503a71029aecb707175b2ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cEST_solvent</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aecd6bfd9eb163aabaac0e004f2f5670c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>PHSCALE_PITZER</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a574026f321c91b32b8dd618f2741a138</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>PHSCALE_NBS</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aceead90273e3f7eeb00bf11bab8ee124</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VelocityBasis</type>
      <name>VB_MASSAVG</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>ga96f35f99ee09bc61fcc00bdef46f6368</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VelocityBasis</type>
      <name>VB_MOLEAVG</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>gac7dfd49f9f283c0cb52b54918d4de28c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VelocityBasis</type>
      <name>VB_SPECIES_0</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>gaf7dd43de47d23b9f681b2c50ba2acf61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VelocityBasis</type>
      <name>VB_SPECIES_1</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>ga076e09978596085fc8f60c76733096f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VelocityBasis</type>
      <name>VB_SPECIES_2</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>gabf84dc8092bd874a8a8ad3d0fba24313</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VelocityBasis</type>
      <name>VB_SPECIES_3</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>gadc189f14531496989e70807ad3573eba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Avogadro</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga13c1ec6c47259bed7355fc720a29a0b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>GasConstant</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga44a56836574d1fc6fd84c967db70b7b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>OneAtm</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga9da8bef82ee3cb7c2dbc24db228dfe93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>GasConst_cal_mol_K</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga6388cd7e5aae34f4376b0724671c11eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Boltzmann</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga0cf831b5d448e4bb751b208cda6a66b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Planck</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga57e67f233ce848dd19b39bd37c9cc5fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>logBoltz_Planck</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>gacbd679241009c4fa4d8a9a6383d8f9d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>StefanBoltz</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>gadb1075d73597bef95dc8145a547daae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>lightSpeed</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>gaa3d6cfaeb133f8c31e04fce60ca2e1b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>permeability_0</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>gab22d639371d869b2634e98ff1a39323c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>epsilon_0</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga620b239773cfc5db63210835e09daaea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ELEMENTARY_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a8df81c7ff3d9f97bc34701d3960e10e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>THREE_BODY_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a70945bb179b75a13b0dc07c4da769579</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>FALLOFF_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>acc8d11c98a6b8576d7804b739e16cdcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>PLOG_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a36559219afd4abf2b6248f749d26edc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>CHEBYSHEV_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a15deb3717c54dfbe02eddfbaecf9c2bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>CHEMACT_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>abaa0bb140343633ff77781128c8392ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>SURFACE_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a36d9f1e25c18562e8ced89a5b0234d82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>INTERFACE_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a9a8ce48aae935259a4ff2a0c149ac302</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>BUTLERVOLMER_NOACTIVITYCOEFFS_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a07fc1991fc34316430113d5d7252e4a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>BUTLERVOLMER_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3d519251ddea4ca8492ece66d6026ff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>SURFACEAFFINITY_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa57e828a72df53d5e15c386eb59636cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>EDGE_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a69ea2e7380ff5d0bf95eb20490154c87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>GLOBAL_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a5ed7e66f048a46de7539f50e7fe82601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cAC_CONVENTION_MOLAR</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a451f2e7bea2dc8d0fcc451b1cfcf2b4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cAC_CONVENTION_MOLALITY</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aef5d8f7985e646cecaefd8bf38d0adee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cSS_CONVENTION_TEMPERATURE</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa0ea25ae1d9344f16340919143530847</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cSS_CONVENTION_VPSS</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3265905962fc12616b0caaeabb889826</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cSS_CONVENTION_SLAVE</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ab9b8ba28a8ed37ee0bbea110859754ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Avogadro</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga13c1ec6c47259bed7355fc720a29a0b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>GasConstant</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga44a56836574d1fc6fd84c967db70b7b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>OneAtm</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga9da8bef82ee3cb7c2dbc24db228dfe93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>GasConst_cal_mol_K</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga6388cd7e5aae34f4376b0724671c11eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Boltzmann</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga0cf831b5d448e4bb751b208cda6a66b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Planck</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga57e67f233ce848dd19b39bd37c9cc5fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>logBoltz_Planck</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>gacbd679241009c4fa4d8a9a6383d8f9d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>StefanBoltz</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>gadb1075d73597bef95dc8145a547daae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>lightSpeed</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>gaa3d6cfaeb133f8c31e04fce60ca2e1b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>permeability_0</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>gab22d639371d869b2634e98ff1a39323c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>epsilon_0</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga620b239773cfc5db63210835e09daaea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ELEMENTARY_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a8df81c7ff3d9f97bc34701d3960e10e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>THREE_BODY_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a70945bb179b75a13b0dc07c4da769579</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>FALLOFF_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>acc8d11c98a6b8576d7804b739e16cdcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>PLOG_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a36559219afd4abf2b6248f749d26edc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>CHEBYSHEV_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a15deb3717c54dfbe02eddfbaecf9c2bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>CHEMACT_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>abaa0bb140343633ff77781128c8392ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>SURFACE_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a36d9f1e25c18562e8ced89a5b0234d82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>INTERFACE_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a9a8ce48aae935259a4ff2a0c149ac302</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>BUTLERVOLMER_NOACTIVITYCOEFFS_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a07fc1991fc34316430113d5d7252e4a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>BUTLERVOLMER_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3d519251ddea4ca8492ece66d6026ff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>SURFACEAFFINITY_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa57e828a72df53d5e15c386eb59636cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>EDGE_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a69ea2e7380ff5d0bf95eb20490154c87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>GLOBAL_RXN</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a5ed7e66f048a46de7539f50e7fe82601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cAC_CONVENTION_MOLAR</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a451f2e7bea2dc8d0fcc451b1cfcf2b4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cAC_CONVENTION_MOLALITY</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aef5d8f7985e646cecaefd8bf38d0adee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cSS_CONVENTION_TEMPERATURE</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>aa0ea25ae1d9344f16340919143530847</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cSS_CONVENTION_VPSS</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>a3265905962fc12616b0caaeabb889826</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cSS_CONVENTION_SLAVE</name>
      <anchorfile>namespaceCantera.html</anchorfile>
      <anchor>ab9b8ba28a8ed37ee0bbea110859754ac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>globalData</name>
    <title>Global Data</title>
    <filename>group__globalData.html</filename>
    <subgroup>physConstants</subgroup>
    <class kind="class">Cantera::Application</class>
  </compound>
  <compound kind="group">
    <name>physConstants</name>
    <title>Physical Constants</title>
    <filename>group__physConstants.html</filename>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Pi</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga6395b4dda659056caf8bea67cee91ed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Avogadro</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga13c1ec6c47259bed7355fc720a29a0b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>GasConstant</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga44a56836574d1fc6fd84c967db70b7b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>OneAtm</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga9da8bef82ee3cb7c2dbc24db228dfe93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>GasConst_cal_mol_K</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga6388cd7e5aae34f4376b0724671c11eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Boltzmann</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga0cf831b5d448e4bb751b208cda6a66b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>Planck</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga57e67f233ce848dd19b39bd37c9cc5fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>logBoltz_Planck</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>gacbd679241009c4fa4d8a9a6383d8f9d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>StefanBoltz</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>gadb1075d73597bef95dc8145a547daae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>lightSpeed</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>gaa3d6cfaeb133f8c31e04fce60ca2e1b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>permeability_0</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>gab22d639371d869b2634e98ff1a39323c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const doublereal</type>
      <name>epsilon_0</name>
      <anchorfile>group__physConstants.html</anchorfile>
      <anchor>ga620b239773cfc5db63210835e09daaea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>errorhandling</name>
    <title>Error Handling</title>
    <filename>group__errorhandling.html</filename>
    <class kind="class">Cantera::CanteraError</class>
    <class kind="class">Cantera::ArraySizeError</class>
    <class kind="class">Cantera::IndexError</class>
    <member kind="define">
      <type>#define</type>
      <name>AssertTrace</name>
      <anchorfile>group__errorhandling.html</anchorfile>
      <anchor>ga8d9d847a6c88e2b3e4df673d100e4594</anchor>
      <arglist>(expr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AssertThrow</name>
      <anchorfile>group__errorhandling.html</anchorfile>
      <anchor>ga41a50aa300b18c3bf4c4417332207bb6</anchor>
      <arglist>(expr, procedure)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AssertThrowMsg</name>
      <anchorfile>group__errorhandling.html</anchorfile>
      <anchor>gac25777fefb20a8d33b073aa7cb7a5811</anchor>
      <arglist>(expr, procedure,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addError</name>
      <anchorfile>group__errorhandling.html</anchorfile>
      <anchor>ga374c66d954f25c1f0ee859952648005e</anchor>
      <arglist>(const std::string &amp;r, const std::string &amp;msg=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getErrorCount</name>
      <anchorfile>group__errorhandling.html</anchorfile>
      <anchor>gad5e9a9a276f1d98add727ea3eb6e2fdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popError</name>
      <anchorfile>group__errorhandling.html</anchorfile>
      <anchor>gaff4eeaace2472342ffd4107048fc7f0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>lastErrorMessage</name>
      <anchorfile>group__errorhandling.html</anchorfile>
      <anchor>ga7785653a63fcc18c8c472b6e411eeca8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getErrors</name>
      <anchorfile>group__errorhandling.html</anchorfile>
      <anchor>gad1da9e20f047834165e4746fe1687136</anchor>
      <arglist>(std::ostream &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logErrors</name>
      <anchorfile>group__errorhandling.html</anchorfile>
      <anchor>ga66d925145e4fa099cda970c0c5d8bbcf</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>inputfiles</name>
    <title>Input File Handling</title>
    <filename>group__inputfiles.html</filename>
    <class kind="class">Cantera::Unit</class>
    <member kind="function">
      <type>void</type>
      <name>addDataDirectory</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga665c099aafbe6dc958c3497997d732ad</anchor>
      <arglist>(const std::string &amp;dir)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>findInputFile</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga144465952eb1270d254a049a31411540</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getDataDirectories</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga56eae1a5159c796885f800504ee1d266</anchor>
      <arglist>(const std::string &amp;sep)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setDefaultDirectories</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>gac430b8358a27aea9d3c1908dea79538d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ct2ctml</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga106f302af6a947a6222a3450a5b888ab</anchor>
      <arglist>(const char *file, const int debug=0)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ct2ctml_string</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga3a8555f1c9005ce92613f4a0586942d3</anchor>
      <arglist>(const std::string &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ct_string2ctml_string</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga8eae1f606cb70310c81d4514bca5a3ba</anchor>
      <arglist>(const std::string &amp;cti)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>findInputFile</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga144465952eb1270d254a049a31411540</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDirectory</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga15d00255903692a4a0e7f014b51d6047</anchor>
      <arglist>(const std::string &amp;dir)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getDataDirectories</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga56eae1a5159c796885f800504ee1d266</anchor>
      <arglist>(const std::string &amp;sep)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>canteraRoot</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>gac2afc73862050157954586c8e4936f8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>buildSolutionFromXML</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>ga4e74133eafef0f135fda21a954bcd588</anchor>
      <arglist>(XML_Node &amp;root, const std::string &amp;id, const std::string &amp;nm, ThermoPhase *th, Kinetics *kin)</arglist>
    </member>
    <member kind="function">
      <type>ThermoPhase *</type>
      <name>newPhase</name>
      <anchorfile>group__inputfiles.html</anchorfile>
      <anchor>gae7ab44a3276a87e4e3408c91c9167f4a</anchor>
      <arglist>(XML_Node &amp;phase)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>logs</name>
    <title>Diagnostic Output</title>
    <filename>group__logs.html</filename>
    <subgroup>textlogs</subgroup>
  </compound>
  <compound kind="group">
    <name>textlogs</name>
    <title>Writing messages to the screen</title>
    <filename>group__textlogs.html</filename>
    <class kind="class">Cantera::Application</class>
    <class kind="class">Cantera::Logger</class>
    <member kind="function">
      <type>void</type>
      <name>writelog</name>
      <anchorfile>group__textlogs.html</anchorfile>
      <anchor>ga304c529581146b5b5eeb034aed77d449</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogger</name>
      <anchorfile>group__textlogs.html</anchorfile>
      <anchor>ga40134534f5b00a810ec7b6de60378b00</anchor>
      <arglist>(Logger *logwriter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writelog</name>
      <anchorfile>group__textlogs.html</anchorfile>
      <anchor>ga2eedeffda1cc6bf883021bfe4293820d</anchor>
      <arglist>(const std::string &amp;fmt, const Args &amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writelogf</name>
      <anchorfile>group__textlogs.html</anchorfile>
      <anchor>gabdb16f90da6cdd8ffd41054f948f3a89</anchor>
      <arglist>(const char *fmt, const Args &amp;... args)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>utils</name>
    <title>Templated Utility Functions</title>
    <filename>group__utils.html</filename>
    <file>global.h</file>
  </compound>
  <compound kind="group">
    <name>equil</name>
    <title>Chemical Equilibrium</title>
    <filename>group__equil.html</filename>
    <class kind="class">Cantera::ChemEquil</class>
    <class kind="class">Cantera::MultiPhaseEquil</class>
  </compound>
  <compound kind="group">
    <name>Equilfunctions</name>
    <title>Equilfunctions</title>
    <filename>group__equilfunctions.html</filename>
    <class kind="class">Cantera::MultiPhase</class>
    <class kind="class">Cantera::vcs_MultiPhaseEquil</class>
    <member kind="function">
      <type>void</type>
      <name>equilibrate</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>gaf658f6d2afb439d254b43166f270861e</anchor>
      <arglist>(const std::string &amp;XY, const std::string &amp;solver=&quot;auto&quot;, double rtol=1e-9, int max_steps=50000, int max_iter=100, int estimate_equil=0, int log_level=0)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>BasisOptimize</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>ga736bfa5922a7dc8d12498e37b14652f5</anchor>
      <arglist>(int *usedZeroedSpecies, bool doFormRxn, MultiPhase *mphase, std::vector&lt; size_t &gt; &amp;orderVectorSpecies, std::vector&lt; size_t &gt; &amp;orderVectorElements, vector_fp &amp;formRxnMatrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ElemRearrange</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>ga8932a893caf09a6d1aef50d19238d7b0</anchor>
      <arglist>(size_t nComponents, const vector_fp &amp;elementAbundances, MultiPhase *mphase, std::vector&lt; size_t &gt; &amp;orderVectorSpecies, std::vector&lt; size_t &gt; &amp;orderVectorElements)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>equilibrate</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>gaf658f6d2afb439d254b43166f270861e</anchor>
      <arglist>(const std::string &amp;XY, const std::string &amp;solver=&quot;auto&quot;, double rtol=1e-9, int max_steps=50000, int max_iter=100, int estimate_equil=0, int log_level=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setToEquilState</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>gabff9a8a035d3a59f00458ff8fca4f8c9</anchor>
      <arglist>(const doublereal *lambda_RT)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setElementPotentials</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>gaf49509a8378cb3502af4daf5ab7c66d7</anchor>
      <arglist>(const vector_fp &amp;lambda)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getElementPotentials</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>ga55702dfce5c6f43215708be9e9e589d6</anchor>
      <arglist>(doublereal *lambda) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>compatibleWithMultiPhase</name>
      <anchorfile>group__equilfunctions.html</anchorfile>
      <anchor>ga6107e1b1da2244719399c92776d5591c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>falloffGroup</name>
    <title>Falloff Parameterizations</title>
    <filename>group__falloffGroup.html</filename>
    <class kind="class">Cantera::Falloff</class>
    <class kind="class">Cantera::Troe</class>
    <class kind="class">Cantera::SRI</class>
    <class kind="class">Cantera::FalloffFactory</class>
    <class kind="class">Cantera::FalloffMgr</class>
  </compound>
  <compound kind="group">
    <name>chemkinetics</name>
    <title>Chemical Kinetics</title>
    <filename>group__chemkinetics.html</filename>
    <subgroup>falloffGroup</subgroup>
    <subgroup>kineticsmgr</subgroup>
    <file>AqueousKinetics.h</file>
    <file>BulkKinetics.h</file>
    <file>EdgeKinetics.h</file>
    <file>GasKinetics.h</file>
    <file>InterfaceKinetics.h</file>
    <class kind="class">Cantera::InterfaceKinetics</class>
  </compound>
  <compound kind="group">
    <name>kineticsmgr</name>
    <title>Kinetics Managers</title>
    <filename>group__kineticsmgr.html</filename>
    <class kind="class">Cantera::ImplicitSurfChem</class>
    <class kind="class">Cantera::Kinetics</class>
    <member kind="function">
      <type>bool</type>
      <name>installReactionArrays</name>
      <anchorfile>group__kineticsmgr.html</anchorfile>
      <anchor>gacf1d3ddca3956fd62ce6096af3edd6b6</anchor>
      <arglist>(const XML_Node &amp;p, Kinetics &amp;kin, std::string default_phase, bool check_for_duplicates=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>importKinetics</name>
      <anchorfile>group__kineticsmgr.html</anchorfile>
      <anchor>ga222ca55d41ac03b0b6754e9f95d33c04</anchor>
      <arglist>(const XML_Node &amp;phase, std::vector&lt; ThermoPhase * &gt; th, Kinetics *kin)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>checkDuplicateStoich</name>
      <anchorfile>group__kineticsmgr.html</anchorfile>
      <anchor>ga3000c8f3c00edab5b524e177cfab2390</anchor>
      <arglist>(std::map&lt; int, double &gt; &amp;r1, std::map&lt; int, double &gt; &amp;r2) const</arglist>
    </member>
    <docanchor file="group__kineticsmgr" title="Models and Managers">kinmodman</docanchor>
  </compound>
  <compound kind="group">
    <name>solvesp_methods</name>
    <title>Surface Problem Solver Methods</title>
    <filename>group__solvesp__methods.html</filename>
    <member kind="variable">
      <type>const int</type>
      <name>SFLUX_INITIALIZE</name>
      <anchorfile>group__solvesp__methods.html</anchorfile>
      <anchor>gae5f542008d31d9746cb795b0462a5b94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>SFLUX_RESIDUAL</name>
      <anchorfile>group__solvesp__methods.html</anchorfile>
      <anchor>ga4f2ffc1091d10bd8e779af896864981f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>SFLUX_JACOBIAN</name>
      <anchorfile>group__solvesp__methods.html</anchorfile>
      <anchor>gadd3b85c5011b46f207b0e38497238127</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>SFLUX_TRANSIENT</name>
      <anchorfile>group__solvesp__methods.html</anchorfile>
      <anchor>ga4d7c44bf008036d22deb9c3ee0bbb9eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>solvesp_bulkFunc</name>
    <title>Surface Problem Bulk Phase Mode</title>
    <filename>group__solvesp__bulkFunc.html</filename>
    <member kind="variable">
      <type>const int</type>
      <name>BULK_DEPOSITION</name>
      <anchorfile>group__solvesp__bulkFunc.html</anchorfile>
      <anchor>gaa7b207ea4b9b00fe897eb275ace8afbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>BULK_ETCH</name>
      <anchorfile>group__solvesp__bulkFunc.html</anchorfile>
      <anchor>ga92b5e73562d02f6ccb5ae3d6182938b8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Stoichiometry</name>
    <title>Stoichiometry</title>
    <filename>group__Stoichiometry.html</filename>
    <class kind="class">Cantera::C1</class>
    <class kind="class">Cantera::C2</class>
    <class kind="class">Cantera::C3</class>
    <class kind="class">Cantera::C_AnyN</class>
  </compound>
  <compound kind="group">
    <name>numerics</name>
    <title>Numerical Utilities within Cantera</title>
    <filename>group__numerics.html</filename>
    <class kind="class">Cantera::DenseMatrix</class>
  </compound>
  <compound kind="group">
    <name>odeGroup</name>
    <title>ODE Integrators</title>
    <filename>group__odeGroup.html</filename>
    <class kind="class">Cantera::FuncEval</class>
    <class kind="class">Cantera::Integrator</class>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>cvodes_rhs</name>
      <anchorfile>group__odeGroup.html</anchorfile>
      <anchor>gad87a6eb827a82db1acecb31b45904bff</anchor>
      <arglist>(realtype t, N_Vector y, N_Vector ydot, void *f_data)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>onedim</name>
    <title>One-Dimensional Reacting Flows</title>
    <filename>group__onedim.html</filename>
    <class kind="class">Cantera::Domain1D</class>
    <class kind="class">Cantera::Bdry1D</class>
    <class kind="class">Cantera::Inlet1D</class>
    <class kind="class">Cantera::Empty1D</class>
    <class kind="class">Cantera::Symm1D</class>
    <class kind="class">Cantera::Outlet1D</class>
    <class kind="class">Cantera::OutletRes1D</class>
    <class kind="class">Cantera::Surf1D</class>
    <class kind="class">Cantera::ReactingSurf1D</class>
    <class kind="class">Cantera::IonFlow</class>
    <class kind="class">Cantera::MultiJac</class>
    <class kind="class">Cantera::MultiNewton</class>
    <class kind="class">Cantera::OneDim</class>
    <class kind="class">Cantera::Refiner</class>
    <class kind="class">Cantera::Sim1D</class>
    <class kind="class">Cantera::StFlow</class>
    <class kind="class">Cantera::AxiStagnFlow</class>
    <class kind="class">Cantera::FreeFlame</class>
  </compound>
  <compound kind="group">
    <name>pdssthermo</name>
    <title>Species Standard-State Thermodynamic Properties</title>
    <filename>group__pdssthermo.html</filename>
    <class kind="class">Cantera::PDSS</class>
    <class kind="class">Cantera::PDSS_ConstVol</class>
    <class kind="class">Cantera::PDSS_HKFT</class>
    <class kind="class">Cantera::PDSS_IdealGas</class>
    <class kind="class">Cantera::PDSS_IonsFromNeutral</class>
    <class kind="class">Cantera::PDSS_SSVol</class>
    <class kind="class">Cantera::PDSS_Water</class>
  </compound>
  <compound kind="group">
    <name>phases</name>
    <title>Models of Phases of Matter</title>
    <filename>group__phases.html</filename>
    <subgroup>relatedProps</subgroup>
    <subgroup>tranprops</subgroup>
    <subgroup>thermoprops</subgroup>
    <class kind="class">Cantera::Phase</class>
    <class kind="class">Cantera::ThermoPhase</class>
  </compound>
  <compound kind="group">
    <name>spthermo</name>
    <title>Species Reference-State Thermodynamic Properties</title>
    <filename>group__spthermo.html</filename>
    <class kind="class">Cantera::Adsorbate</class>
    <class kind="class">Cantera::ConstCpPoly</class>
    <class kind="class">Cantera::Mu0Poly</class>
    <class kind="class">Cantera::MultiSpeciesThermo</class>
    <class kind="class">Cantera::Nasa9Poly1</class>
    <class kind="class">Cantera::Nasa9PolyMultiTempRegion</class>
    <class kind="class">Cantera::NasaPoly1</class>
    <class kind="class">Cantera::NasaPoly2</class>
    <class kind="class">Cantera::ShomatePoly</class>
    <class kind="class">Cantera::ShomatePoly2</class>
    <class kind="class">Cantera::SpeciesThermoInterpType</class>
    <class kind="class">Cantera::STITbyPDSS</class>
    <member kind="function">
      <type>Mu0Poly *</type>
      <name>newMu0ThermoFromXML</name>
      <anchorfile>group__spthermo.html</anchorfile>
      <anchor>ga4959cf373636daf31768b7ba9cf2e593</anchor>
      <arglist>(const XML_Node &amp;Mu0Node)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>relatedProps</name>
    <title>Electric Properties of Phases</title>
    <filename>group__relatedProps.html</filename>
    <class kind="class">Cantera::WaterProps</class>
  </compound>
  <compound kind="group">
    <name>tranprops</name>
    <title>Transport Properties for Species in Phases</title>
    <filename>group__tranprops.html</filename>
    <class kind="class">Cantera::MMCollisionInt</class>
    <class kind="class">Cantera::DustyGasTransport</class>
    <class kind="class">Cantera::GasTransport</class>
    <class kind="class">Cantera::HighPressureGasTransport</class>
    <class kind="class">Cantera::IonGasTransport</class>
    <class kind="class">Cantera::LiquidTransport</class>
    <class kind="class">Cantera::MixTransport</class>
    <class kind="class">Cantera::MultiTransport</class>
    <class kind="class">Cantera::SimpleTransport</class>
    <class kind="class">Cantera::SolidTransport</class>
    <class kind="class">Cantera::Transport</class>
    <class kind="class">Cantera::TransportFactory</class>
    <class kind="class">Cantera::UnityLewisTransport</class>
    <class kind="class">Cantera::WaterTransport</class>
    <member kind="typedef">
      <type>int</type>
      <name>VelocityBasis</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>ga6db7188408b57b95bb0da59376bfc9ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Transport *</type>
      <name>newDefaultTransportMgr</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>gae3407d53d8110cd449a636228298ba4d</anchor>
      <arglist>(thermo_t *thermo, int loglevel=0)</arglist>
    </member>
    <member kind="variable">
      <type>const VelocityBasis</type>
      <name>VB_MASSAVG</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>ga96f35f99ee09bc61fcc00bdef46f6368</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VelocityBasis</type>
      <name>VB_MOLEAVG</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>gac7dfd49f9f283c0cb52b54918d4de28c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VelocityBasis</type>
      <name>VB_SPECIES_0</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>gaf7dd43de47d23b9f681b2c50ba2acf61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VelocityBasis</type>
      <name>VB_SPECIES_1</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>ga076e09978596085fc8f60c76733096f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VelocityBasis</type>
      <name>VB_SPECIES_2</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>gabf84dc8092bd874a8a8ad3d0fba24313</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VelocityBasis</type>
      <name>VB_SPECIES_3</name>
      <anchorfile>group__tranprops.html</anchorfile>
      <anchor>gadc189f14531496989e70807ad3573eba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>thermoprops</name>
    <title>Thermodynamic Properties</title>
    <filename>group__thermoprops.html</filename>
    <subgroup>pdssthermo</subgroup>
    <subgroup>spthermo</subgroup>
    <class kind="class">Cantera::ConstDensityThermo</class>
    <class kind="class">Cantera::DebyeHuckel</class>
    <class kind="class">Cantera::EdgePhase</class>
    <class kind="class">Cantera::FixedChemPotSSTP</class>
    <class kind="class">Cantera::HMWSoln</class>
    <class kind="class">Cantera::IdealGasPhase</class>
    <class kind="class">Cantera::IdealMolalSoln</class>
    <class kind="class">Cantera::IdealSolidSolnPhase</class>
    <class kind="class">Cantera::IdealSolnGasVPSS</class>
    <class kind="class">Cantera::LatticePhase</class>
    <class kind="class">Cantera::MargulesVPSSTP</class>
    <class kind="class">Cantera::MaskellSolidSolnPhase</class>
    <class kind="class">Cantera::MetalPhase</class>
    <class kind="class">Cantera::MetalSHEelectrons</class>
    <class kind="class">Cantera::MineralEQ3</class>
    <class kind="class">Cantera::MixedSolventElectrolyte</class>
    <class kind="class">Cantera::MixtureFugacityTP</class>
    <class kind="class">Cantera::PhaseCombo_Interaction</class>
    <class kind="class">Cantera::PureFluidPhase</class>
    <class kind="class">Cantera::RedlichKisterVPSSTP</class>
    <class kind="class">Cantera::RedlichKwongMFTP</class>
    <class kind="class">Cantera::SingleSpeciesTP</class>
    <class kind="class">Cantera::StoichSubstance</class>
    <class kind="class">Cantera::SurfPhase</class>
    <class kind="class">Cantera::UnknownThermoPhaseModel</class>
    <class kind="class">Cantera::ThermoFactory</class>
    <class kind="class">Cantera::ThermoPhase</class>
    <class kind="class">Cantera::VPStandardStateTP</class>
    <class kind="class">Cantera::WaterPropsIAPWS</class>
    <class kind="class">Cantera::WaterSSTP</class>
    <member kind="function">
      <type>ThermoPhase *</type>
      <name>newThermoPhase</name>
      <anchorfile>group__thermoprops.html</anchorfile>
      <anchor>gab79a3fca59a013a5d3fad542e25213b9</anchor>
      <arglist>(const std::string &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>ThermoPhase *</type>
      <name>newPhase</name>
      <anchorfile>group__thermoprops.html</anchorfile>
      <anchor>gac4ee44bd37ea9c1ca0fa4212af1d8baa</anchor>
      <arglist>(const std::string &amp;infile, std::string id=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>importPhase</name>
      <anchorfile>group__thermoprops.html</anchorfile>
      <anchor>ga8ef0ddc75ddb04cbe40dc9508c3c23f2</anchor>
      <arglist>(XML_Node &amp;phase, ThermoPhase *th)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>installElements</name>
      <anchorfile>group__thermoprops.html</anchorfile>
      <anchor>gaa1a8e4e755addef4ebd3d6a10a619768</anchor>
      <arglist>(Phase &amp;th, const XML_Node &amp;phaseNode)</arglist>
    </member>
    <member kind="function">
      <type>const XML_Node *</type>
      <name>speciesXML_Node</name>
      <anchorfile>group__thermoprops.html</anchorfile>
      <anchor>ga795278f91e905724307bc51f240a5574</anchor>
      <arglist>(const std::string &amp;kname, const XML_Node *phaseSpeciesData)</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>Cantera C++ Reference</title>
    <filename>index</filename>
  </compound>
</tagfile>
