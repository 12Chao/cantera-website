{#  Note: at present, MathJax and KaTeX do not respect the USE_CDN configuration option #}
{# KaTeX urls from: https://github.com/Khan/KaTeX/tree/master/contrib/auto-render#usage #}
{# Integrity hash from: https://www.srihash.org/ #}

{% macro math_scripts_files() %}
    {% if use_katex %}
        <script src="https://cdn.jsdelivr.net/npm/katex@0.10.0-beta/dist/katex.min.js" integrity="sha384-U8Vrjwb8fuHMt6ewaCy8uqeUXv4oitYACKdB0VziCerzt011iQ/0TqlSlv8MReCm" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/katex@0.10.0-beta/dist/contrib/auto-render.min.js" integrity="sha384-aGfk5kvhIq5x1x5YdvCp4upKZYnA8ckafviDpmWEKp4afOZEqOli7gqSnh8I6enH" crossorigin="anonymous"></script>
    {% else %}
        {#  Note: given the size of MathJax; nikola will retrieve MathJax from a CDN regardless of use_cdn configuration #}
        <script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML" integrity="sha256-SDRP1VVYu+tgAGKhddBSl5+ezofHKZeI+OzxakbIe/Y=" crossorigin="anonymous"></script>
    {% endif %}
{% endmacro %}

{% macro math_scripts() %}
    {{ math_scripts_files() }}
    {% if use_katex %}
        {% if katex_auto_render %}
            <script>
                renderMathInElement(document.body,
                    {
                        {{ katex_auto_render }}
                    }
                );
            </script>
        {% else %}
            <script>
                renderMathInElement(document.body,
                    {
                        delimiters: [
                            {left: "$$", right: "$$", display: true},
                            {left: "\\[", right: "\\]", display: true},
                            {left: "\\begin{equation*}", right: "\\end{equation*}", display: true},
                            {left: "\\(", right: "\\)", display: false}
                        ]
                    }
                );
            </script>
        {% endif %}
    {% else %}
        {% if mathjax_config %}
        {{ mathjax_config }}
        {% else %}
        <script type="text/x-mathjax-config">
        MathJax.Hub.Config({tex2jax: {inlineMath: [['$latex ','$'], ['\\(','\\)']]}});
        </script>
        {% endif %}
    {% endif %}
{% endmacro %}

{% macro jupyter_math_scripts() %}
    {{ math_scripts_files() }}
    {% if use_katex %}
        <script>
            renderMathInElement(document.body,
                {
                    delimiters: [
                        {left: "$$", right: "$$", display: true},
                        {left: "\\[", right: "\\]", display: true},
                        {left: "\\begin{equation*}", right: "\\end{equation*}", display: true},
                        {left: "$", right: "$", display: false},
                        {left: "\\(", right: "\\)", display: false}
                    ]
                }
            );
        </script>
    {% else %}
        <script type="text/x-mathjax-config">
        MathJax.Hub.Config({
            tex2jax: {
                inlineMath: [ ['$','$'], ["\\\(","\\\)"] ],
                displayMath: [ ['$$','$$'], ["\\\[","\\\]"] ],
                processEscapes: true
            },
            displayAlign: 'center', // Change this to 'left' if you want left-aligned equations.
            "HTML-CSS": {
                styles: {'.MathJax_Display': {"margin": 0}}
            }
        });
        </script>
    {% endif %}
{% endmacro %}

{% macro math_styles() %}
    {% if use_katex %}
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.10.0-beta/dist/katex.min.css" integrity="sha384-9tPv11A+glH/on/wEu99NVwDPwkMQESOocs/ZGXPoIiLE8MU/qkqUcZ3zzL+6DuH" crossorigin="anonymous">
    {% endif %}
{% endmacro %}

{% macro math_scripts_ifpost(post) %}
    {% if post.has_math %}
        {{ math_scripts() }}
    {% endif %}
{% endmacro %}

{% macro math_scripts_ifposts(posts) %}
    {% if posts|selectattr("has_math")|list %}
        {{ math_scripts() }}
    {% endif %}
{% endmacro %}

{% macro math_styles_ifpost(post) %}
    {% if post.has_math %}
        {{ math_styles() }}
    {% endif %}
{% endmacro %}

{% macro math_styles_ifposts(posts) %}
    {% if posts|selectattr("has_math")|list %}
        {{ math_styles() }}
    {% endif %}
{% endmacro %}
